{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\statistics\\\\charts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { useThemeState } from \"../../context/themeContext\"; // import Plot from \"react-plotly.js\";\n// import Plotly from \"plotly.js/dist/plotly-basic\";\n// import createPlotlyComponent from \"react-plotly.js/factory\";\n// const Plot = createPlotlyComponent(Plotly);\n\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopulationChart extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props.data);\n    this.state = props.data;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 200,\n      height: 60,\n      data: this.state,\n      margin: {\n        top: 5,\n        right: 0,\n        left: 0,\n        bottom: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ChartsModal = props => {\n  _s();\n\n  const {\n    theme\n  } = useThemeState();\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Charts Statisitcs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          margin: 0,\n          padding: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            padding: 0,\n            margin: 0,\n            borderRadius: 4,\n            border: `2px solid ${theme.optionsBorderColor}`,\n            padding: 2,\n            margin: 2,\n            height: \"100%\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PopulationChart, {\n            data: props.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartsModal, \"JBFva1aF8HNXAo0/zlmf1Zz36RQ=\", false, function () {\n  return [useThemeState];\n});\n\n_c = ChartsModal;\nexport default ChartsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartsModal\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/statistics/charts.js"],"names":["React","Modal","Button","Row","Col","useThemeState","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","PopulationChart","Component","constructor","props","console","log","data","state","render","top","right","left","bottom","ChartsModal","theme","margin","padding","borderRadius","border","optionsBorderColor","height","width","onHide"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useThemeState } from \"../../context/themeContext\";\r\n// import Plot from \"react-plotly.js\";\r\n\r\n// import Plotly from \"plotly.js/dist/plotly-basic\";\r\n\r\n// import createPlotlyComponent from \"react-plotly.js/factory\";\r\n// const Plot = createPlotlyComponent(Plotly);\r\n\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nclass PopulationChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.data);\r\n    this.state = props.data;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AreaChart\r\n        width={200}\r\n        height={60}\r\n        data={this.state}\r\n        margin={{\r\n          top: 5,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n      </AreaChart>\r\n    );\r\n  }\r\n}\r\n\r\nconst ChartsModal = (props) => {\r\n  const { theme } = useThemeState();\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Charts Statisitcs\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row style={{ margin: 0, padding: 2 }}>\r\n          <Col\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              borderRadius: 4,\r\n              border: `2px solid ${theme.optionsBorderColor}`,\r\n              padding: 2,\r\n              margin: 2,\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <PopulationChart data={props.data}></PopulationChart>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChartsModal;\r\n"]},"metadata":{},"sourceType":"module"}