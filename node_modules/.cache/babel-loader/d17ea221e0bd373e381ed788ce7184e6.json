{"ast":null,"code":"import _slicedToArray from\"E:/projects/Fun/genetic algorithm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var darkTheme={adultCreatureColor:\"#FF4489\",babyCreatureColor:\"#E8FF95\",earthColor:\"#2A2A2A\",optionsColor:\"#FFFFFF\",optionsFontColor:\"#545454\",optionsBorderColor:\"#ACACAC\",buttonTheme:\"dark\"};var ThemeStateContext=/*#__PURE__*/React.createContext(undefined);var ThemeActionsContext=/*#__PURE__*/React.createContext(undefined);var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState(darkTheme),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];return/*#__PURE__*/_jsx(ThemeStateContext.Provider,{value:{theme:theme},children:/*#__PURE__*/_jsx(ThemeActionsContext.Provider,{value:{setTheme:setTheme},children:children})});};var useThemeState=function useThemeState(){var context=React.useContext(ThemeStateContext);if(context===undefined){throw new Error(\"useThemeState must be used within a ThemeProvider\");}return context;};var useThemeActions=function useThemeActions(){var context=React.useContext(ThemeActionsContext);if(context===undefined){throw new Error(\"useThemeActions must be used within a ThemeProvider\");}return context;};export{useThemeState,useThemeActions,ThemeProvider};","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/themeContext.js"],"names":["React","useEffect","useState","darkTheme","adultCreatureColor","babyCreatureColor","earthColor","optionsColor","optionsFontColor","optionsBorderColor","buttonTheme","ThemeStateContext","createContext","undefined","ThemeActionsContext","ThemeProvider","children","theme","setTheme","useThemeState","context","useContext","Error","useThemeActions"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,kBAAkB,CAAE,SADJ,CAEhBC,iBAAiB,CAAE,SAFH,CAGhBC,UAAU,CAAE,SAHI,CAIhBC,YAAY,CAAE,SAJE,CAKhBC,gBAAgB,CAAE,SALF,CAMhBC,kBAAkB,CAAE,SANJ,CAOhBC,WAAW,CAAE,MAPG,CAAlB,CASA,GAAMC,CAAAA,iBAAiB,cAAGX,KAAK,CAACY,aAAN,CAAoBC,SAApB,CAA1B,CACA,GAAMC,CAAAA,mBAAmB,cAAGd,KAAK,CAACY,aAAN,CAAoBC,SAApB,CAA5B,CAEA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACZd,QAAQ,CAACC,SAAD,CADI,wCAC/Bc,KAD+B,eACxBC,QADwB,eAGtC,mBACE,KAAC,iBAAD,CAAmB,QAAnB,EACE,KAAK,CAAE,CACLD,KAAK,CAALA,KADK,CADT,uBAKE,KAAC,mBAAD,CAAqB,QAArB,EACE,KAAK,CAAE,CACLC,QAAQ,CAARA,QADK,CADT,UAKGF,QALH,EALF,EADF,CAeD,CAlBD,CAoBA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,OAAO,CAAGpB,KAAK,CAACqB,UAAN,CAAiBV,iBAAjB,CAAhB,CACA,GAAIS,OAAO,GAAKP,SAAhB,CAA2B,CACzB,KAAM,IAAIS,CAAAA,KAAJ,CAAU,mDAAV,CAAN,CACD,CAED,MAAOF,CAAAA,OAAP,CACD,CAPD,CASA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,GAAMH,CAAAA,OAAO,CAAGpB,KAAK,CAACqB,UAAN,CAAiBP,mBAAjB,CAAhB,CACA,GAAIM,OAAO,GAAKP,SAAhB,CAA2B,CACzB,KAAM,IAAIS,CAAAA,KAAJ,CAAU,qDAAV,CAAN,CACD,CAED,MAAOF,CAAAA,OAAP,CACD,CAPD,CASA,OAASD,aAAT,CAAwBI,eAAxB,CAAyCR,aAAzC","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst darkTheme = {\r\n  adultCreatureColor: \"#FF4489\",\r\n  babyCreatureColor: \"#E8FF95\",\r\n  earthColor: \"#2A2A2A\",\r\n  optionsColor: \"#FFFFFF\",\r\n  optionsFontColor: \"#545454\",\r\n  optionsBorderColor: \"#ACACAC\",\r\n  buttonTheme: \"dark\",\r\n};\r\nconst ThemeStateContext = React.createContext(undefined);\r\nconst ThemeActionsContext = React.createContext(undefined);\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(darkTheme);\r\n\r\n  return (\r\n    <ThemeStateContext.Provider\r\n      value={{\r\n        theme,\r\n      }}\r\n    >\r\n      <ThemeActionsContext.Provider\r\n        value={{\r\n          setTheme,\r\n        }}\r\n      >\r\n        {children}\r\n      </ThemeActionsContext.Provider>\r\n    </ThemeStateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useThemeState = () => {\r\n  const context = React.useContext(ThemeStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useThemeState must be used within a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nconst useThemeActions = () => {\r\n  const context = React.useContext(ThemeActionsContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useThemeActions must be used within a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { useThemeState, useThemeActions, ThemeProvider };\r\n"]},"metadata":{},"sourceType":"module"}