{"ast":null,"code":"import{Vector}from\"../core/vector\";export function plagueInfectionToNeighbours(creatures){var n=creatures.current.length;for(var i=0;i<n;i++){var observer=creatures.current[i];if(observer.isInfected){for(var j=0;j<n;j++){var target=creatures.current[j];if(observer.pos.subtr(target.pos).mag()<20){target.infect();}}}}}function plagueInfectionOnMouseClick(creatures,mouse){var n=creatures.current.length;for(var i=0;i<n;i++){var observer=creatures.current[i];if(observer.pos.subtr(mouse).mag()<10){observer.infect();}}}function findNearestCalamity(calamities,creature){var creaturePos=creature.pos;var nearestCalamity=null;var minDist=100000;calamities.forEach(function(calamity){var calamityPos=new Vector(calamity.position.x,calamity.position.y);if(minDist>calamityPos.subtr(creaturePos).mag()&&calamityPos.subtr(creaturePos).mag()<calamity.size){minDist=calamityPos.subtr(creaturePos).mag();nearestCalamity=calamity;}});return nearestCalamity;}export function calamityEffect(creatures,calamities){if(calamities.current.length>0){creatures.current.forEach(function(creature,index){var nearestCalamity=findNearestCalamity(calamities.current,creature);if(nearestCalamity){creatures.current.splice(index,1);//add different effect for every calamity with different range\n}});}}export function handleCalamityEffect(creatures,calamities,calamityType,mouse,setCalamityPosition){if(calamityType.localeCompare(\"plague\")===0){plagueInfectionOnMouseClick(creatures,mouse);}else if(calamityType.localeCompare(\"none\")!==0&&calamities.length<5){setCalamityPosition({x:mouse.x,y:mouse.y});}}","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/gaFunctions/calamityEffect.js"],"names":["Vector","plagueInfectionToNeighbours","creatures","n","current","length","i","observer","isInfected","j","target","pos","subtr","mag","infect","plagueInfectionOnMouseClick","mouse","findNearestCalamity","calamities","creature","creaturePos","nearestCalamity","minDist","forEach","calamity","calamityPos","position","x","y","size","calamityEffect","index","splice","handleCalamityEffect","calamityType","setCalamityPosition","localeCompare"],"mappings":"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","sourcesContent":["import { Vector } from \"../core/vector\";\r\n\r\nexport function plagueInfectionToNeighbours(creatures) {\r\n  let n = creatures.current.length;\r\n  for (let i = 0; i < n; i++) {\r\n    const observer = creatures.current[i];\r\n    if (observer.isInfected) {\r\n      for (let j = 0; j < n; j++) {\r\n        const target = creatures.current[j];\r\n        if (observer.pos.subtr(target.pos).mag() < 20) {\r\n          target.infect();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction plagueInfectionOnMouseClick(creatures, mouse) {\r\n  const n = creatures.current.length;\r\n  for (let i = 0; i < n; i++) {\r\n    const observer = creatures.current[i];\r\n    if (observer.pos.subtr(mouse).mag() < 10) {\r\n      observer.infect();\r\n    }\r\n  }\r\n}\r\n\r\nfunction findNearestCalamity(calamities, creature) {\r\n  const creaturePos = creature.pos;\r\n  let nearestCalamity = null;\r\n  let minDist = 100000;\r\n  calamities.forEach((calamity) => {\r\n    const calamityPos = new Vector(calamity.position.x, calamity.position.y);\r\n    if (\r\n      minDist > calamityPos.subtr(creaturePos).mag() &&\r\n      calamityPos.subtr(creaturePos).mag() < calamity.size\r\n    ) {\r\n      minDist = calamityPos.subtr(creaturePos).mag();\r\n      nearestCalamity = calamity;\r\n    }\r\n  });\r\n  return nearestCalamity;\r\n}\r\nexport function calamityEffect(creatures, calamities) {\r\n  if (calamities.current.length > 0) {\r\n    creatures.current.forEach((creature, index) => {\r\n      const nearestCalamity = findNearestCalamity(calamities.current, creature);\r\n      if (nearestCalamity) {\r\n        creatures.current.splice(index, 1);\r\n        //add different effect for every calamity with different range\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function handleCalamityEffect(\r\n  creatures,\r\n  calamities,\r\n  calamityType,\r\n  mouse,\r\n  setCalamityPosition\r\n) {\r\n  if (calamityType.localeCompare(\"plague\") === 0) {\r\n    plagueInfectionOnMouseClick(creatures, mouse);\r\n  } else if (\r\n    calamityType.localeCompare(\"none\") !== 0 &&\r\n    calamities.length < 5\r\n  ) {\r\n    setCalamityPosition({\r\n      x: mouse.x,\r\n      y: mouse.y,\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}