{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demo = Array.from(Array(20).keys());\n\nconst Earth = () => {\n  _s();\n\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const earthRef = /*#__PURE__*/createRef();\n\n  function addNewCreature() {\n    const creaturesTemp = creatures;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      top: Math.floor(Math.random() * earthDimensions.h + earthDimensions.top),\n      left: Math.floor(Math.random() * earthDimensions.w + earthDimensions.left)\n    });\n  }\n\n  useEffect(() => {\n    console.log({ ...earthRef\n    });\n\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#2C931D\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    children: earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderRadius: 5,\n          height: 10,\n          width: 10,\n          backgroundColor: \"#111111\",\n          position: \"absolute\",\n          top: creature.top,\n          left: creature.left\n        }\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"eKDhjuH0fAMRnIgNc3+v8xE2nkI=\");\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/screen.js"],"names":["createRef","useEffect","useState","v4","uuidv4","demo","Array","from","keys","Earth","creatures","setCreatures","earthDimensions","setEarthDimensions","earthRef","addNewCreature","creaturesTemp","push","uid","top","Math","floor","random","h","left","w","console","log","current","offsetTop","offsetLeft","offsetWidth","offsetHeight","backgroundColor","height","width","map","creature","borderRadius","position"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AACA,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,CAAb;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAMY,QAAQ,gBAAGd,SAAS,EAA1B;;AAEA,WAASe,cAAT,GAA0B;AACxB,UAAMC,aAAa,GAAGN,SAAtB;AACAM,IAAAA,aAAa,CAACC,IAAd,CAAmB;AACjBC,MAAAA,GAAG,EAAEd,MAAM,EADM;AAEjBe,MAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,eAAe,CAACW,CAAhC,GAAoCX,eAAe,CAACO,GAA/D,CAFY;AAGjBK,MAAAA,IAAI,EAAEJ,IAAI,CAACC,KAAL,CACJD,IAAI,CAACE,MAAL,KAAgBV,eAAe,CAACa,CAAhC,GAAoCb,eAAe,CAACY,IADhD;AAHW,KAAnB;AAOD;;AACDvB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAE,GAAGb;AAAL,KAAZ;;AACA,QAAIA,QAAQ,IAAIA,QAAQ,CAACc,OAArB,IAAgC,CAAChB,eAArC,EAAsD;AACpDC,MAAAA,kBAAkB,CAAC;AACjBM,QAAAA,GAAG,EAAEL,QAAQ,CAACc,OAAT,CAAiBC,SADL;AAEjBL,QAAAA,IAAI,EAAEV,QAAQ,CAACc,OAAT,CAAiBE,UAFN;AAGjBL,QAAAA,CAAC,EAAEX,QAAQ,CAACc,OAAT,CAAiBG,WAHH;AAIjBR,QAAAA,CAAC,EAAET,QAAQ,CAACc,OAAT,CAAiBI;AAJH,OAAD,CAAlB;AAMD;AACF,GAVQ,EAUN,CAAClB,QAAD,CAVM,CAAT;AAWA,sBACE;AACE,IAAA,GAAG,EAAEA,QADP;AAEE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,MAAM,EAAE,MAAtC;AAA8CC,MAAAA,KAAK,EAAE;AAArD,KAFT;AAAA,cAIGrB,QAAQ,IAAIF,eAAZ,GACGF,SAAS,CAAC0B,GAAV,CAAeC,QAAD,IAAc;AAC1B,0BACE;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,CADT;AAELJ,UAAAA,MAAM,EAAE,EAFH;AAGLC,UAAAA,KAAK,EAAE,EAHF;AAILF,UAAAA,eAAe,EAAE,SAJZ;AAKLM,UAAAA,QAAQ,EAAE,UALL;AAMLpB,UAAAA,GAAG,EAAEkB,QAAQ,CAAClB,GANT;AAOLK,UAAAA,IAAI,EAAEa,QAAQ,CAACb;AAPV;AAFT,SACOa,QAAQ,CAACnB,GADhB;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfD,CADH,GAiBG;AArBN;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnDD;;GAAMT,K;;KAAAA,K;AAqDN,eAAeA,KAAf","sourcesContent":["import { createRef, useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst demo = Array.from(Array(20).keys());\r\nconst Earth = () => {\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const earthRef = createRef();\r\n\r\n  function addNewCreature() {\r\n    const creaturesTemp = creatures;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      top: Math.floor(Math.random() * earthDimensions.h + earthDimensions.top),\r\n      left: Math.floor(\r\n        Math.random() * earthDimensions.w + earthDimensions.left\r\n      ),\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    console.log({ ...earthRef });\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n  return (\r\n    <div\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#2C931D\", height: \"100%\", width: \"100%\" }}\r\n    >\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <div\r\n                key={creature.uid}\r\n                style={{\r\n                  borderRadius: 5,\r\n                  height: 10,\r\n                  width: 10,\r\n                  backgroundColor: \"#111111\",\r\n                  position: \"absolute\",\r\n                  top: creature.top,\r\n                  left: creature.left,\r\n                }}\r\n              ></div>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}