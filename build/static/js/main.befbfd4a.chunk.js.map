{"version":3,"sources":["logo.svg","components/data/tree.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["treeData","name","tooltip","Description","children","Preferences","props","useState","isPreferencesVis","setIsPreferencesOn","disappearingToolTip","setDisappearingToolTip","style","right","top","margin","position","display","Card","padding","width","fontSize","fontWeight","color","backgroundColor","Row","Col","float","onClick","textAlign","onColor","activeBoxShadow","height","checked","onChange","e","console","log","Tooltip","left","bottom","OrgChartTree","treeRef","useRef","x","y","translation","setTranslation","depth","setDepth","min","max","scaleExtent","setScaleExtent","isToolTipVis","setIsToolTipVis","useEffect","Math","floor","current","clientHeight","clientWidth","temp_y","temp_max","id","ref","data","enableLegacyTransitions","orientation","transitionDuration","rootNodeClassName","branchNodeClassName","leafNodeClassName","initialDepth","translate","collapsible","zoomable","zoom","separation","siblings","nonSiblings","shouldCollapseNeighborNodes","onNodeClick","args","__rd3t","onNodeMouseOver","onNodeMouseOut","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.befbfd4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const treeData = {\r\n  name: \"Kaguya\",\r\n  tooltip: {\r\n    Description: \"Assembly\",\r\n  },\r\n  children: [\r\n    {\r\n      name: \"Hagoromo\",\r\n      tooltip: {\r\n        Description: \"Sage of six paths\",\r\n      },\r\n      children: [\r\n        {\r\n          name: \"Indra\",\r\n          tooltip: {\r\n            Description: \"Uchiha clan\",\r\n          },\r\n          children: [\r\n            {\r\n              name: \"Tajima\",\r\n              tooltip: {\r\n                Description: \"Uchiha clan member\",\r\n              },\r\n              children: [\r\n                {\r\n                  name: \"Madara Uchiha\",\r\n                  tooltip: {\r\n                    Description: \"Uchiha leader\",\r\n                  },\r\n                  children: [],\r\n                },\r\n                {\r\n                  name: \"Izuna Uchiha\",\r\n                  tooltip: {\r\n                    Description: \"Brother of Madara\",\r\n                  },\r\n                  children: [],\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Ashura\",\r\n          tooltip: {\r\n            Description: \"Senju and Uzumaki clan\",\r\n          },\r\n          children: [\r\n            {\r\n              name: \"Butsuma Senju\",\r\n              tooltip: {\r\n                Description: \"Senju clan member\",\r\n              },\r\n              children: [\r\n                {\r\n                  name: \"Itama Senju\",\r\n                  tooltip: {\r\n                    Description: \"Senju clan member\",\r\n                  },\r\n                  children: [],\r\n                },\r\n                {\r\n                  name: \"Hashirama Senju\",\r\n                  tooltip: {\r\n                    Description: \"Senju clan leader and 1st Hokage of konoha\",\r\n                  },\r\n                  children: [],\r\n                },\r\n                {\r\n                  name: \"Tobirama Senju\",\r\n                  tooltip: {\r\n                    Description: \"Senju clan leader and 2nd hokage of konoha\",\r\n                  },\r\n                  children: [],\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              name: \"Ashina Uzumaki\",\r\n              tooltip: {\r\n                Description: \"Uzumaki clan\",\r\n              },\r\n              children: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Hamura\",\r\n      tooltip: {\r\n        Description: \"Otsutsuki on moon and hyuga on earth\",\r\n      },\r\n      children: [\r\n        {\r\n          name: \"Otsutsuki\",\r\n          tooltip: {\r\n            Description: \"Otsutsuki on moon\",\r\n          },\r\n          children: [\r\n            {\r\n              name: \"Main\",\r\n              tooltip: {\r\n                Description: \"Main branch of Otsutsuki of moon\",\r\n              },\r\n              children: [],\r\n            },\r\n            {\r\n              name: \"Side\",\r\n              tooltip: {\r\n                Description: \"Side branch of Otsutsuki of moon\",\r\n              },\r\n              children: [],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"Hyuga\",\r\n          tooltip: {\r\n            Description: \"Hyuga clan\",\r\n          },\r\n          children: [\r\n            {\r\n              name: \"Main\",\r\n              tooltip: {\r\n                Description: \"Main branch of Hyuga clan\",\r\n              },\r\n              children: [],\r\n            },\r\n            {\r\n              name: \"Side\",\r\n              tooltip: {\r\n                Description: \"Side branch of Hyuga clan\",\r\n              },\r\n              children: [],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default treeData;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\nimport \"./home.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Switch from \"react-switch\";\r\n// This is a simplified example of an org chart with a depth of 2.\r\n// Note how deeper levels are defined recursively via the `children` property.\r\nimport treeData from \"./data/tree\";\r\nimport { Col, Container, Row, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { BsFillGrid3X3GapFill, BsList, BsX } from \"react-icons/bs\";\r\nimport { findRenderedDOMComponentWithClass } from \"react-dom/cjs/react-dom-test-utils.development\";\r\nconst Preferences = (props) => {\r\n  const [isPreferencesVis, setIsPreferencesOn] = useState(false);\r\n  const [disappearingToolTip, setDisappearingToolTip] = useState(\r\n    props.disappearingToolTip\r\n  );\r\n  return (\r\n    <div\r\n      style={{\r\n        right: 0,\r\n        top: 0,\r\n        margin: 12,\r\n        // height: \"40vh\",\r\n        // width: \"20vw\",\r\n        position: \"absolute\",\r\n        display: \"block\",\r\n        // backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      {isPreferencesVis ? (\r\n        <Card\r\n          style={{\r\n            margin: 8,\r\n            padding: 4,\r\n            // height: \"30vh\",\r\n            width: \"15vw\",\r\n            fontSize: 10,\r\n            fontWeight: \"500\",\r\n            color: \"white\",\r\n            backgroundColor: \"#4f4f4f\",\r\n          }}\r\n          //   onMouseOut={() => {\r\n          //     setIsPreferencesOn(false);\r\n          //   }}\r\n        >\r\n          <Row style={{ padding: 0, margin: 0 }}>\r\n            <Col style={{ padding: 0, margin: 0 }}>\r\n              <BsX\r\n                style={{ float: \"right\", fontSize: 15 }}\r\n                onClick={() => {\r\n                  setIsPreferencesOn(false);\r\n                }}\r\n              ></BsX>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ padding: 2, margin: 2 }}>\r\n            <Col style={{ padding: 0, margin: 0 }}>\r\n              <span style={{ padding: 0, margin: 0, float: \"left\" }}>\r\n                Disappearing tooltip\r\n              </span>\r\n            </Col>\r\n            <Col style={{ padding: 0, margin: 0, textAlign: \"right\" }}>\r\n              <Switch\r\n                onColor=\"#ff8d29\"\r\n                activeBoxShadow=\"\"\r\n                height={14}\r\n                width={25}\r\n                checked={disappearingToolTip}\r\n                onChange={(e) => {\r\n                  console.log(e);\r\n                  setDisappearingToolTip(e);\r\n                  props.setDisappearingToolTip(e);\r\n                }}\r\n              ></Switch>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            style={{ padding: 1, margin: 0, backgroundColor: \"#717171\" }}\r\n          ></Row>\r\n        </Card>\r\n      ) : (\r\n        <BsList\r\n          onClick={() => {\r\n            setIsPreferencesOn(true);\r\n          }}\r\n          style={{\r\n            margin: 8,\r\n            color: \"white\",\r\n            fontSize: 20,\r\n          }}\r\n        ></BsList>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst Tooltip = (props) => {\r\n  return (\r\n    <Card\r\n      style={{\r\n        left: 0,\r\n        bottom: 0,\r\n        margin: 12,\r\n        height: \"60vh\",\r\n        width: \"15vw\",\r\n        position: \"absolute\",\r\n        display: \"block\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    ></Card>\r\n  );\r\n};\r\nexport default function OrgChartTree() {\r\n  const treeRef = useRef(null);\r\n  const [translation, setTranslation] = useState({ x: 0, y: 0 });\r\n  const [depth, setDepth] = useState(0);\r\n  const [scaleExtent, setScaleExtent] = useState({ min: 0.1, max: 1 });\r\n  const [tooltip, setTooltip] = useState({});\r\n  const [isToolTipVis, setIsToolTipVis] = useState(false);\r\n  const [disappearingToolTip, setDisappearingToolTip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(treeRef);\r\n    setTranslation({\r\n      y: Math.floor(treeRef.current.clientHeight / 2),\r\n      x: Math.floor(treeRef.current.clientWidth / 2),\r\n    });\r\n  }, [treeRef]);\r\n\r\n  useEffect(() => {\r\n    console.log(depth);\r\n    if (depth > 0) {\r\n      var temp_y = translation.y;\r\n      temp_y = Math.floor(temp_y - temp_y / 7);\r\n      setTranslation({ x: translation.x, y: temp_y });\r\n\r\n      var temp_max = scaleExtent.max;\r\n      temp_max = temp_max - 0.08;\r\n      setScaleExtent({ min: scaleExtent.min, max: temp_max });\r\n    }\r\n  }, [depth]);\r\n  return (\r\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\r\n    <div\r\n      id=\"treeWrapper\"\r\n      ref={treeRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        padding: 0,\r\n        margin: 0,\r\n\r\n        backgroundColor: \"black\",\r\n      }}\r\n    >\r\n      <Preferences\r\n        setDisappearingToolTip={setDisappearingToolTip}\r\n        disappearingToolTip={disappearingToolTip}\r\n      ></Preferences>\r\n      {disappearingToolTip ? (\r\n        isToolTipVis ? (\r\n          <Tooltip></Tooltip>\r\n        ) : null\r\n      ) : (\r\n        <Tooltip></Tooltip>\r\n      )}\r\n      <Tree\r\n        data={treeData}\r\n        enableLegacyTransitions={true}\r\n        orientation=\"vertical\"\r\n        transitionDuration={300}\r\n        rootNodeClassName=\"node__root\"\r\n        branchNodeClassName=\"node__branch\"\r\n        leafNodeClassName=\"node__leaf\"\r\n        initialDepth={0}\r\n        translate={translation}\r\n        collapsible={true}\r\n        zoomable={true}\r\n        zoom={1}\r\n        scaleExtent={scaleExtent}\r\n        separation={{ siblings: 1, nonSiblings: 1 }}\r\n        shouldCollapseNeighborNodes={false}\r\n        onNodeClick={(...args) => {\r\n          console.log(args);\r\n          if (args[0].__rd3t.depth > depth) setDepth(args[0].__rd3t.depth);\r\n        }}\r\n        onNodeMouseOver={(...args) => {\r\n          if (isToolTipVis === false) {\r\n            setIsToolTipVis(true);\r\n          }\r\n        }}\r\n        onNodeMouseOut={(...args) => {\r\n          setIsToolTipVis(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport FamilyTree from \"./components/home\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <FamilyTree></FamilyTree>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}