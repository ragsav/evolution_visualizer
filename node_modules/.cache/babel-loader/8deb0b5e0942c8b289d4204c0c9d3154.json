{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { Group } from '@visx/group';\nimport { tree as d3tree } from 'd3-hierarchy';\nimport DefaultLink from '../HierarchyDefaultLink';\nimport DefaultNode from '../HierarchyDefaultNode';\nexport default function Tree(_ref) {\n  var top = _ref.top,\n      left = _ref.left,\n      className = _ref.className,\n      root = _ref.root,\n      size = _ref.size,\n      nodeSize = _ref.nodeSize,\n      separation = _ref.separation,\n      children = _ref.children,\n      _ref$linkComponent = _ref.linkComponent,\n      linkComponent = _ref$linkComponent === void 0 ? DefaultLink : _ref$linkComponent,\n      _ref$nodeComponent = _ref.nodeComponent,\n      nodeComponent = _ref$nodeComponent === void 0 ? DefaultNode : _ref$nodeComponent;\n  var tree = d3tree();\n  if (size) tree.size(size);\n  if (nodeSize) tree.nodeSize(nodeSize);\n  if (separation) tree.separation(separation);\n  var data = tree(root);\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children(data));\n  return /*#__PURE__*/React.createElement(Group, {\n    top: top,\n    left: left,\n    className: cx('visx-tree', className)\n  }, linkComponent && data.links().map(function (link, i) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: \"tree-link-\" + i\n    }, /*#__PURE__*/React.createElement(linkComponent, {\n      link: link\n    }));\n  }), nodeComponent && data.descendants().map(function (node, i) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: \"tree-node-\" + i\n    }, /*#__PURE__*/React.createElement(nodeComponent, {\n      node: node\n    }));\n  }));\n}\nTree.propTypes = {\n  children: _pt.func,\n  top: _pt.number,\n  left: _pt.number,\n  className: _pt.string,\n  separation: _pt.func\n};","map":{"version":3,"sources":["E:/projects/Fun/naruto/node_modules/@visx/hierarchy/esm/hierarchies/Tree.js"],"names":["_pt","React","cx","Group","tree","d3tree","DefaultLink","DefaultNode","Tree","_ref","top","left","className","root","size","nodeSize","separation","children","_ref$linkComponent","linkComponent","_ref$nodeComponent","nodeComponent","data","createElement","Fragment","links","map","link","i","key","descendants","node","propTypes","func","number","string"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { Group } from '@visx/group';\nimport { tree as d3tree } from 'd3-hierarchy';\nimport DefaultLink from '../HierarchyDefaultLink';\nimport DefaultNode from '../HierarchyDefaultNode';\nexport default function Tree(_ref) {\n  var top = _ref.top,\n      left = _ref.left,\n      className = _ref.className,\n      root = _ref.root,\n      size = _ref.size,\n      nodeSize = _ref.nodeSize,\n      separation = _ref.separation,\n      children = _ref.children,\n      _ref$linkComponent = _ref.linkComponent,\n      linkComponent = _ref$linkComponent === void 0 ? DefaultLink : _ref$linkComponent,\n      _ref$nodeComponent = _ref.nodeComponent,\n      nodeComponent = _ref$nodeComponent === void 0 ? DefaultNode : _ref$nodeComponent;\n  var tree = d3tree();\n  if (size) tree.size(size);\n  if (nodeSize) tree.nodeSize(nodeSize);\n  if (separation) tree.separation(separation);\n  var data = tree(root);\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children(data));\n  return /*#__PURE__*/React.createElement(Group, {\n    top: top,\n    left: left,\n    className: cx('visx-tree', className)\n  }, linkComponent && data.links().map(function (link, i) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: \"tree-link-\" + i\n    }, /*#__PURE__*/React.createElement(linkComponent, {\n      link: link\n    }));\n  }), nodeComponent && data.descendants().map(function (node, i) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: \"tree-node-\" + i\n    }, /*#__PURE__*/React.createElement(nodeComponent, {\n      node: node\n    }));\n  }));\n}\nTree.propTypes = {\n  children: _pt.func,\n  top: _pt.number,\n  left: _pt.number,\n  className: _pt.string,\n  separation: _pt.func\n};"]},"metadata":{},"sourceType":"module"}