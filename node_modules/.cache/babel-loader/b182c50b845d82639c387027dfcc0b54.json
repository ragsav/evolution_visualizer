{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\globalContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GlobalActionsContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction ga() {}\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n  const creatureRef = creatures.map(() => /*#__PURE__*/createRef());\n  useEffect(() => {\n    console.log(creatureRef);\n    creatureRef.forEach((ref, index) => {\n      if (ref && ref.current) {\n        console.log(\"here\");\n\n        const handler = e => {\n          if (e === null || e === void 0 ? void 0 : e.detail) {\n            const newC1 = e.detail;\n            creatures[index] = newC1;\n          }\n        };\n\n        ref.current.addEventListener(\"position\", handler);\n        return () => ref.current.removeEventListener(\"position\", handler);\n      }\n    });\n    console.log(creatures[0]);\n  }, [creatureRef]);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      creatures,\n      creatureRef\n    },\n    children: /*#__PURE__*/_jsxDEV(GlobalActionsContext.Provider, {\n      value: {\n        setCreatures\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"bS1qv/9E6yPBDgtvf7hFiOSGpjA=\");\n\n_c = GlobalContextProvider;\n\nconst useGlobalState = () => {\n  _s2();\n\n  const context = React.useContext(GlobalStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalState error\");\n  }\n\n  return context;\n};\n\n_s2(useGlobalState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useGlobalActions = () => {\n  _s3();\n\n  const context = React.useContext(GlobalActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalActions error\");\n  }\n\n  return context;\n};\n\n_s3(useGlobalActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/globalContext.js"],"names":["React","createRef","useEffect","useState","GlobalStateContext","createContext","undefined","GlobalActionsContext","ga","GlobalContextProvider","children","creatures","setCreatures","Array","from","keys","creatureRef","map","console","log","forEach","ref","index","current","handler","e","detail","newC1","addEventListener","removeEventListener","useGlobalState","context","useContext","Error","useGlobalActions"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;AAIA,MAAMC,kBAAkB,gBAAGJ,KAAK,CAACK,aAAN,CAAoBC,SAApB,CAA3B;AACA,MAAMC,oBAAoB,gBAAGP,KAAK,CAACK,aAAN,CAAoBC,SAApB,CAA7B;;AAEA,SAASE,EAAT,GAAa,CAEZ;;AAED,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAU9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACU,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,GAAD,CAAL,CAAWE,IAAX,EAAX,CAAD,CAA1C;AACA,QAAMC,WAAW,GAAEL,SAAS,CAACM,GAAV,CAAc,mBAAIhB,SAAS,EAA3B,CAAnB;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAA,IAAAA,WAAW,CAACI,OAAZ,CAAoB,CAACC,GAAD,EAAKC,KAAL,KAAa;AAE/B,UAAGD,GAAG,IAAEA,GAAG,CAACE,OAAZ,EAAoB;AAClBL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,cAAMK,OAAO,GAAIC,CAAD,IAAO;AAErB,cAAIA,CAAJ,aAAIA,CAAJ,uBAAIA,CAAC,CAAEC,MAAP,EAAe;AACb,kBAAMC,KAAK,GAAGF,CAAC,CAACC,MAAhB;AACAf,YAAAA,SAAS,CAACW,KAAD,CAAT,GAAiBK,KAAjB;AACD;AACF,SAND;;AAOAN,QAAAA,GAAG,CAACE,OAAJ,CAAYK,gBAAZ,CAA6B,UAA7B,EAAyCJ,OAAzC;AACA,eAAO,MAAMH,GAAG,CAACE,OAAJ,CAAYM,mBAAZ,CAAgC,UAAhC,EAA4CL,OAA5C,CAAb;AACD;AACF,KAdD;AAeAN,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAAC,CAAD,CAArB;AACD,GAlBQ,EAkBP,CAACK,WAAD,CAlBO,CAAT;AAqBA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,SADK;AAELK,MAAAA;AAFK,KADT;AAAA,2BAME,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAE;AAAEJ,QAAAA;AAAF,OAAtC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/CD;;GAAMD,qB;;KAAAA,qB;;AAiDN,MAAMqB,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAG/B,KAAK,CAACgC,UAAN,CAAiB5B,kBAAjB,CAAhB;;AACA,MAAI2B,OAAO,KAAKzB,SAAhB,EAA2B;AACzB,UAAM,IAAI2B,KAAJ,CACJ,sBADI,CAAN;AAGD;;AAED,SAAOF,OAAP;AACD,CATD;;IAAMD,c;;AAWN,MAAMI,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMH,OAAO,GAAG/B,KAAK,CAACgC,UAAN,CAAiBzB,oBAAjB,CAAhB;;AACA,MAAIwB,OAAO,KAAKzB,SAAhB,EAA2B;AACzB,UAAM,IAAI2B,KAAJ,CACJ,wBADI,CAAN;AAGD;;AAED,SAAOF,OAAP;AACD,CATD;;IAAMG,gB;;AAWN,SAASJ,cAAT,EAAyBI,gBAAzB,EAA2CzB,qBAA3C","sourcesContent":["import React, { createRef, useEffect, useState } from \"react\";\n\n\n\nconst GlobalStateContext = React.createContext(undefined);\nconst GlobalActionsContext = React.createContext(undefined);\n\nfunction ga(){\n\n}\n\nconst GlobalContextProvider = ({ children }) => {\n  \n\n  \n\n  \n\n  \n\n  \n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n  const creatureRef= creatures.map(()=>createRef());\n  \n\n  useEffect(()=>{\n    console.log(creatureRef)\n    creatureRef.forEach((ref,index)=>{\n\n      if(ref&&ref.current){\n        console.log(\"here\");\n        const handler = (e) => {\n          \n          if (e?.detail) {\n            const newC1 = e.detail;\n            creatures[index]=newC1;\n          }\n        };\n        ref.current.addEventListener(\"position\", handler);\n        return () => ref.current.removeEventListener(\"position\", handler);\n      }\n    })\n    console.log(creatures[0])\n  },[creatureRef])\n\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        creatures,\n        creatureRef,\n      }}\n    >\n      <GlobalActionsContext.Provider value={{ setCreatures }}>\n        {children}\n      </GlobalActionsContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useGlobalState = () => {\n  const context = React.useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalState error\"\n    );\n  }\n\n  return context;\n};\n\nconst useGlobalActions = () => {\n  const context = React.useContext(GlobalActionsContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalActions error\"\n    );\n  }\n\n  return context;\n};\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}