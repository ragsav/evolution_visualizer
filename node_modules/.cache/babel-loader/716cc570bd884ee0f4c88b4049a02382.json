{"ast":null,"code":"import { Vector } from \"./vector\";\nexport class Ball {\n  constructor(x, y, r, m, BALLZ) {\n    this.pos = new Vector(x, y);\n    this.r = r;\n    this.m = r ** 2;\n\n    if (this.m === 0) {\n      this.inv_m = 0;\n    } else {\n      this.inv_m = 1 / this.m;\n    }\n\n    this.elasticity = 3;\n    this.vel = new Vector(0, 0);\n    this.acc = new Vector(0, 0);\n    this.acceleration = 0;\n    this.player = false;\n    BALLZ.push(this);\n  }\n\n  drawBall(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  display(ctx) {// this.vel.drawVec(ctx, 550, 400, 10, \"green\");\n    // this.acc.unit().drawVec(ctx, 550, 400, 50, \"blue\");\n    // ctx.beginPath();\n    // ctx.arc(550, 400, 50, 0, 2 * Math.PI);\n    // ctx.strokeStyle = \"black\";\n    // ctx.stroke();\n    // ctx.closePath();\n  }\n\n  reposition(ctx) {\n    console.log(this.pos);\n    const multiplier = [1, -1];\n    const skipX = Math.random() * 1;\n    const skipY = Math.random() * 1;\n    const plusMinusX = Math.floor(Math.random() * 20);\n    const plusMinusY = Math.floor(Math.random() * 20);\n    const newPosition = {\n      x: this.pos.x + multiplier[plusMinusX] * skipX,\n      y: this.pos.y + multiplier[plusMinusY] * skipY\n    };\n\n    if (newPosition.x + this.r + 10 > window.innerWidth) {\n      newPosition.x = window.innerWidth - this.r - 10;\n    }\n\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\n      newPosition.y = window.innerHeight - this.r - 10;\n    }\n\n    if (newPosition.x < 10) {\n      newPosition.x = 10 + this.r;\n    }\n\n    if (newPosition.y < 10) {\n      newPosition.y = 10 + this.r;\n    }\n\n    console.log(newPosition); // this.acc = this.acc.unit().mult(this.acceleration);\n    // this.vel = this.vel.add(this.acc);\n    // this.vel = this.vel.mult(1 - 0.07);\n    // this.pos = this.pos.add(new Vector(newPosition.x, newPosition.y));\n    // console.log(this.pos);\n  }\n\n}","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/ball.js"],"names":["Vector","Ball","constructor","x","y","r","m","BALLZ","pos","inv_m","elasticity","vel","acc","acceleration","player","push","drawBall","ctx","beginPath","arc","Math","PI","fillStyle","fill","closePath","display","reposition","console","log","multiplier","skipX","random","skipY","plusMinusX","floor","plusMinusY","newPosition","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["import { Vector } from \"./vector\";\r\nexport class Ball {\r\n  constructor(x, y, r, m, BALLZ) {\r\n    this.pos = new Vector(x, y);\r\n    this.r = r;\r\n    this.m = r ** 2;\r\n    if (this.m === 0) {\r\n      this.inv_m = 0;\r\n    } else {\r\n      this.inv_m = 1 / this.m;\r\n    }\r\n    this.elasticity = 3;\r\n    this.vel = new Vector(0, 0);\r\n    this.acc = new Vector(0, 0);\r\n    this.acceleration = 0;\r\n    this.player = false;\r\n    BALLZ.push(this);\r\n  }\r\n\r\n  drawBall(ctx) {\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  display(ctx) {\r\n    // this.vel.drawVec(ctx, 550, 400, 10, \"green\");\r\n    // this.acc.unit().drawVec(ctx, 550, 400, 50, \"blue\");\r\n    // ctx.beginPath();\r\n    // ctx.arc(550, 400, 50, 0, 2 * Math.PI);\r\n    // ctx.strokeStyle = \"black\";\r\n    // ctx.stroke();\r\n    // ctx.closePath();\r\n  }\r\n  reposition(ctx) {\r\n    console.log(this.pos);\r\n    const multiplier = [1, -1];\r\n    const skipX = Math.random() * 1;\r\n    const skipY = Math.random() * 1;\r\n    const plusMinusX = Math.floor(Math.random() * 20);\r\n    const plusMinusY = Math.floor(Math.random() * 20);\r\n    const newPosition = {\r\n      x: this.pos.x + multiplier[plusMinusX] * skipX,\r\n      y: this.pos.y + multiplier[plusMinusY] * skipY,\r\n    };\r\n    if (newPosition.x + this.r + 10 > window.innerWidth) {\r\n      newPosition.x = window.innerWidth - this.r - 10;\r\n    }\r\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\r\n      newPosition.y = window.innerHeight - this.r - 10;\r\n    }\r\n    if (newPosition.x < 10) {\r\n      newPosition.x = 10 + this.r;\r\n    }\r\n    if (newPosition.y < 10) {\r\n      newPosition.y = 10 + this.r;\r\n    }\r\n    console.log(newPosition);\r\n    // this.acc = this.acc.unit().mult(this.acceleration);\r\n    // this.vel = this.vel.add(this.acc);\r\n    // this.vel = this.vel.mult(1 - 0.07);\r\n    // this.pos = this.pos.add(new Vector(newPosition.x, newPosition.y));\r\n    // console.log(this.pos);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}