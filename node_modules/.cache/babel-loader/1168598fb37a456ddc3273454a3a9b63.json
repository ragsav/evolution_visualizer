{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demo = Array.from(Array(20).keys());\n\nconst Creature = props => {\n  _s();\n\n  const earthDimensions = props.dim; //   console.log(earthDimensions);\n\n  const creatureRef = /*#__PURE__*/createRef();\n  const size = 10;\n  const [position, setPosition] = useState({\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2)\n  });\n\n  function changePosition() {\n    const pos = [1, -1];\n    const skipX = Math.floor(Math.random() * 20);\n    const skipY = Math.floor(Math.random() * 20);\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2);\n    const newPosition = {\n      x: position.x + pos[plusMinusX] * skipX,\n      y: position.y + pos[plusMinusY] * skipY\n    };\n\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\n      newPosition.x = props.dim.w + props.dim.left - size;\n    }\n\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\n      newPosition.y = props.dim.h + props.dim.top - size;\n    }\n\n    if (newPosition.x < props.dim.left) {\n      newPosition.x = props.dim.left;\n    }\n\n    if (newPosition.y < props.dim.top) {\n      newPosition.y = props.dim.top;\n    }\n\n    setPosition(newPosition);\n  }\n\n  function getNeighbourHood() {\n    if (creatureRef && creatureRef.current) {\n      console.log(creatureRef);\n    }\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      changePosition();\n      getNeighbourHood();\n    }, Math.floor(Math.random() * 5000) + 10);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.uid,\n    ref: creatureRef,\n    style: {\n      borderRadius: 5,\n      height: 10,\n      width: 10,\n      backgroundColor: \"#111111\",\n      position: \"absolute\",\n      top: position.y,\n      left: position.x,\n      transition: \"all 0.5s ease-in-out\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Creature, \"jU2vVmKAeSzn9otDFcvSfc5jr9I=\");\n\n_c = Creature;\n\nconst Earth = () => {\n  _s2();\n\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const earthRef = /*#__PURE__*/createRef();\n\n  function addNewCreature() {\n    const creaturesTemp = creatures;\n    creaturesTemp.push({\n      uid: uuidv4()\n    });\n    setCreatures([...creaturesTemp]);\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creatures;\n    creaturesTemp.splice(Math.floor(Math.random() * creatures.length), 1);\n    setCreatures([...creaturesTemp]);\n  }\n\n  useEffect(() => {\n    console.log({ ...earthRef\n    });\n\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n\n      for (var i = 0; i < 20; i++) {\n        addNewCreature();\n      }\n    }\n  }, [earthRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#2C931D\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    onClick: e => {\n      // console.log(onClick);\n      e.preventDefault();\n      removeRandom();\n    },\n    children: earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        dim: earthDimensions\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Earth, \"eKDhjuH0fAMRnIgNc3+v8xE2nkI=\");\n\n_c2 = Earth;\nexport default Earth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Creature\");\n$RefreshReg$(_c2, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/screen.js"],"names":["createRef","useEffect","useRef","useState","v4","uuidv4","demo","Array","from","keys","Creature","props","earthDimensions","dim","creatureRef","size","position","setPosition","x","Math","floor","w","random","left","y","h","top","changePosition","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","getNeighbourHood","current","console","log","interval","setInterval","clearInterval","uid","borderRadius","height","width","backgroundColor","transition","Earth","creatures","setCreatures","setEarthDimensions","earthRef","addNewCreature","creaturesTemp","push","removeRandom","splice","length","offsetTop","offsetLeft","offsetWidth","offsetHeight","i","e","preventDefault","map","creature"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst demo = Array.from(Array(20).keys());\r\n\r\nconst Creature = (props) => {\r\n  const earthDimensions = props.dim;\r\n  //   console.log(earthDimensions);\r\n  const creatureRef = createRef();\r\n  const size = 10;\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\r\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2),\r\n  });\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 20);\r\n    const skipY = Math.floor(Math.random() * 20);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n\r\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\r\n      newPosition.x = props.dim.w + props.dim.left - size;\r\n    }\r\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\r\n      newPosition.y = props.dim.h + props.dim.top - size;\r\n    }\r\n    if (newPosition.x < props.dim.left) {\r\n      newPosition.x = props.dim.left;\r\n    }\r\n    if (newPosition.y < props.dim.top) {\r\n      newPosition.y = props.dim.top;\r\n    }\r\n\r\n    setPosition(newPosition);\r\n  }\r\n\r\n  function getNeighbourHood() {\r\n    if (creatureRef && creatureRef.current) {\r\n      console.log(creatureRef);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      changePosition();\r\n      getNeighbourHood();\r\n    }, Math.floor(Math.random() * 5000) + 10);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [position]);\r\n  return (\r\n    <div\r\n      id={props.uid}\r\n      ref={creatureRef}\r\n      style={{\r\n        borderRadius: 5,\r\n        height: 10,\r\n        width: 10,\r\n        backgroundColor: \"#111111\",\r\n        position: \"absolute\",\r\n        top: position.y,\r\n        left: position.x,\r\n        transition: \"all 0.5s ease-in-out\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst Earth = () => {\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const earthRef = createRef();\r\n\r\n  function addNewCreature() {\r\n    const creaturesTemp = creatures;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creatures;\r\n    creaturesTemp.splice(Math.floor(Math.random() * creatures.length), 1);\r\n    setCreatures([...creaturesTemp]);\r\n  }\r\n  useEffect(() => {\r\n    console.log({ ...earthRef });\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n      for (var i = 0; i < 20; i++) {\r\n        addNewCreature();\r\n      }\r\n    }\r\n  }, [earthRef]);\r\n  return (\r\n    <div\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#2C931D\", height: \"100%\", width: \"100%\" }}\r\n      onClick={(e) => {\r\n        // console.log(onClick);\r\n        e.preventDefault();\r\n        removeRandom();\r\n      }}\r\n    >\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature key={creature.uid} dim={earthDimensions}></Creature>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}