{"ast":null,"code":"import { Vector } from \"./vector\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport class Creature {\n  constructor(x, y, r, gender, creatures) {\n    this.id = uuidv4();\n    this.pos = new Vector(x, y);\n    this.r = r;\n    this.orignalR = r;\n    this.gender = gender;\n    this.vel = new Vector(0, 0);\n    this.acc = new Vector(0, 0);\n    this.acceleration = 0;\n    this.birth = Date.now();\n    this.color = \"#ffffff\";\n    this.isAdult = false;\n    this.lastBirth = Date.now();\n    this.isAbleToMate = false;\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n    this.lastFoodTime = Date.now();\n    this.canEatFood = false;\n    this.isInfected = false;\n    this.infectionTime = null;\n    creatures.current.push(this);\n  }\n\n  updateToAdult() {\n    if (this.birth + 10000 < Date.now()) {\n      this.isAdult = true;\n    }\n  }\n\n  updateAbleToMate() {\n    if (this.lastBirth + 10000 < Date.now()) {\n      this.isAbleToMate = true;\n    }\n  }\n\n  updateNotAbleToMate() {\n    this.isAbleToMate = false;\n    this.lastBirth = Date.now();\n  }\n\n  updateFoodFound(pos, fid) {\n    this.isFoodFound = true;\n    this.foundFoodPosition = pos;\n    this.foodId = fid;\n  }\n\n  updateFoodEaten() {\n    this.r = this.r * 1.5;\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n  }\n\n  updateFoodNotFound() {\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n  }\n\n  updateLastFoodTime() {\n    this.lastFoodTime = Date.now();\n  }\n\n  updateCanEatFood() {\n    if (this.lastFoodTime + 10000 < Date.now()) {\n      this.canEatFood = true;\n      this.r = this.orignalR;\n    } else {\n      this.canEatFood = false;\n    }\n  }\n\n  canDie() {\n    return this.lastFoodTime + 20000 + Math.random() * 5000 < Date.now();\n  }\n\n  infect() {\n    if (!this.isInfected) {\n      this.isInfected = true;\n      this.infectionTime = Date.now();\n    }\n  }\n\n  disInfect() {\n    if (this.isInfected && this.infectionTime + 10000 < Date.now()) {\n      this.isInfected = false;\n      this.infectionTime = null;\n    }\n  }\n\n  updateColor() {\n    if (this.isInfected) {\n      this.color = \"#FF0000\";\n    } else if (this.isAdult) {\n      this.color = this.gender == \"F\" ? \"#FF75BF\" : \"#2ED9FF\";\n    } else {\n      this.color = \"#ffffff\";\n    }\n  }\n\n  drawBall(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  reposition(ctx, speed) {\n    const multiplier = [1, -1];\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2); // this.acc = this.acc.unit().mult(this.acceleration);\n\n    if (this.isFoodFound && this.pos.subtr(this.foundFoodPosition).mag() < 2) {\n      this.updateFoodNotFound();\n    }\n\n    if (this.isFoodFound) {\n      this.vel = this.foundFoodPosition.subtr(this.pos).unit();\n    } else {\n      if (Math.random() > 0.991) this.vel = this.vel.add(new Vector(multiplier[plusMinusX] * speed, multiplier[plusMinusY] * speed));\n      this.vel = this.vel.mult(1 - 0.01);\n    }\n\n    let newPosition = {\n      x: this.pos.add(this.vel).x,\n      y: this.pos.add(this.vel).y\n    };\n    let isAtBoundary = false;\n\n    if (newPosition.x + this.r + 10 > window.innerWidth - 300) {\n      newPosition.x = window.innerWidth - 300 - this.r - 10;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\n      newPosition.y = window.innerHeight - this.r - 10;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.x < 10) {\n      newPosition.x = 10 + this.r;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.y < 10) {\n      newPosition.y = 10 + this.r;\n      isAtBoundary = true;\n    }\n\n    if (isAtBoundary) {\n      this.vel = this.vel.mult(-1);\n      newPosition = {\n        x: this.pos.add(this.vel).x,\n        y: this.pos.add(this.vel).y\n      };\n    }\n\n    this.pos = new Vector(newPosition.x, newPosition.y); // console.log(this.pos);\n  }\n\n}","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/creature.js"],"names":["Vector","v4","uuidv4","Creature","constructor","x","y","r","gender","creatures","id","pos","orignalR","vel","acc","acceleration","birth","Date","now","color","isAdult","lastBirth","isAbleToMate","isFoodFound","foundFoodPosition","foodId","lastFoodTime","canEatFood","isInfected","infectionTime","current","push","updateToAdult","updateAbleToMate","updateNotAbleToMate","updateFoodFound","fid","updateFoodEaten","updateFoodNotFound","updateLastFoodTime","updateCanEatFood","canDie","Math","random","infect","disInfect","updateColor","drawBall","ctx","beginPath","arc","PI","fillStyle","fill","closePath","reposition","speed","multiplier","plusMinusX","floor","plusMinusY","subtr","mag","unit","add","mult","newPosition","isAtBoundary","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["import { Vector } from \"./vector\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport class Creature {\r\n  constructor(x, y, r, gender, creatures) {\r\n    this.id = uuidv4();\r\n    this.pos = new Vector(x, y);\r\n    this.r = r;\r\n    this.orignalR = r;\r\n    this.gender = gender;\r\n    this.vel = new Vector(0, 0);\r\n    this.acc = new Vector(0, 0);\r\n    this.acceleration = 0;\r\n    this.birth = Date.now();\r\n    this.color = \"#ffffff\";\r\n    this.isAdult = false;\r\n    this.lastBirth = Date.now();\r\n    this.isAbleToMate = false;\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n    this.lastFoodTime = Date.now();\r\n    this.canEatFood = false;\r\n    this.isInfected = false;\r\n    this.infectionTime = null;\r\n    creatures.current.push(this);\r\n  }\r\n\r\n  updateToAdult() {\r\n    if (this.birth + 10000 < Date.now()) {\r\n      this.isAdult = true;\r\n    }\r\n  }\r\n  updateAbleToMate() {\r\n    if (this.lastBirth + 10000 < Date.now()) {\r\n      this.isAbleToMate = true;\r\n    }\r\n  }\r\n\r\n  updateNotAbleToMate() {\r\n    this.isAbleToMate = false;\r\n    this.lastBirth = Date.now();\r\n  }\r\n\r\n  updateFoodFound(pos, fid) {\r\n    this.isFoodFound = true;\r\n    this.foundFoodPosition = pos;\r\n    this.foodId = fid;\r\n  }\r\n  updateFoodEaten() {\r\n    this.r = this.r * 1.5;\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n  }\r\n\r\n  updateFoodNotFound() {\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n  }\r\n\r\n  updateLastFoodTime() {\r\n    this.lastFoodTime = Date.now();\r\n  }\r\n\r\n  updateCanEatFood() {\r\n    if (this.lastFoodTime + 10000 < Date.now()) {\r\n      this.canEatFood = true;\r\n      this.r = this.orignalR;\r\n    } else {\r\n      this.canEatFood = false;\r\n    }\r\n  }\r\n\r\n  canDie() {\r\n    return this.lastFoodTime + 20000 + Math.random() * 5000 < Date.now();\r\n  }\r\n\r\n  infect() {\r\n    if (!this.isInfected) {\r\n      this.isInfected = true;\r\n      this.infectionTime = Date.now();\r\n    }\r\n  }\r\n\r\n  disInfect() {\r\n    if (this.isInfected && this.infectionTime + 10000 < Date.now()) {\r\n      this.isInfected = false;\r\n      this.infectionTime = null;\r\n    }\r\n  }\r\n\r\n  updateColor() {\r\n    if (this.isInfected) {\r\n      this.color = \"#FF0000\";\r\n    } else if (this.isAdult) {\r\n      this.color = this.gender == \"F\" ? \"#FF75BF\" : \"#2ED9FF\";\r\n    } else {\r\n      this.color = \"#ffffff\";\r\n    }\r\n  }\r\n  drawBall(ctx) {\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  reposition(ctx, speed) {\r\n    const multiplier = [1, -1];\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    // this.acc = this.acc.unit().mult(this.acceleration);\r\n\r\n    if (this.isFoodFound && this.pos.subtr(this.foundFoodPosition).mag() < 2) {\r\n      this.updateFoodNotFound();\r\n    }\r\n\r\n    if (this.isFoodFound) {\r\n      this.vel = this.foundFoodPosition.subtr(this.pos).unit();\r\n    } else {\r\n      if (Math.random() > 0.991)\r\n        this.vel = this.vel.add(\r\n          new Vector(\r\n            multiplier[plusMinusX] * speed,\r\n            multiplier[plusMinusY] * speed\r\n          )\r\n        );\r\n      this.vel = this.vel.mult(1 - 0.01);\r\n    }\r\n\r\n    let newPosition = {\r\n      x: this.pos.add(this.vel).x,\r\n      y: this.pos.add(this.vel).y,\r\n    };\r\n\r\n    let isAtBoundary = false;\r\n    if (newPosition.x + this.r + 10 > window.innerWidth - 300) {\r\n      newPosition.x = window.innerWidth - 300 - this.r - 10;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\r\n      newPosition.y = window.innerHeight - this.r - 10;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.x < 10) {\r\n      newPosition.x = 10 + this.r;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.y < 10) {\r\n      newPosition.y = 10 + this.r;\r\n      isAtBoundary = true;\r\n    }\r\n\r\n    if (isAtBoundary) {\r\n      this.vel = this.vel.mult(-1);\r\n      newPosition = {\r\n        x: this.pos.add(this.vel).x,\r\n        y: this.pos.add(this.vel).y,\r\n      };\r\n    }\r\n\r\n    this.pos = new Vector(newPosition.x, newPosition.y);\r\n\r\n    // console.log(this.pos);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}