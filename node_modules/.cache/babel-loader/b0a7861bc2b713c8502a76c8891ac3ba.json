{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\creature.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { useGlobalActions, useGlobalState } from \"../../context/globalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Creature = props => {\n  _s();\n\n  const earthDimensions = props.dim;\n  const {\n    setStatus\n  } = useGlobalActions();\n  const {\n    status\n  } = useGlobalState(); //   console.log(earthDimensions);\n\n  const creatureRef = useRef(null);\n  const size = 6;\n  const [color, setColor] = useState(props.color ? props.color : \"#0000000\");\n  const [position, setPosition] = useState({\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2)\n  });\n\n  function changePosition() {\n    const pos = [1, -1];\n    const skipX = Math.floor(Math.random() * 20);\n    const skipY = Math.floor(Math.random() * 20);\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2);\n    const newPosition = {\n      x: position.x + pos[plusMinusX] * skipX,\n      y: position.y + pos[plusMinusY] * skipY\n    };\n\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\n      newPosition.x = props.dim.w + props.dim.left - size;\n    }\n\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\n      newPosition.y = props.dim.h + props.dim.top - size;\n    }\n\n    if (newPosition.x < props.dim.left) {\n      newPosition.x = props.dim.left;\n    }\n\n    if (newPosition.y < props.dim.top) {\n      newPosition.y = props.dim.top;\n    }\n\n    setPosition(newPosition);\n  }\n\n  function getNeighbourHood() {\n    const neighbours = [];\n\n    if (creatureRef === null || creatureRef === void 0 ? void 0 : creatureRef.current) {\n      var _creatureRef$current, _creatureRef$current$;\n\n      const children = (_creatureRef$current = creatureRef.current) === null || _creatureRef$current === void 0 ? void 0 : (_creatureRef$current$ = _creatureRef$current.parentNode) === null || _creatureRef$current$ === void 0 ? void 0 : _creatureRef$current$.childNodes;\n\n      if (children) {\n        Object.keys(children).forEach(key => {\n          var _children$key;\n\n          if (((_children$key = children[key]) === null || _children$key === void 0 ? void 0 : _children$key.nodeName) === \"DIV\" && Math.abs(children[key].offsetLeft - position.x) < 10 && Math.abs(children[key].offsetTop - position.y) < 10 && children[key].id.localeCompare(props.uid) !== 0) {\n            neighbours.push(children[key]);\n          }\n        });\n      }\n    }\n\n    return {\n      neighbours\n    };\n  }\n\n  useEffect(() => {\n    // console.log(props.uid);\n    if (status.localeCompare(\"Playing\") === 0) {\n      const interval = setInterval(() => {\n        changePosition();\n        setColor(\"#000000\");\n        const {\n          neighbours\n        } = getNeighbourHood();\n\n        if (neighbours.length > 0) {\n          var _props$earthRef, _props$earthRef$curre;\n\n          const event = new CustomEvent(\"birth\", {\n            detail: {\n              mother: props.uid,\n              candidates: neighbours\n            }\n          });\n          (_props$earthRef = props.earthRef) === null || _props$earthRef === void 0 ? void 0 : (_props$earthRef$curre = _props$earthRef.current) === null || _props$earthRef$curre === void 0 ? void 0 : _props$earthRef$curre.dispatchEvent(event);\n        }\n      }, Math.floor(Math.random() * 5000) + 10);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [position, status]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: creatureRef,\n    id: props.uid,\n    style: {\n      borderRadius: 5,\n      height: 10,\n      width: 10,\n      backgroundColor: props.color,\n      position: \"absolute\",\n      top: position.y,\n      left: position.x,\n      transition: \"all 0.5s ease-in-out\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Creature, \"Nw2YgknCa8YqLfHy3gZG3NYSC3Q=\", false, function () {\n  return [useGlobalActions, useGlobalState];\n});\n\n_c = Creature;\nexport default Creature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Creature\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/creature.js"],"names":["createRef","useEffect","useRef","useState","useGlobalActions","useGlobalState","Creature","props","earthDimensions","dim","setStatus","status","creatureRef","size","color","setColor","position","setPosition","x","Math","floor","w","random","left","y","h","top","changePosition","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","getNeighbourHood","neighbours","current","children","parentNode","childNodes","Object","keys","forEach","key","nodeName","abs","offsetLeft","offsetTop","id","localeCompare","uid","push","interval","setInterval","length","event","CustomEvent","detail","mother","candidates","earthRef","dispatchEvent","clearInterval","borderRadius","height","width","backgroundColor","transition"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { useGlobalActions, useGlobalState } from \"../../context/globalContext\";\r\nconst Creature = (props) => {\r\n  const earthDimensions = props.dim;\r\n  const { setStatus } = useGlobalActions();\r\n  const { status } = useGlobalState();\r\n  //   console.log(earthDimensions);\r\n  const creatureRef = useRef(null);\r\n  const size = 6;\r\n  const [color, setColor] = useState(props.color ? props.color : \"#0000000\");\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\r\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2),\r\n  });\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 20);\r\n    const skipY = Math.floor(Math.random() * 20);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n\r\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\r\n      newPosition.x = props.dim.w + props.dim.left - size;\r\n    }\r\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\r\n      newPosition.y = props.dim.h + props.dim.top - size;\r\n    }\r\n    if (newPosition.x < props.dim.left) {\r\n      newPosition.x = props.dim.left;\r\n    }\r\n    if (newPosition.y < props.dim.top) {\r\n      newPosition.y = props.dim.top;\r\n    }\r\n\r\n    setPosition(newPosition);\r\n  }\r\n\r\n  function getNeighbourHood() {\r\n    const neighbours = [];\r\n    if (creatureRef?.current) {\r\n      const children = creatureRef.current?.parentNode?.childNodes;\r\n      if (children) {\r\n        Object.keys(children).forEach((key) => {\r\n          if (\r\n            children[key]?.nodeName === \"DIV\" &&\r\n            Math.abs(children[key].offsetLeft - position.x) < 10 &&\r\n            Math.abs(children[key].offsetTop - position.y) < 10 &&\r\n            children[key].id.localeCompare(props.uid) !== 0\r\n          ) {\r\n            neighbours.push(children[key]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return { neighbours };\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(props.uid);\r\n    if (status.localeCompare(\"Playing\") === 0) {\r\n      const interval = setInterval(() => {\r\n        changePosition();\r\n        setColor(\"#000000\");\r\n        const { neighbours } = getNeighbourHood();\r\n        if (neighbours.length > 0) {\r\n          const event = new CustomEvent(\"birth\", {\r\n            detail: { mother: props.uid, candidates: neighbours },\r\n          });\r\n          props.earthRef?.current?.dispatchEvent(event);\r\n        }\r\n      }, Math.floor(Math.random() * 5000) + 10);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [position, status]);\r\n  return (\r\n    <div\r\n      ref={creatureRef}\r\n      id={props.uid}\r\n      style={{\r\n        borderRadius: 5,\r\n        height: 10,\r\n        width: 10,\r\n        backgroundColor: props.color,\r\n        position: \"absolute\",\r\n        top: position.y,\r\n        left: position.x,\r\n        transition: \"all 0.5s ease-in-out\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Creature;\r\n"]},"metadata":{},"sourceType":"module"}