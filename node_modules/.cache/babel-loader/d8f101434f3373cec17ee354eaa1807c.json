{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\node.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport \"./node.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Node = props => {\n  _s();\n\n  const bounds = props.bounds;\n  const size = 10;\n  const nodeRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: Math.floor(Math.random() * bounds.w),\n    y: Math.floor(Math.random() * bounds.h)\n  });\n  useEffect(() => {\n    var timeInterval = setInterval(() => {\n      var _props$childRef, _props$childRef$curre;\n\n      const pos = [1, -1];\n      const skipX = Math.floor(Math.random() * 50);\n      const skipY = Math.floor(Math.random() * 50);\n      const plusMinusX = Math.floor(Math.random() * 2);\n      const plusMinusY = Math.floor(Math.random() * 2);\n      const newPosition = {\n        x: position.x + pos[plusMinusX] * skipX,\n        y: position.y + pos[plusMinusY] * skipY\n      };\n\n      if (newPosition.x > bounds.w + bounds.l) {\n        newPosition.x = bounds.w;\n      }\n\n      if (newPosition.y > bounds.h + bounds.t) {\n        newPosition.y = bounds.h;\n      }\n\n      if (newPosition.x < bounds.l) {\n        newPosition.x = bounds.l;\n      }\n\n      if (newPosition.y < bounds.t) {\n        newPosition.y = bounds.t;\n      }\n\n      const event = new CustomEvent(\"position\", {\n        detail: newPosition\n      });\n      (_props$childRef = props.childRef) === null || _props$childRef === void 0 ? void 0 : (_props$childRef$curre = _props$childRef.current) === null || _props$childRef$curre === void 0 ? void 0 : _props$childRef$curre.dispatchEvent(event);\n      setPosition({ ...newPosition\n      });\n\n      if (props.uid === 1) {\n        // console.log(Object.keys( nodeRef.current.parentElement.children));\n        const children = nodeRef.current.parentElement.children;\n        Object.keys(children).forEach(key => {\n          if (Math.abs(children[key].offsetLeft - nodeRef.current.offsetLeft) < 30 && Math.abs(children[key].offsetTop - nodeRef.current.offsetTop) < 30) {\n            console.log(children[key].id);\n          }\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, [position]);\n  useEffect(() => {\n    if (nodeRef && nodeRef.current) {}\n  }, [nodeRef]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ref: nodeRef,\n    style: {\n      backgroundColor: props.uid === 1 ? \"#FF0000\" : \"white\",\n      height: size,\n      width: size,\n      top: position.y,\n      left: position.x,\n      position: \"absolute\",\n      borderRadius: size / 2,\n      border: \"none\",\n      transition: \"all 2s ease-in-out\"\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Node, \"LyfebghuEG5ngmGgqVJJ2YgzGPM=\");\n\n_c = Node;\nexport default Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/node.js"],"names":["useEffect","useState","useRef","Card","useGlobalActions","useGlobalState","Node","props","bounds","size","nodeRef","position","setPosition","x","Math","floor","random","w","y","h","timeInterval","setInterval","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","l","t","event","CustomEvent","detail","childRef","current","dispatchEvent","uid","children","parentElement","Object","keys","forEach","key","abs","offsetLeft","offsetTop","console","log","id","clearInterval","backgroundColor","height","width","top","left","borderRadius","border","transition"],"mappings":"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","sourcesContent":["import { useEffect, useState ,useRef} from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport \"./node.css\";\r\nconst Node = (props)=>{\r\n\r\n    const bounds = props.bounds;\r\n    const size = 10;\r\n    \r\n    \r\n    const nodeRef = useRef(null);\r\n    const [position, setPosition] = useState({\r\n      x: Math.floor(Math.random() * bounds.w),\r\n      y: Math.floor(Math.random() * bounds.h),\r\n    });\r\n\r\n    \r\n    useEffect(()=>{\r\n        var timeInterval = setInterval(()=>{\r\n            const pos = [1,-1]\r\n            const skipX = Math.floor(Math.random()*50);\r\n            const skipY = Math.floor(Math.random() * 50);\r\n\r\n            const plusMinusX = Math.floor(Math.random()*2);\r\n            const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n            const newPosition = {\r\n              x: position.x + pos[plusMinusX] * skipX,\r\n              y: position.y + pos[plusMinusY] * skipY,\r\n            };\r\n            if(newPosition.x > bounds.w + bounds.l){\r\n                newPosition.x = bounds.w;\r\n            }\r\n            if (newPosition.y > bounds.h + bounds.t) {\r\n              newPosition.y = bounds.h;\r\n            }\r\n            if (newPosition.x < bounds.l) {\r\n              newPosition.x = bounds.l;\r\n            }\r\n            if (newPosition.y< bounds.t) {\r\n              newPosition.y = bounds.t;\r\n            }\r\n\r\n            const event = new CustomEvent(\"position\", {\r\n              detail: newPosition,\r\n            });\r\n\r\n\r\n            props.childRef?.current?.dispatchEvent(event);\r\n            setPosition({...newPosition});\r\n            if(props.uid ===1){\r\n                // console.log(Object.keys( nodeRef.current.parentElement.children));\r\n                const children = nodeRef.current.parentElement.children;\r\n                Object.keys(children).forEach(\r\n                  (key) => {\r\n                    if (\r\n                      Math.abs(\r\n                        children[key].offsetLeft - nodeRef.current.offsetLeft\r\n                      ) < 30 &&\r\n                      Math.abs(\r\n                        children[key].offsetTop - nodeRef.current.offsetTop\r\n                      ) < 30\r\n                    ) {\r\n                      console.log(children[key].id);\r\n                    }\r\n                  }\r\n                );\r\n            }\r\n\r\n        },1000);\r\n        return ()=>{\r\n            clearInterval(timeInterval);\r\n        }\r\n        \r\n    },[position])\r\n\r\n    useEffect(()=>{\r\n        if(nodeRef&&nodeRef.current){\r\n            \r\n        }\r\n    },[nodeRef])\r\n\r\n    \r\n    return (\r\n      <Card\r\n        ref={nodeRef}\r\n        style={{\r\n          backgroundColor: props.uid===1?\"#FF0000\":\"white\",\r\n          height: size,\r\n          width: size,\r\n          top: position.y,\r\n          left: position.x,\r\n          position: \"absolute\",\r\n          borderRadius: size / 2,\r\n          border: \"none\",\r\n          transition: \"all 2s ease-in-out\",\r\n        }}\r\n      >\r\n        {props.children}\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default Node;"]},"metadata":{},"sourceType":"module"}