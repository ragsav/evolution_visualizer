{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\creature.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Creature = props => {\n  _s();\n\n  const {\n    status,\n    speed,\n    earthQuakePosition,\n    earthQuakeRadius\n  } = useGlobalState(); //   console.log(earthDimensions);\n\n  const creatureRef = useRef(null);\n  const size = 6;\n  const [color, setColor] = useState(props.birth + 1000 > Date.now() ? \"#FF4489\" : \"#E8FF95\");\n  const [position, setPosition] = useState({\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2)\n  });\n\n  function checkEarthQuake() {\n    if (earthQuakePosition) {\n      const xDiff = Math.abs(position.x + size / 2 - earthQuakePosition.x);\n      const yDiff = Math.abs(position.y + size / 2 - earthQuakePosition.y);\n\n      if (Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2)) < earthQuakeRadius) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function changePosition() {\n    const pos = [1, -1];\n    const skipX = Math.floor(Math.random() * 20);\n    const skipY = Math.floor(Math.random() * 20);\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2);\n    const newPosition = {\n      x: position.x + pos[plusMinusX] * skipX,\n      y: position.y + pos[plusMinusY] * skipY\n    };\n\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\n      newPosition.x = props.dim.w + props.dim.left - size;\n    }\n\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\n      newPosition.y = props.dim.h + props.dim.top - size;\n    }\n\n    if (newPosition.x < props.dim.left) {\n      newPosition.x = props.dim.left;\n    }\n\n    if (newPosition.y < props.dim.top) {\n      newPosition.y = props.dim.top;\n    }\n\n    setPosition(newPosition);\n    props.birth + 1000 > Date.now() ? setColor(\"#FF4489\") : setColor(\"#E8FF95\");\n\n    if (checkEarthQuake()) {\n      console.log(\"Horror\");\n    }\n  }\n\n  function getNeighbourHood() {\n    const neighbourHood = {};\n    const neighbours = [];\n\n    if (creatureRef === null || creatureRef === void 0 ? void 0 : creatureRef.current) {\n      var _creatureRef$current, _creatureRef$current$;\n\n      const children = (_creatureRef$current = creatureRef.current) === null || _creatureRef$current === void 0 ? void 0 : (_creatureRef$current$ = _creatureRef$current.parentNode) === null || _creatureRef$current$ === void 0 ? void 0 : _creatureRef$current$.childNodes;\n\n      if (children) {\n        Object.keys(children).forEach(key => {\n          var _children$key;\n\n          if (((_children$key = children[key]) === null || _children$key === void 0 ? void 0 : _children$key.className.localeCompare(\"Creature\")) === 0 && Math.abs(children[key].offsetLeft - position.x) < 10 && Math.abs(children[key].offsetTop - position.y) < 10 && children[key].id.localeCompare(props.uid) !== 0) {\n            neighbours.push(children[key]);\n          }\n        });\n      }\n    }\n\n    neighbourHood.neighbours = neighbours;\n    return neighbourHood;\n  }\n\n  useEffect(() => {\n    // console.log(props.uid);\n    if (status.localeCompare(\"Playing\") === 0) {\n      const interval = setInterval(() => {\n        changePosition();\n        const {\n          neighbours\n        } = getNeighbourHood();\n\n        if (neighbours.length > 0) {\n          var _props$earthRef, _props$earthRef$curre;\n\n          const event = new CustomEvent(\"birth\", {\n            detail: {\n              mother: props.uid,\n              candidates: neighbours\n            }\n          });\n          (_props$earthRef = props.earthRef) === null || _props$earthRef === void 0 ? void 0 : (_props$earthRef$curre = _props$earthRef.current) === null || _props$earthRef$curre === void 0 ? void 0 : _props$earthRef$curre.dispatchEvent(event);\n        }\n      }, Math.floor(Math.random() * 5000 / speed) + 10);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [position, status, speed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Creature\",\n    ref: creatureRef,\n    id: props.uid,\n    style: {\n      borderRadius: size / 2,\n      height: size,\n      width: size,\n      backgroundColor: color,\n      position: \"absolute\",\n      top: position.y,\n      left: position.x,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitBoxShadow: props.birth + 1000 > Date.now() ? \"0 0 10px #FF4489\" : \"none\",\n      boxShadow: props.birth + 1000 > Date.now() ? \"0 0 10px #FF4489\" : \"none\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Creature, \"pz1kcKgvOFLEoZ5XqCJIrIP4rFc=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Creature;\nexport default Creature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Creature\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/creature.js"],"names":["createRef","useEffect","useRef","useState","useGlobalActions","useGlobalState","Creature","props","status","speed","earthQuakePosition","earthQuakeRadius","creatureRef","size","color","setColor","birth","Date","now","position","setPosition","x","Math","floor","dim","w","random","left","y","h","top","checkEarthQuake","xDiff","abs","yDiff","sqrt","pow","changePosition","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","console","log","getNeighbourHood","neighbourHood","neighbours","current","children","parentNode","childNodes","Object","keys","forEach","key","className","localeCompare","offsetLeft","offsetTop","id","uid","push","interval","setInterval","length","event","CustomEvent","detail","mother","candidates","earthRef","dispatchEvent","clearInterval","borderRadius","height","width","backgroundColor","transition","WebkitBoxShadow","boxShadow"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nconst Creature = (props) => {\r\n  const { status, speed ,earthQuakePosition,earthQuakeRadius} = useGlobalState();\r\n  //   console.log(earthDimensions);\r\n\r\n  const creatureRef = useRef(null);\r\n  const size = 6;\r\n  const [color, setColor] = useState(\r\n    props.birth + 1000 > Date.now() ? \"#FF4489\" : \"#E8FF95\"\r\n  );\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\r\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2),\r\n  });\r\n\r\n\r\n  function checkEarthQuake(){\r\n    if(earthQuakePosition){\r\n      const xDiff = Math.abs(position.x+size/2-earthQuakePosition.x)\r\n      const yDiff = Math.abs(position.y + size / 2 - earthQuakePosition.y);\r\n      if(Math.sqrt(Math.pow(xDiff,2)+Math.pow(yDiff,2))<earthQuakeRadius){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 20);\r\n    const skipY = Math.floor(Math.random() * 20);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n\r\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\r\n      newPosition.x = props.dim.w + props.dim.left - size;\r\n    }\r\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\r\n      newPosition.y = props.dim.h + props.dim.top - size;\r\n    }\r\n    if (newPosition.x < props.dim.left) {\r\n      newPosition.x = props.dim.left;\r\n    }\r\n    if (newPosition.y < props.dim.top) {\r\n      newPosition.y = props.dim.top;\r\n    }\r\n\r\n    setPosition(newPosition);\r\n    props.birth + 1000 > Date.now() ? setColor(\"#FF4489\") : setColor(\"#E8FF95\");\r\n\r\n    if(checkEarthQuake()){\r\n      console.log(\"Horror\")\r\n    }\r\n  }\r\n\r\n  function getNeighbourHood() {\r\n    const neighbourHood = {};\r\n    const neighbours = [];\r\n    if (creatureRef?.current) {\r\n      const children = creatureRef.current?.parentNode?.childNodes;\r\n      if (children) {\r\n        Object.keys(children).forEach((key) => {\r\n          if (\r\n            children[key]?.className.localeCompare(\"Creature\") === 0 &&\r\n            Math.abs(children[key].offsetLeft - position.x) < 10 &&\r\n            Math.abs(children[key].offsetTop - position.y) < 10 &&\r\n            children[key].id.localeCompare(props.uid) !== 0\r\n          ) {\r\n            neighbours.push(children[key]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    neighbourHood.neighbours = neighbours;\r\n    return neighbourHood;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(props.uid);\r\n    if (status.localeCompare(\"Playing\") === 0) {\r\n      const interval = setInterval(() => {\r\n        changePosition();\r\n        const { neighbours } = getNeighbourHood();\r\n        if (neighbours.length > 0) {\r\n          const event = new CustomEvent(\"birth\", {\r\n            detail: { mother: props.uid, candidates: neighbours },\r\n          });\r\n          props.earthRef?.current?.dispatchEvent(event);\r\n        }\r\n      }, Math.floor((Math.random() * 5000) / speed) + 10);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [position, status, speed]);\r\n  return (\r\n    <div\r\n      className=\"Creature\"\r\n      ref={creatureRef}\r\n      id={props.uid}\r\n      style={{\r\n        borderRadius: size / 2,\r\n        height: size,\r\n        width: size,\r\n        backgroundColor: color,\r\n        position: \"absolute\",\r\n        top: position.y,\r\n        left: position.x,\r\n        transition: \"all 0.5s ease-in-out\",\r\n        WebkitBoxShadow:\r\n          props.birth + 1000 > Date.now() ? \"0 0 10px #FF4489\" : \"none\",\r\n        boxShadow:\r\n         \r\n         \r\n         \r\n          props.birth + 1000 > Date.now() ? \"0 0 10px #FF4489\" : \"none\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Creature;\r\n"]},"metadata":{},"sourceType":"module"}