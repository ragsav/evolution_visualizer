{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\earth.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Vector } from \"./vector\";\nimport { Creature } from \"./creature\";\nimport { Wall } from \"./wall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BALLS = [];\nconst WALLS = [];\n\nfunction randInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction initialPopulation() {\n  for (let i = 0; i < 20; i++) {\n    let newBall = new Creature(randInt(0, window.innerWidth - 20), randInt(0, window.innerHeight - 20), 5, BALLS);\n  }\n}\n\nconst Earth = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const canvas = document.getElementById(\"canvas\");\n      const ctx_2 = canvas.getContext(\"2d\");\n      canvasRef.current.focus();\n      setCtx(ctx_2);\n    }\n  }, [canvasRef]);\n  useEffect(() => {\n    if (ctx) {\n      initialPopulation();\n      requestAnimationFrame(mainLoop);\n    }\n  }, [ctx]);\n\n  function mainLoop(timestamp) {\n    ctx.clearRect(0, 0, canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n    BALLS.forEach((b, index) => {\n      b.drawBall(ctx);\n      b.reposition(ctx);\n    }); // if (Math.random() > 0.7) {\n    //   BALLZ.push(\n    //     new Ball(randInt(100, 500), randInt(50, 400), 5, randInt(0, 10), BALLZ)\n    //   );\n    // }\n\n    requestAnimationFrame(mainLoop);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    tabIndex: 1,\n    id: \"canvas\",\n    ref: canvasRef,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    style: {\n      backgroundColor: \"#222222\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"B7P/88+wLKaKs8yUCwOt0d/Ar0E=\");\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/earth.js"],"names":["useEffect","useRef","useState","Vector","Creature","Wall","BALLS","WALLS","randInt","min","max","Math","floor","random","initialPopulation","i","newBall","window","innerWidth","innerHeight","Earth","canvasRef","ctx","setCtx","current","canvas","document","getElementById","ctx_2","getContext","focus","requestAnimationFrame","mainLoop","timestamp","clearRect","clientWidth","clientHeight","forEach","b","index","drawBall","reposition","backgroundColor"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,KAAK,GAAG,EAAd;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;AACD,SAASK,iBAAT,GAA6B;AAC3B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,OAAO,GAAG,IAAIZ,QAAJ,CACZI,OAAO,CAAC,CAAD,EAAIS,MAAM,CAACC,UAAP,GAAoB,EAAxB,CADK,EAEZV,OAAO,CAAC,CAAD,EAAIS,MAAM,CAACE,WAAP,GAAqB,EAAzB,CAFK,EAGZ,CAHY,EAIZb,KAJY,CAAd;AAMD;AACF;;AAED,MAAMc,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,SAAS,GAAGpB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACqB,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAC,IAAD,CAA9B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAS,IAAIA,SAAS,CAACG,OAA3B,EAAoC;AAClC,YAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,YAAMC,KAAK,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAd;AACAR,MAAAA,SAAS,CAACG,OAAV,CAAkBM,KAAlB;AACAP,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD;AACF,GAPQ,EAON,CAACP,SAAD,CAPM,CAAT;AASArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,GAAJ,EAAS;AACPR,MAAAA,iBAAiB;AACjBiB,MAAAA,qBAAqB,CAACC,QAAD,CAArB;AACD;AACF,GALQ,EAKN,CAACV,GAAD,CALM,CAAT;;AAOA,WAASU,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BX,IAAAA,GAAG,CAACY,SAAJ,CACE,CADF,EAEE,CAFF,EAGEb,SAAS,CAACG,OAAV,CAAkBW,WAHpB,EAIEd,SAAS,CAACG,OAAV,CAAkBY,YAJpB;AAMA9B,IAAAA,KAAK,CAAC+B,OAAN,CAAc,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC1BD,MAAAA,CAAC,CAACE,QAAF,CAAWlB,GAAX;AACAgB,MAAAA,CAAC,CAACG,UAAF,CAAanB,GAAb;AACD,KAHD,EAP2B,CAY3B;AACA;AACA;AACA;AACA;;AAEAS,IAAAA,qBAAqB,CAACC,QAAD,CAArB;AACD;;AAED,sBACE;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,GAAG,EAAEX,SAHP;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACC,UAJhB;AAKE,IAAA,MAAM,EAAED,MAAM,CAACE,WALjB;AAME,IAAA,KAAK,EAAE;AAAEuB,MAAAA,eAAe,EAAE;AAAnB;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;GAAMtB,K;;KAAAA,K;AAqDN,eAAeA,KAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Vector } from \"./vector\";\r\nimport { Creature } from \"./creature\";\r\nimport { Wall } from \"./wall\";\r\nconst BALLS = [];\r\nconst WALLS = [];\r\n\r\nfunction randInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction initialPopulation() {\r\n  for (let i = 0; i < 20; i++) {\r\n    let newBall = new Creature(\r\n      randInt(0, window.innerWidth - 20),\r\n      randInt(0, window.innerHeight - 20),\r\n      5,\r\n      BALLS\r\n    );\r\n  }\r\n}\r\n\r\nconst Earth = () => {\r\n  const canvasRef = useRef(null);\r\n  const [ctx, setCtx] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (canvasRef && canvasRef.current) {\r\n      const canvas = document.getElementById(\"canvas\");\r\n      const ctx_2 = canvas.getContext(\"2d\");\r\n      canvasRef.current.focus();\r\n      setCtx(ctx_2);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  useEffect(() => {\r\n    if (ctx) {\r\n      initialPopulation();\r\n      requestAnimationFrame(mainLoop);\r\n    }\r\n  }, [ctx]);\r\n\r\n  function mainLoop(timestamp) {\r\n    ctx.clearRect(\r\n      0,\r\n      0,\r\n      canvasRef.current.clientWidth,\r\n      canvasRef.current.clientHeight\r\n    );\r\n    BALLS.forEach((b, index) => {\r\n      b.drawBall(ctx);\r\n      b.reposition(ctx);\r\n    });\r\n\r\n    // if (Math.random() > 0.7) {\r\n    //   BALLZ.push(\r\n    //     new Ball(randInt(100, 500), randInt(50, 400), 5, randInt(0, 10), BALLZ)\r\n    //   );\r\n    // }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n  }\r\n\r\n  return (\r\n    <canvas\r\n      tabIndex={1}\r\n      id=\"canvas\"\r\n      ref={canvasRef}\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      style={{ backgroundColor: \"#222222\" }}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}