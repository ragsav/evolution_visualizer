{"ast":null,"code":"import _toConsumableArray from\"E:/projects/Fun/genetic algorithm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/projects/Fun/genetic algorithm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createRef,useEffect,useRef,useState}from\"react\";import{Card}from\"react-bootstrap\";import{useGlobalActions,useGlobalState}from\"../context/globalContext\";import Node from\"./node\";import{v4 as uuidv4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";var demo=Array.from(Array(20).keys());var Screen=function Screen(){// const {ground} = useGlobalState();\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),trueRef=_useState2[0],setTrueRef=_useState2[1];var screenRef=useRef(null);var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),creatures=_useState4[0],setCreatures=_useState4[1];useEffect(function(){console.log(creatures.length);if(Math.random()>0.7){var timeInterval=setInterval(function(){var l=creatures.length;var index=Math.random()*l;var creaturesTemp=_toConsumableArray(creatures);creaturesTemp.splice(index,1);setCreatures(_toConsumableArray(creaturesTemp));},100);return function(){clearInterval(timeInterval);};}},[creatures]);function addCreature(c){creatures.push(c);setCreatures(_toConsumableArray(creatures));}useEffect(function(){if(screenRef){if(screenRef.current){setTrueRef(screenRef.current);demo.forEach(function(t,i){var k=uuidv4();creatures.push(/*#__PURE__*/_jsx(Node,{screenRef:screenRef,uid:k,setCreatures:setCreatures,creatures:creatures,bounds:{l:screenRef.current.offsetLeft,t:screenRef.current.offsetTop,w:screenRef.current.clientWidth,h:screenRef.current.clientHeight},children:/*#__PURE__*/_jsx(\"span\",{id:\"\".concat(k,\"+123\")},\"\".concat(k,\"+123\"))},k));});setCreatures(_toConsumableArray(creatures));}}},[screenRef]);return/*#__PURE__*/_jsx(\"div\",{id:\"screen\",style:{height:\"100%\",width:\"100%\",backgroundColor:\"#1E1E1E\"},ref:screenRef,children:trueRef?creatures:null});};export default Screen;","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","useGlobalActions","useGlobalState","Node","v4","uuidv4","demo","Array","from","keys","Screen","trueRef","setTrueRef","screenRef","creatures","setCreatures","console","log","length","Math","random","timeInterval","setInterval","l","index","creaturesTemp","splice","clearInterval","addCreature","c","push","current","forEach","t","i","k","offsetLeft","offsetTop","w","clientWidth","h","clientHeight","height","width","backgroundColor"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Node from \"./node\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst demo = Array.from(Array(20).keys());\r\nconst Screen = ()=>{\r\n\r\n    \r\n    // const {ground} = useGlobalState();\r\n    const [trueRef,setTrueRef] = useState(null);\r\n    const screenRef = useRef(null);\r\n    \r\n    const [creatures,setCreatures] = useState([])\r\n  \r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        console.log(creatures.length)\r\n        if(Math.random()>0.7){\r\n            var timeInterval = setInterval(() => {\r\n              const l = creatures.length;\r\n              const index = Math.random() * l;\r\n              const creaturesTemp = [...creatures];\r\n              creaturesTemp.splice(index, 1);\r\n              setCreatures([...creaturesTemp]);\r\n            }, 100);\r\n            return () => {\r\n              clearInterval(timeInterval);\r\n            };\r\n        }\r\n        \r\n    },[creatures])\r\n\r\n   function addCreature(c) {\r\n     creatures.push(c);\r\n\r\n     setCreatures([...creatures]);\r\n   }\r\n    \r\n    useEffect(()=>{\r\n        if(screenRef){\r\n            if(screenRef.current){\r\n                setTrueRef(screenRef.current);\r\n                demo.forEach((t, i) => {\r\n                    const k = uuidv4();\r\n                  creatures.push(\r\n                    <Node\r\n                      screenRef={screenRef}\r\n                      uid={k}\r\n                      key={k}\r\n                      setCreatures={setCreatures}\r\n                      creatures={creatures}\r\n                      bounds={{\r\n                        l: screenRef.current.offsetLeft,\r\n                        t: screenRef.current.offsetTop,\r\n                        w: screenRef.current.clientWidth,\r\n                        h: screenRef.current.clientHeight,\r\n                      }}\r\n                    >\r\n                      <span key={`${k}+123`} id={`${k}+123`}></span>\r\n                    </Node>\r\n                  );\r\n                });\r\n                setCreatures([...creatures])\r\n            }\r\n        }\r\n    },[screenRef])\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n      <div\r\n      id=\"screen\"\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#1E1E1E\" }}\r\n        ref={screenRef}\r\n      >\r\n        {trueRef ? creatures : null}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}