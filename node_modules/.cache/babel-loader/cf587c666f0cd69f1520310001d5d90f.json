{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\statistics\\\\charts.js\";\nimport Chart from \"react-apexcharts\";\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopulationChart = props => {\n  const state = {\n    series: [{\n      name: \"Desktops\",\n      data: props.data\n    }],\n    options: {\n      chart: {\n        height: 400,\n        width: 250,\n        type: \"area\",\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: 1,\n        curve: \"straight\"\n      },\n      title: {\n        text: \"Population\",\n        align: \"left\"\n      },\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"],\n          // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      yaxis: {\n        show: false\n      },\n      xaxis: {\n        labels: {\n          show: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: state.options,\n    series: state.series,\n    style: {\n      padding: 0,\n      margin: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PopulationChart;\n\nconst ChartsModal = props => {\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Centered Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ChartsModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopulationChart\");\n$RefreshReg$(_c2, \"ChartsModal\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/statistics/charts.js"],"names":["Chart","Modal","PopulationChart","props","state","series","name","data","options","chart","height","width","type","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","yaxis","show","xaxis","labels","padding","margin","ChartsModal","onHide"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAFd,KADM,CADI;AAOZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,KAAK,EAAE,GAFF;AAGLC,QAAAA,IAAI,EAAE,MAHD;AAILC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL;AAJD,OADA;AAUPC,MAAAA,UAAU,EAAE;AACVD,QAAAA,OAAO,EAAE;AADC,OAVL;AAaPE,MAAAA,MAAM,EAAE;AACNL,QAAAA,KAAK,EAAE,CADD;AAENM,QAAAA,KAAK,EAAE;AAFD,OAbD;AAiBPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,KAAK,EAAE;AAFF,OAjBA;AAqBPC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAE;AACHC,UAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,aAAZ,CADL;AACiC;AACpCC,UAAAA,OAAO,EAAE;AAFN;AADD,OArBC;AA2BPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OA3BA;AA8BPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE;AACNF,UAAAA,IAAI,EAAE;AADA;AADH;AA9BA;AAPG,GAAd;AA6CA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAEtB,KAAK,CAACI,OADjB;AAEE,IAAA,MAAM,EAAEJ,KAAK,CAACC,MAFhB;AAGE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArDD;;KAAM5B,e;;AAuDN,MAAM6B,WAAW,GAAI5B,KAAD,IAAW;AAC7B,sBACE,QAAC,KAAD,OACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA,4BAME,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,KAAK,CAAC6B,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1BD;;MAAMD,W","sourcesContent":["import Chart from \"react-apexcharts\";\r\nimport { Modal } from \"react-bootstrap\";\r\nconst PopulationChart = (props) => {\r\n  const state = {\r\n    series: [\r\n      {\r\n        name: \"Desktops\",\r\n        data: props.data,\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        height: 400,\r\n        width: 250,\r\n        type: \"area\",\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        width: 1,\r\n        curve: \"straight\",\r\n      },\r\n      title: {\r\n        text: \"Population\",\r\n        align: \"left\",\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      yaxis: {\r\n        show: false,\r\n      },\r\n      xaxis: {\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Chart\r\n      options={state.options}\r\n      series={state.series}\r\n      style={{ padding: 0, margin: 0 }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ChartsModal = (props) => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Centered Modal</h4>\r\n        <p>\r\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n          consectetur ac, vestibulum at eros.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}