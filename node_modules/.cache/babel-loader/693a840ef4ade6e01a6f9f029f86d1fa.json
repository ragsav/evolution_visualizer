{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Node from \"./node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Screen = () => {\n  _s();\n\n  const a = Array(100);\n  const [population, setPopulation] = useState(1);\n  const [trueRef, setTrueRef] = useState(null);\n  const screenRef = useRef(null);\n  useEffect(() => {\n    if (screenRef) {\n      console.log(screenRef);\n\n      if (screenRef.current) {\n        setTrueRef(screenRef.current);\n      }\n    }\n  }, [screenRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#1E1E1E\"\n    },\n    ref: screenRef,\n    children: trueRef ? /*#__PURE__*/_jsxDEV(Node, {\n      bounds: {\n        l: screenRef.current.offsetLeft,\n        t: screenRef.current.offsetTop,\n        w: screenRef.current.clientWidth,\n        h: screenRef.current.clientHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Screen, \"GP9rP1S4Bm9/sQSBdAjFWfPrEwo=\");\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["useEffect","useRef","useState","Card","Node","Screen","a","Array","population","setPopulation","trueRef","setTrueRef","screenRef","console","log","current","height","width","backgroundColor","l","offsetLeft","t","offsetTop","w","clientWidth","h","clientHeight"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEf,QAAMC,CAAC,GAAGC,KAAK,CAAC,GAAD,CAAf;AACA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMU,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGY,SAAH,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AACA,UAAGA,SAAS,CAACG,OAAb,EAAqB;AACjBJ,QAAAA,UAAU,CAACC,SAAS,CAACG,OAAX,CAAV;AACH;AACJ;AACJ,GAPQ,EAOP,CAACH,SAAD,CAPO,CAAT;AAWA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,eAAe,EAAE;AAAlD,KADT;AAEE,IAAA,GAAG,EAAEN,SAFP;AAAA,cAIGF,OAAO,gBACN,QAAC,IAAD;AACE,MAAA,MAAM,EAAE;AACNS,QAAAA,CAAC,EAAEP,SAAS,CAACG,OAAV,CAAkBK,UADf;AAENC,QAAAA,CAAC,EAAET,SAAS,CAACG,OAAV,CAAkBO,SAFf;AAGNC,QAAAA,CAAC,EAAEX,SAAS,CAACG,OAAV,CAAkBS,WAHf;AAINC,QAAAA,CAAC,EAAEb,SAAS,CAACG,OAAV,CAAkBW;AAJf,OADV;AAAA,6BAQE;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADM,GAWJ;AAfN;AAAA;AAAA;AAAA;AAAA,UADF;AAmBH,CApCD;;GAAMrB,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Node from \"./node\";\r\n\r\nconst Screen = ()=>{\r\n\r\n    const a = Array(100);\r\n    const [population,setPopulation] = useState(1);\r\n    const [trueRef,setTrueRef] = useState(null);\r\n    const screenRef = useRef(null);\r\n    useEffect(()=>{\r\n        if(screenRef){\r\n            console.log(screenRef);\r\n            if(screenRef.current){\r\n                setTrueRef(screenRef.current);\r\n            }\r\n        }\r\n    },[screenRef])\r\n\r\n\r\n\r\n    return (\r\n      <div\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#1E1E1E\" }}\r\n        ref={screenRef}\r\n      >\r\n        {trueRef ? (\r\n          <Node\r\n            bounds={{\r\n              l: screenRef.current.offsetLeft,\r\n              t: screenRef.current.offsetTop,\r\n              w: screenRef.current.clientWidth,\r\n              h: screenRef.current.clientHeight,\r\n            }}\r\n          >\r\n            <span></span>\r\n          </Node>\r\n        ) : null}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}