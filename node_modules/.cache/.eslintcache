[{"E:\\projects\\Fun\\genetic algorithm\\src\\index.js":"1","E:\\projects\\Fun\\genetic algorithm\\src\\App.js":"2","E:\\projects\\Fun\\genetic algorithm\\src\\reportWebVitals.js":"3","E:\\projects\\Fun\\genetic algorithm\\src\\components\\screen.js":"4","E:\\projects\\Fun\\genetic algorithm\\src\\context\\globalContext.js":"5","E:\\projects\\Fun\\genetic algorithm\\src\\components\\statistics.js":"6","E:\\projects\\Fun\\genetic algorithm\\src\\components\\creature.js":"7"},{"size":517,"mtime":1616660189445,"results":"8","hashOfConfig":"9"},{"size":446,"mtime":1618082900467,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1616660189826,"results":"11","hashOfConfig":"9"},{"size":3689,"mtime":1618082916995,"results":"12","hashOfConfig":"9"},{"size":1234,"mtime":1618081870335,"results":"13","hashOfConfig":"9"},{"size":4574,"mtime":1618082778725,"results":"14","hashOfConfig":"9"},{"size":3180,"mtime":1618082880578,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"73yash",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"E:\\projects\\Fun\\genetic algorithm\\src\\index.js",[],["32","33"],"E:\\projects\\Fun\\genetic algorithm\\src\\App.js",["34"],"E:\\projects\\Fun\\genetic algorithm\\src\\reportWebVitals.js",[],"E:\\projects\\Fun\\genetic algorithm\\src\\components\\screen.js",["35","36","37","38","39","40","41","42"],"E:\\projects\\Fun\\genetic algorithm\\src\\context\\globalContext.js",["43","44","45"],"E:\\projects\\Fun\\genetic algorithm\\src\\components\\statistics.js",["46","47"],"E:\\projects\\Fun\\genetic algorithm\\src\\components\\creature.js",["48","49","50","51","52"],"import { useEffect, useState, useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport \"./node.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Creature = (props) => {\r\n  const bounds = props.bounds;\r\n  const size = 5;\r\n\r\n  const nodeRef = useRef(null);\r\n  const { status, speed } = useGlobalState();\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(Math.random() * bounds.w),\r\n    y: Math.floor(Math.random() * bounds.h),\r\n  });\r\n  const [color, setColor] = useState(props.color ? props.color : \"#5EFF00\");\r\n\r\n  function mutateSelf() {}\r\n\r\n  function mateWithNeighbour() {}\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 100);\r\n    const skipY = Math.floor(Math.random() * 100);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n    if (newPosition.x > bounds.w + bounds.l) {\r\n      newPosition.x = bounds.w;\r\n    }\r\n    if (newPosition.y > bounds.h + bounds.t) {\r\n      newPosition.y = bounds.h;\r\n    }\r\n    if (newPosition.x < bounds.l) {\r\n      newPosition.x = bounds.l;\r\n    }\r\n    if (newPosition.y < bounds.t) {\r\n      newPosition.y = bounds.t;\r\n    }\r\n\r\n    setPosition({ ...newPosition });\r\n    setColor(\"#5EFF00\");\r\n  }\r\n\r\n  function destroySelf() {\r\n    props.creatures.forEach((c, i) => {\r\n      if (c.key.localeCompare(props.uid) === 0) {\r\n        console.log(c);\r\n        setColor(\"#EE00FF\");\r\n        setInterval(\r\n          () => {\r\n            const cList = props.creatures;\r\n            cList.splice(i, 1);\r\n            props.setCreatures(cList);\r\n          },\r\n\r\n          1000\r\n        );\r\n      }\r\n      // console.log(c);\r\n    });\r\n  }\r\n  function getNeighbourHood() {\r\n    const children = nodeRef.current.parentNode?.childNodes;\r\n    const neighbours = [];\r\n    if (children) {\r\n      Object.keys(children).forEach((key) => {\r\n        if (\r\n          children[key]?.nodeName === \"DIV\" &&\r\n          Math.abs(children[key].offsetLeft - nodeRef.current.offsetLeft) <\r\n            10 &&\r\n          Math.abs(children[key].offsetTop - nodeRef.current.offsetTop) < 10 &&\r\n          children[key].firstChild.id.localeCompare(\r\n            `${props.uid}+spanOfCreature`\r\n          ) !== 0\r\n        ) {\r\n          neighbours.push(children[key]);\r\n        }\r\n      });\r\n    }\r\n    return { neighbours };\r\n  }\r\n\r\n  function addChildToPopulation() {\r\n    if (Math.random() > 0.6) {\r\n      const creatures = props.creatures;\r\n      const k = uuidv4();\r\n      creatures.push(\r\n        <Creature\r\n          uid={k}\r\n          key={k}\r\n          color=\"#FF0000\"\r\n          screenRef={props.screenRef}\r\n          setCreatures={props.setCreatures}\r\n          creatures={creatures}\r\n          bounds={bounds}\r\n        >\r\n          <span key={`${k}+spanOfCreature`} id={`${k}+spanOfCreature`}></span>\r\n        </Creature>\r\n      );\r\n      props.setCreatures([...creatures]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (nodeRef && nodeRef.current && status.localeCompare(\"Playing\") === 0) {\r\n      destroySelf();\r\n      var timeInterval = setInterval(() => {\r\n        changePosition();\r\n        const { neighbours } = getNeighbourHood();\r\n        if (neighbours.length > 0) {\r\n          addChildToPopulation();\r\n        }\r\n      }, (Math.random() * 5000) / speed);\r\n      return () => {\r\n        clearInterval(timeInterval);\r\n      };\r\n    }\r\n  }, [position, status, speed, nodeRef]);\r\n\r\n  return (\r\n    <Card\r\n      ref={nodeRef}\r\n      style={{\r\n        backgroundColor: color,\r\n        height: size,\r\n        width: size,\r\n        top: position.y,\r\n        left: position.x,\r\n        position: \"absolute\",\r\n        borderRadius: size / 2,\r\n        border: \"none\",\r\n        transition: \"all 1s ease-in-out\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Creature;\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":11,"column":7,"nodeType":"59","messageId":"60","endLine":11,"endColumn":11},{"ruleId":"57","severity":1,"message":"64","line":14,"column":11,"nodeType":"59","messageId":"60","endLine":14,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":31,"column":30,"nodeType":"59","endLine":31,"endColumn":37},{"ruleId":"65","severity":1,"message":"67","line":33,"column":6,"nodeType":"68","endLine":33,"endColumn":34,"suggestions":"69"},{"ruleId":"65","severity":1,"message":"70","line":65,"column":6,"nodeType":"68","endLine":65,"endColumn":17,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"72","line":76,"column":6,"nodeType":"68","endLine":76,"endColumn":16,"suggestions":"73"},{"ruleId":"57","severity":1,"message":"74","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"75","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},{"ruleId":"57","severity":1,"message":"76","line":1,"column":49,"nodeType":"59","messageId":"60","endLine":1,"endColumn":55},{"ruleId":"57","severity":1,"message":"77","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":138,"column":15,"nodeType":"80","messageId":"81","endLine":138,"endColumn":37},{"ruleId":"57","severity":1,"message":"82","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":26},{"ruleId":"57","severity":1,"message":"83","line":21,"column":12,"nodeType":"59","messageId":"60","endLine":21,"endColumn":22},{"ruleId":"57","severity":1,"message":"84","line":23,"column":12,"nodeType":"59","messageId":"60","endLine":23,"endColumn":29},{"ruleId":"65","severity":1,"message":"85","line":128,"column":6,"nodeType":"68","endLine":128,"endColumn":40,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useGlobalActions' is defined but never used.","'demo' is assigned a value but never used.","'status' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'earthRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'earthRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'earthDimensions'. Either include it or remove the dependency array. Mutable values like 'earthRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'InitializeCreatures'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'earthDimensions'. Either include it or remove the dependency array.",["91"],"'createRef' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Typography' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'ReactDom' is defined but never used.","'mutateSelf' is defined but never used.","'mateWithNeighbour' is defined but never used.","React Hook useEffect has missing dependencies: 'addChildToPopulation', 'changePosition', 'destroySelf', and 'getNeighbourHood'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"93","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [earthDimensions, earthRef]",{"range":"100","text":"101"},"Update the dependencies array to be: [InitializeCreatures, restarted]",{"range":"102","text":"103"},{"range":"104","text":"101"},"Update the dependencies array to be: [position, status, speed, nodeRef, destroySelf, changePosition, getNeighbourHood, addChildToPopulation]",{"range":"105","text":"106"},[1205,1233],"[earthDimensions, earthRef]",[2045,2056],"[InitializeCreatures, restarted]",[2366,2376],[3681,3715],"[position, status, speed, nodeRef, destroySelf, changePosition, getNeighbourHood, addChildToPopulation]"]