{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demo = Array.from(Array(20).keys());\n\nconst Earth = () => {\n  _s();\n\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      const handler = e => {\n        if (e.detail) {\n          e.detail.candidates.forEach(() => {\n            addNewCreature({\n              color: \"#FF0000\"\n            });\n          });\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", handler);\n      return () => {\n        var _earthRef$current;\n\n        return earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", handler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature(props) {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      color: (props === null || props === void 0 ? void 0 : props.color) ? props.color : \"#000000\"\n    });\n    creaturesRef.current = creaturesTemp;\n    setCreatures([...creaturesTemp]);\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creatures;\n    creaturesTemp.splice(Math.floor(Math.random() * creatures.length), 1);\n    setCreatures([...creaturesTemp]);\n  }\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n\n      for (var i = 0; i < 20; i++) {\n        addNewCreature({\n          color: \"#111111\"\n        });\n      }\n    }\n  }, [earthRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#2C931D\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    onMouseDown: e => {\n      // console.log(onClick);\n      e.preventDefault();\n\n      if (e.button === 0) {\n        addNewCreature({\n          color: \"#004CFF\"\n        });\n        console.log(\"tap\", creatures);\n      } else {\n        removeRandom();\n      }\n    },\n    children: earthRef && earthDimensions ? creaturesRef.current.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        color: creature.color,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"+vazZy669cQJY+Wxcu4vcQk//n8=\");\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","demo","Array","from","keys","Earth","creatures","setCreatures","earthDimensions","setEarthDimensions","earthRef","creaturesRef","current","handler","e","detail","candidates","forEach","addNewCreature","color","addEventListener","removeEventListener","props","creaturesTemp","push","uid","removeRandom","splice","Math","floor","random","length","top","offsetTop","left","offsetLeft","w","offsetWidth","h","offsetHeight","i","backgroundColor","height","width","preventDefault","button","console","log","map","creature"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\nconst demo = Array.from(Array(20).keys());\r\n\r\nconst Earth = () => {\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const handler = (e) => {\r\n        if (e.detail) {\r\n          e.detail.candidates.forEach(() => {\r\n            addNewCreature({ color: \"#FF0000\" });\r\n          });\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", handler);\r\n      return () => earthRef?.current?.removeEventListener(\"birth\", handler);\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      color: props?.color ? props.color : \"#000000\",\r\n    });\r\n\r\n    creaturesRef.current = creaturesTemp;\r\n    setCreatures([...creaturesTemp]);\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creatures;\r\n    creaturesTemp.splice(Math.floor(Math.random() * creatures.length), 1);\r\n    setCreatures([...creaturesTemp]);\r\n  }\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n      for (var i = 0; i < 20; i++) {\r\n        addNewCreature({ color: \"#111111\" });\r\n      }\r\n    }\r\n  }, [earthRef]);\r\n  return (\r\n    <div\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#2C931D\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={(e) => {\r\n        // console.log(onClick);\r\n        e.preventDefault();\r\n        if (e.button === 0) {\r\n          addNewCreature({ color: \"#004CFF\" });\r\n          console.log(\"tap\", creatures);\r\n        } else {\r\n          removeRandom();\r\n        }\r\n      }}\r\n    >\r\n      {earthRef && earthDimensions\r\n        ? creaturesRef.current.map((creature) => {\r\n            return (\r\n              <Creature\r\n                color={creature.color}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}