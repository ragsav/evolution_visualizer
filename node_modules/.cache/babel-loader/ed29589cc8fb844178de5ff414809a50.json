{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\creature.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport ReactDom from \"react-dom\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport \"./node.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Creature = props => {\n  _s();\n\n  const bounds = props.bounds;\n  const size = 5;\n  const nodeRef = useRef(null);\n  const {\n    status,\n    speed\n  } = useGlobalState();\n  const [position, setPosition] = useState({\n    x: Math.floor(Math.random() * bounds.w),\n    y: Math.floor(Math.random() * bounds.h)\n  });\n  const [color, setColor] = useState(props.color ? props.color : \"#5EFF00\");\n\n  function mutateSelf() {}\n\n  function mateWithNeighbour() {}\n\n  function changePosition() {\n    const pos = [1, -1];\n    const skipX = Math.floor(Math.random() * 100);\n    const skipY = Math.floor(Math.random() * 100);\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2);\n    const newPosition = {\n      x: position.x + pos[plusMinusX] * skipX,\n      y: position.y + pos[plusMinusY] * skipY\n    };\n\n    if (newPosition.x > bounds.w + bounds.l) {\n      newPosition.x = bounds.w;\n    }\n\n    if (newPosition.y > bounds.h + bounds.t) {\n      newPosition.y = bounds.h;\n    }\n\n    if (newPosition.x < bounds.l) {\n      newPosition.x = bounds.l;\n    }\n\n    if (newPosition.y < bounds.t) {\n      newPosition.y = bounds.t;\n    }\n\n    setPosition({ ...newPosition\n    });\n    setColor(\"#5EFF00\");\n  }\n\n  function destroySelf() {\n    props.creatures.forEach((c, i) => {\n      // if (c.key.localeCompare(props.uid) === 0) {\n      //   console.log(c);\n      // }\n      console.log(c);\n    });\n  }\n\n  function getNeighbourHood() {\n    var _nodeRef$current$pare;\n\n    const children = (_nodeRef$current$pare = nodeRef.current.parentNode) === null || _nodeRef$current$pare === void 0 ? void 0 : _nodeRef$current$pare.childNodes;\n    const neighbours = [];\n\n    if (children) {\n      Object.keys(children).forEach(key => {\n        var _children$key;\n\n        if (((_children$key = children[key]) === null || _children$key === void 0 ? void 0 : _children$key.nodeName) === \"DIV\" && Math.abs(children[key].offsetLeft - nodeRef.current.offsetLeft) < 10 && Math.abs(children[key].offsetTop - nodeRef.current.offsetTop) < 10 && children[key].firstChild.id.localeCompare(`${props.uid}+spanOfCreature`) !== 0) {\n          neighbours.push(children[key]);\n        }\n      });\n    }\n\n    return {\n      neighbours\n    };\n  }\n\n  function addChildToPopulation() {\n    if (Math.random() > 0.6) {\n      const creatures = props.creatures;\n      const k = uuidv4();\n      creatures.push( /*#__PURE__*/_jsxDEV(Creature, {\n        uid: k,\n        color: \"#FF0000\",\n        screenRef: props.screenRef,\n        setCreatures: props.setCreatures,\n        creatures: creatures,\n        bounds: bounds,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `${k}+spanOfCreature`\n        }, `${k}+spanOfCreature`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this));\n      props.setCreatures([...creatures]);\n    }\n  }\n\n  useEffect(() => {\n    if (nodeRef && nodeRef.current && status.localeCompare(\"Playing\") === 0) {\n      destroySelf();\n      var timeInterval = setInterval(() => {\n        changePosition();\n        const {\n          neighbours\n        } = getNeighbourHood();\n\n        if (neighbours.length > 0) {\n          addChildToPopulation();\n        }\n      }, Math.random() * 5000 / speed);\n      return () => {\n        clearInterval(timeInterval);\n      };\n    }\n  }, [position, status, speed, nodeRef]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ref: nodeRef,\n    style: {\n      backgroundColor: color,\n      height: size,\n      width: size,\n      top: position.y,\n      left: position.x,\n      position: \"absolute\",\n      borderRadius: size / 2,\n      border: \"none\",\n      transition: \"all 1s ease-in-out\"\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Creature, \"TrDdiSAsZiEHXykf+9QfS3T7MLY=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Creature;\nexport default Creature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Creature\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/creature.js"],"names":["useEffect","useState","useRef","ReactDom","React","Card","useGlobalActions","useGlobalState","v4","uuidv4","Creature","props","bounds","size","nodeRef","status","speed","position","setPosition","x","Math","floor","random","w","y","h","color","setColor","mutateSelf","mateWithNeighbour","changePosition","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","l","t","destroySelf","creatures","forEach","c","i","console","log","getNeighbourHood","children","current","parentNode","childNodes","neighbours","Object","keys","key","nodeName","abs","offsetLeft","offsetTop","firstChild","id","localeCompare","uid","push","addChildToPopulation","k","screenRef","setCreatures","timeInterval","setInterval","length","clearInterval","backgroundColor","height","width","top","left","borderRadius","border","transition"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport \"./node.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Creature = (props) => {\r\n  const bounds = props.bounds;\r\n  const size = 5;\r\n\r\n  const nodeRef = useRef(null);\r\n  const { status, speed } = useGlobalState();\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(Math.random() * bounds.w),\r\n    y: Math.floor(Math.random() * bounds.h),\r\n  });\r\n  const [color, setColor] = useState(props.color ? props.color : \"#5EFF00\");\r\n\r\n  function mutateSelf() {}\r\n\r\n  function mateWithNeighbour() {}\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 100);\r\n    const skipY = Math.floor(Math.random() * 100);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n    if (newPosition.x > bounds.w + bounds.l) {\r\n      newPosition.x = bounds.w;\r\n    }\r\n    if (newPosition.y > bounds.h + bounds.t) {\r\n      newPosition.y = bounds.h;\r\n    }\r\n    if (newPosition.x < bounds.l) {\r\n      newPosition.x = bounds.l;\r\n    }\r\n    if (newPosition.y < bounds.t) {\r\n      newPosition.y = bounds.t;\r\n    }\r\n\r\n    setPosition({ ...newPosition });\r\n    setColor(\"#5EFF00\");\r\n  }\r\n\r\n  function destroySelf() {\r\n    props.creatures.forEach((c, i) => {\r\n      // if (c.key.localeCompare(props.uid) === 0) {\r\n      //   console.log(c);\r\n      // }\r\n      console.log(c);\r\n    });\r\n  }\r\n  function getNeighbourHood() {\r\n    const children = nodeRef.current.parentNode?.childNodes;\r\n    const neighbours = [];\r\n    if (children) {\r\n      Object.keys(children).forEach((key) => {\r\n        if (\r\n          children[key]?.nodeName === \"DIV\" &&\r\n          Math.abs(children[key].offsetLeft - nodeRef.current.offsetLeft) <\r\n            10 &&\r\n          Math.abs(children[key].offsetTop - nodeRef.current.offsetTop) < 10 &&\r\n          children[key].firstChild.id.localeCompare(\r\n            `${props.uid}+spanOfCreature`\r\n          ) !== 0\r\n        ) {\r\n          neighbours.push(children[key]);\r\n        }\r\n      });\r\n    }\r\n    return { neighbours };\r\n  }\r\n\r\n  function addChildToPopulation() {\r\n    if (Math.random() > 0.6) {\r\n      const creatures = props.creatures;\r\n      const k = uuidv4();\r\n      creatures.push(\r\n        <Creature\r\n          uid={k}\r\n          key={k}\r\n          color=\"#FF0000\"\r\n          screenRef={props.screenRef}\r\n          setCreatures={props.setCreatures}\r\n          creatures={creatures}\r\n          bounds={bounds}\r\n        >\r\n          <span key={`${k}+spanOfCreature`} id={`${k}+spanOfCreature`}></span>\r\n        </Creature>\r\n      );\r\n      props.setCreatures([...creatures]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (nodeRef && nodeRef.current && status.localeCompare(\"Playing\") === 0) {\r\n      destroySelf();\r\n      var timeInterval = setInterval(() => {\r\n        changePosition();\r\n        const { neighbours } = getNeighbourHood();\r\n        if (neighbours.length > 0) {\r\n          addChildToPopulation();\r\n        }\r\n      }, (Math.random() * 5000) / speed);\r\n      return () => {\r\n        clearInterval(timeInterval);\r\n      };\r\n    }\r\n  }, [position, status, speed, nodeRef]);\r\n\r\n  return (\r\n    <Card\r\n      ref={nodeRef}\r\n      style={{\r\n        backgroundColor: color,\r\n        height: size,\r\n        width: size,\r\n        top: position.y,\r\n        left: position.x,\r\n        position: \"absolute\",\r\n        borderRadius: size / 2,\r\n        border: \"none\",\r\n        transition: \"all 1s ease-in-out\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Creature;\r\n"]},"metadata":{},"sourceType":"module"}