{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Node from \"./node\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Statisitcs from \"./statistics\"; // import { Clear } from \"@material-ui/icons\";\n\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usePrevious(value) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nconst demo = Array.from(Array(20).keys());\n\nconst Screen = () => {\n  _s2();\n\n  // const {ground} = useGlobalState();\n  const {\n    setStatus\n  } = useGlobalActions();\n  const {\n    status\n  } = useGlobalState();\n  const [trueRef, setTrueRef] = useState(null);\n  const screenRef = useRef(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const [creatures, setCreatures] = useState([]);\n  const prevCreatures = usePrevious(creatures);\n\n  function InitializeCreatures() {\n    creatures.splice(0, creatures.length);\n    demo.forEach((t, i) => {\n      const k = uuidv4();\n      creatures.push( /*#__PURE__*/_jsxDEV(Node, {\n        screenRef: screenRef,\n        uid: k,\n        setCreatures: setCreatures,\n        creatures: creatures,\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `${k}+123`\n        }, `${k}+123`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this));\n    });\n    setCreatures([...creatures]);\n  }\n\n  useEffect(() => {\n    console.log(creatures.length);\n\n    if (status.localeCompare(\"Playing\") === 0 && Math.random() > 0.7 && creatures.length !== prevCreatures.length) {\n      const l = creatures.length;\n      const index = Math.random() * l;\n      const creaturesTemp = [...creatures];\n      creaturesTemp.splice(index, 1);\n      setCreatures([...creaturesTemp]);\n    }\n  }, [creatures]);\n  useEffect(() => {\n    if (status.localeCompare(\"Finished\") === 0) {\n      InitializeCreatures();\n    }\n  }, [status]);\n  useEffect(() => {\n    if (screenRef) {\n      if (screenRef.current) {\n        setTrueRef(screenRef.current);\n        InitializeCreatures();\n      }\n    }\n  }, [screenRef]);\n\n  function handleScreenClick(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"screen\",\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#1E1E1E\"\n    },\n    ref: screenRef,\n    onClick: e => handleScreenClick(e),\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(!isStatsVisible);\n      },\n      children: isStatsVisible === false ? /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ClearIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), isStatsVisible ? /*#__PURE__*/_jsxDEV(Statisitcs, {\n      setIsStatsVisible: setIsStatsVisible,\n      style: {\n        position: \"absolute\",\n        top: 100,\n        left: 100\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this) : null, trueRef ? creatures : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Screen, \"JDTXp5xHUxr6tkyWQZqgc1XKLrg=\", false, function () {\n  return [useGlobalActions, useGlobalState, usePrevious];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Button","Card","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Node","v4","uuidv4","Statisitcs","ClearIcon","usePrevious","value","ref","current","demo","Array","from","keys","Screen","setStatus","status","trueRef","setTrueRef","screenRef","isStatsVisible","setIsStatsVisible","creatures","setCreatures","prevCreatures","InitializeCreatures","splice","length","forEach","t","i","k","push","l","offsetLeft","offsetTop","w","clientWidth","h","clientHeight","console","log","localeCompare","Math","random","index","creaturesTemp","handleScreenClick","e","preventDefault","height","width","backgroundColor","position","top","left","color"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Node from \"./node\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Statisitcs from \"./statistics\";\r\n// import { Clear } from \"@material-ui/icons\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\n\r\n\r\nconst demo = Array.from(Array(20).keys());\r\nconst Screen = ()=>{\r\n\r\n    \r\n    // const {ground} = useGlobalState();\r\n    const { setStatus } = useGlobalActions();\r\n    const { status } = useGlobalState();\r\n    const [trueRef,setTrueRef] = useState(null);\r\n    const screenRef = useRef(null);\r\n    \r\n    const [isStatsVisible,setIsStatsVisible] = useState(false);\r\n    const [creatures,setCreatures] = useState([])\r\n  \r\n     const prevCreatures = usePrevious(creatures);\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n    function InitializeCreatures()  {\r\n      creatures.splice(0, creatures.length);\r\n      demo.forEach((t, i) => {\r\n        const k = uuidv4();\r\n        \r\n        creatures.push(\r\n          <Node\r\n            screenRef={screenRef}\r\n            uid={k}\r\n            key={k}\r\n            setCreatures={setCreatures}\r\n            creatures={creatures}\r\n            bounds={{\r\n              l: screenRef.current.offsetLeft,\r\n              t: screenRef.current.offsetTop,\r\n              w: screenRef.current.clientWidth,\r\n              h: screenRef.current.clientHeight,\r\n            }}\r\n          >\r\n            <span key={`${k}+123`} id={`${k}+123`}></span>\r\n          </Node>\r\n        );\r\n      });\r\n      setCreatures([...creatures]);\r\n    }\r\n\r\n    useEffect(() => {\r\n      console.log(creatures.length);\r\n\r\n      if (\r\n        status.localeCompare(\"Playing\") === 0 &&\r\n        Math.random() > 0.7 &&\r\n        creatures.length !== prevCreatures.length\r\n      ) {\r\n        const l = creatures.length;\r\n        const index = Math.random() * l;\r\n        const creaturesTemp = [...creatures];\r\n        creaturesTemp.splice(index, 1);\r\n        setCreatures([...creaturesTemp]);\r\n      }\r\n    }, [creatures]);\r\n\r\n    useEffect(() => {\r\n      if (status.localeCompare(\"Finished\") === 0) {\r\n        InitializeCreatures();\r\n      }\r\n    }, [status]);\r\n\r\n    useEffect(() => {\r\n      if (screenRef) {\r\n        if (screenRef.current) {\r\n          setTrueRef(screenRef.current);\r\n          InitializeCreatures();\r\n        }\r\n      }\r\n    }, [screenRef]);\r\n\r\n    \r\n\r\n    function handleScreenClick(e) {\r\n      e.preventDefault();\r\n    }\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n      <div\r\n        id=\"screen\"\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#1E1E1E\" }}\r\n        ref={screenRef}\r\n        onClick={(e) => handleScreenClick(e)}\r\n      >\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(!isStatsVisible);\r\n          }}\r\n        >\r\n          {isStatsVisible === false ? (\r\n            <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n          ) : (\r\n            <ClearIcon style={{ color: \"white\" }}></ClearIcon>\r\n          )}\r\n        </IconButton>\r\n\r\n        {isStatsVisible ? (\r\n          <Statisitcs\r\n            setIsStatsVisible={setIsStatsVisible}\r\n            style={{ position: \"absolute\", top: 100, left: 100 }}\r\n          ></Statisitcs>\r\n        ) : null}\r\n        {trueRef ? creatures : null}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}