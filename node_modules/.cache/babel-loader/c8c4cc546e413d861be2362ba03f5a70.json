{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\radiation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport { useGlobalState } from \"../context/globalContext\";\nimport mojs from \"@mojs/core\";\nimport animationData from \"../assets/radiation.json\";\nimport Lottie from \"react-lottie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Radiation = ({\n  earthRef\n}) => {\n  _s();\n\n  const animDom = useRef();\n  const ring1 = useRef();\n  const ring2 = useRef();\n  const ring3 = useRef();\n  const ring4 = useRef();\n  const ring5 = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const {\n    radiationDuration,\n    radiationAmplitude,\n    radiationRadius,\n    radiationPosition\n  } = useGlobalState();\n  useEffect(() => {\n    if (animDom && animDom.current) {\n      ring1.current = new mojs.Shape({\n        parent: animDom.current,\n        shape: \"circle\",\n        fill: \"none\",\n        scale: {\n          0: 1\n        },\n        radius: {\n          0: Math.floor(radiationRadius / 3)\n        },\n        strokeWidth: {\n          30: 0\n        },\n        stroke: \"#E96BFF\",\n        delay: \"rand(75, 150)\",\n        angle: {\n          \"rand(-35, -70)\": 0\n        },\n        duration: Math.floor(3000 / radiationAmplitude),\n        left: 0,\n        top: 0,\n        easing: \"cubic.inout\",\n        className: \"no-pointer\",\n        repeat: Math.floor(radiationDuration / Math.floor(3000 / radiationAmplitude))\n      });\n      ring2.current = new mojs.Shape({\n        parent: animDom.current,\n        shape: \"circle\",\n        fill: \"none\",\n        scale: {\n          0: 1\n        },\n        radius: {\n          0: Math.floor(2 * radiationRadius / 3)\n        },\n        strokeWidth: {\n          15: 0\n        },\n        stroke: \"#F57657\",\n        delay: \"rand(75, 150)\",\n        angle: {\n          \"rand(-35, -70)\": 0\n        },\n        duration: Math.floor(3000 / radiationAmplitude),\n        left: 0,\n        top: 0,\n        easing: \"cubic.inout\",\n        className: \"no-pointer\",\n        repeat: Math.floor(radiationDuration / Math.floor(3000 / radiationAmplitude))\n      });\n      ring3.current = new mojs.Shape({\n        parent: animDom.current,\n        shape: \"circle\",\n        fill: \"none\",\n        scale: {\n          0: 1\n        },\n        radius: {\n          0: radiationRadius\n        },\n        strokeWidth: {\n          10: 0\n        },\n        stroke: \"#F57657\",\n        delay: \"rand(75, 150)\",\n        angle: {\n          \"rand(-35, -70)\": 0\n        },\n        duration: Math.floor(3000 / radiationAmplitude),\n        left: 0,\n        top: 0,\n        easing: \"cubic.inout\",\n        className: \"no-pointer\",\n        repeat: Math.floor(radiationDuration / Math.floor(3000 / radiationAmplitude))\n      });\n      ring4.current = new mojs.Shape({\n        parent: animDom.current,\n        shape: \"circle\",\n        fill: \"none\",\n        scale: {\n          0: 1\n        },\n        radius: {\n          0: radiationRadius / 4\n        },\n        strokeWidth: {\n          10: 0\n        },\n        stroke: \"#F57657\",\n        delay: \"rand(75, 150)\",\n        angle: {\n          \"rand(-35, -70)\": 0\n        },\n        duration: Math.floor(3000 / radiationAmplitude),\n        left: 0,\n        top: 0,\n        easing: \"cubic.inout\",\n        className: \"no-pointer\",\n        repeat: Math.floor(radiationDuration / Math.floor(3000 / radiationAmplitude))\n      });\n    }\n  }, [animDom, radiationDuration, radiationAmplitude, radiationRadius]);\n  useEffect(() => {\n    if (radiationPosition) {\n      ring1.current.tune({\n        x: radiationPosition.x,\n        y: radiationPosition.y\n      }).play();\n      ring2.current.tune({\n        x: radiationPosition.x,\n        y: radiationPosition.y\n      }).play();\n      ring3.current.tune({\n        x: radiationPosition.x,\n        y: radiationPosition.y\n      }).play();\n      ring4.current.tune({\n        x: radiationPosition.x,\n        y: radiationPosition.y\n      }).play();\n    } // console.log(radiationPosition);\n\n  }, [radiationPosition]);\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: animDom,\n    className: \"Radiation\",\n    style: {\n      position: \"absolute\"\n    },\n    children: radiationPosition ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Volcano\",\n      style: {\n        position: \"absolute\",\n        top: radiationPosition.y - radiationRadius,\n        left: radiationPosition.x - radiationRadius\n      },\n      children: /*#__PURE__*/_jsxDEV(Lottie, {\n        options: defaultOptions,\n        height: radiationRadius,\n        width: radiationRadius,\n        style: {\n          transition: \"all 2s linear\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Radiation, \"ZlSTuZU3KnekqcysXdnd7y4nUCw=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Radiation;\nexport default Radiation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radiation\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/radiation.js"],"names":["React","useRef","useEffect","useState","useCallback","useGlobalState","mojs","animationData","Lottie","Radiation","earthRef","animDom","ring1","ring2","ring3","ring4","ring5","isOpen","setIsOpen","isAnimating","setIsAnimating","radiationDuration","radiationAmplitude","radiationRadius","radiationPosition","current","Shape","parent","shape","fill","scale","radius","Math","floor","strokeWidth","stroke","delay","angle","duration","left","top","easing","className","repeat","tune","x","y","play","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","position","transition"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { useGlobalState } from \"../context/globalContext\";\r\nimport mojs from \"@mojs/core\";\r\n\r\nimport animationData from \"../assets/radiation.json\";\r\n\r\nimport Lottie from \"react-lottie\";\r\nconst Radiation = ({ earthRef }) => {\r\n  const animDom = useRef();\r\n  const ring1 = useRef();\r\n  const ring2 = useRef();\r\n  const ring3 = useRef();\r\n  const ring4 = useRef();\r\n  const ring5 = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  const {\r\n    radiationDuration,\r\n    radiationAmplitude,\r\n    radiationRadius,\r\n    radiationPosition,\r\n  } = useGlobalState();\r\n\r\n  useEffect(() => {\r\n    if (animDom && animDom.current) {\r\n      ring1.current = new mojs.Shape({\r\n        parent: animDom.current,\r\n        shape: \"circle\",\r\n        fill: \"none\",\r\n        scale: { 0: 1 },\r\n\r\n        radius: { 0: Math.floor(radiationRadius / 3) },\r\n        strokeWidth: { 30: 0 },\r\n        stroke: \"#E96BFF\",\r\n        delay: \"rand(75, 150)\",\r\n\r\n        angle: { \"rand(-35, -70)\": 0 },\r\n        duration: Math.floor(3000 / radiationAmplitude),\r\n        left: 0,\r\n        top: 0,\r\n        easing: \"cubic.inout\",\r\n        className: \"no-pointer\",\r\n        repeat: Math.floor(\r\n          radiationDuration / Math.floor(3000 / radiationAmplitude)\r\n        ),\r\n      });\r\n\r\n      ring2.current = new mojs.Shape({\r\n        parent: animDom.current,\r\n        shape: \"circle\",\r\n        fill: \"none\",\r\n        scale: { 0: 1 },\r\n\r\n        radius: { 0: Math.floor((2 * radiationRadius) / 3) },\r\n        strokeWidth: { 15: 0 },\r\n        stroke: \"#F57657\",\r\n        delay: \"rand(75, 150)\",\r\n\r\n        angle: { \"rand(-35, -70)\": 0 },\r\n        duration: Math.floor(3000 / radiationAmplitude),\r\n        left: 0,\r\n        top: 0,\r\n        easing: \"cubic.inout\",\r\n        className: \"no-pointer\",\r\n        repeat: Math.floor(\r\n          radiationDuration / Math.floor(3000 / radiationAmplitude)\r\n        ),\r\n      });\r\n\r\n      ring3.current = new mojs.Shape({\r\n        parent: animDom.current,\r\n        shape: \"circle\",\r\n        fill: \"none\",\r\n        scale: { 0: 1 },\r\n\r\n        radius: { 0: radiationRadius },\r\n        strokeWidth: { 10: 0 },\r\n        stroke: \"#F57657\",\r\n        delay: \"rand(75, 150)\",\r\n\r\n        angle: { \"rand(-35, -70)\": 0 },\r\n        duration: Math.floor(3000 / radiationAmplitude),\r\n        left: 0,\r\n        top: 0,\r\n        easing: \"cubic.inout\",\r\n        className: \"no-pointer\",\r\n        repeat: Math.floor(\r\n          radiationDuration / Math.floor(3000 / radiationAmplitude)\r\n        ),\r\n      });\r\n      ring4.current = new mojs.Shape({\r\n        parent: animDom.current,\r\n        shape: \"circle\",\r\n        fill: \"none\",\r\n        scale: { 0: 1 },\r\n\r\n        radius: { 0: radiationRadius / 4 },\r\n        strokeWidth: { 10: 0 },\r\n        stroke: \"#F57657\",\r\n        delay: \"rand(75, 150)\",\r\n\r\n        angle: { \"rand(-35, -70)\": 0 },\r\n        duration: Math.floor(3000 / radiationAmplitude),\r\n        left: 0,\r\n        top: 0,\r\n        easing: \"cubic.inout\",\r\n        className: \"no-pointer\",\r\n        repeat: Math.floor(\r\n          radiationDuration / Math.floor(3000 / radiationAmplitude)\r\n        ),\r\n      });\r\n    }\r\n  }, [animDom, radiationDuration, radiationAmplitude, radiationRadius]);\r\n\r\n  useEffect(() => {\r\n    if (radiationPosition) {\r\n      ring1.current\r\n        .tune({ x: radiationPosition.x, y: radiationPosition.y })\r\n        .play();\r\n      ring2.current\r\n        .tune({ x: radiationPosition.x, y: radiationPosition.y })\r\n        .play();\r\n      ring3.current\r\n        .tune({ x: radiationPosition.x, y: radiationPosition.y })\r\n        .play();\r\n      ring4.current\r\n        .tune({ x: radiationPosition.x, y: radiationPosition.y })\r\n        .play();\r\n    }\r\n    // console.log(radiationPosition);\r\n  }, [radiationPosition]);\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  return (\r\n    <div ref={animDom} className=\"Radiation\" style={{ position: \"absolute\" }}>\r\n      {radiationPosition ? (\r\n        <div\r\n          className=\"Volcano\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: radiationPosition.y - radiationRadius,\r\n            left: radiationPosition.x - radiationRadius,\r\n          }}\r\n        >\r\n          <Lottie\r\n            options={defaultOptions}\r\n            height={radiationRadius}\r\n            width={radiationRadius}\r\n            style={{ transition: \"all 2s linear\" }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Radiation;\r\n"]},"metadata":{},"sourceType":"module"}