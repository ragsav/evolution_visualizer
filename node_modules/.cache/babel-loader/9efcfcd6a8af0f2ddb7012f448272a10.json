{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport EarthQuake from \"./earthQuake\"; // const demo = Array.from(Array(100).keys());\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Earth = () => {\n  _s();\n\n  const {\n    status,\n    restarted,\n    earthQuakePosition,\n    earthQuakeDuration\n  } = useGlobalState();\n  const {\n    setEarthQuakePosition\n  } = useGlobalActions();\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const [mouseOnStats, setMouseOnStats] = useState(false);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  const birthCache = useRef([]);\n\n  function newBirth(parents) {\n    const birthCacheTemp = birthCache.current;\n\n    for (var i = 0; i < birthCacheTemp.length; i++) {\n      if (birthCacheTemp[i].mother.localeCompare(parents.mother) !== 0 && birthCacheTemp[i].mother.localeCompare(parents.mother) !== 0 || birthCacheTemp[i].father.localeCompare(parents.mother) !== 0 && birthCacheTemp[i].father.localeCompare(parents.mother) !== 0) {\n        addNewCreature({\n          x: parents.x,\n          y: parents.y\n        });\n      } else {\n        console.log(\"BirthCache hit!\");\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      const birthHandler = e => {\n        if (e.detail) {\n          newBirth({\n            mother: e.detail.mother,\n            father: e.detail.candidates[0].id,\n            x: Math.floor(e.detail.position.x + e.detail.candidates[0].offsetLeft) / 2,\n            y: Math.floor(e.detail.position.y + e.detail.candidates[0].offsetTop) / 2\n          });\n        }\n      };\n\n      const deathHandler = e => {\n        if (e.detail) {\n          removeCreatureByUid(e.detail.uid);\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", birthHandler);\n      earthRef.current.addEventListener(\"death\", deathHandler);\n      return () => {\n        var _earthRef$current, _earthRef$current2;\n\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", birthHandler);\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.removeEventListener(\"death\", deathHandler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      birth: Date.now()\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function removeCreatureByUid(uid) {\n    const creaturesTemp = creaturesRef.current;\n\n    for (var i = 0; i < creaturesTemp.length; i++) {\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\n        creaturesTemp.splice(i, 1);\n        setCreatures([...creaturesTemp]);\n        creaturesRef.current = creaturesTemp;\n        break;\n      }\n    }\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature();\n    }\n  }\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n\n  function makeEarthQuake(x, y) {\n    var _earthRef$current3;\n\n    const event = new CustomEvent(\"earthQuake\", {\n      detail: {\n        x,\n        y\n      }\n    });\n    earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current3 = earthRef.current) === null || _earthRef$current3 === void 0 ? void 0 : _earthRef$current3.dispatchEvent(event);\n  }\n\n  useEffect(() => {\n    if (earthQuakePosition) {\n      const interval = setInterval(() => {\n        setEarthQuakePosition(null);\n      }, [earthQuakeDuration]);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [earthQuakePosition, earthQuakeDuration]);\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n\n    if (!mouseOnStats && !isStatsVisible) {\n      if (e.button === 0) {\n        makeEarthQuake(e.clientX - earthDimensions.left, e.clientY - earthDimensions.top);\n        setEarthQuakePosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        }); // addNewCreature({ color: \"#004CFF\" });\n      } else {\n        removeRandom();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [/*#__PURE__*/_jsxDEV(EarthQuake, {\n      duration: 3000,\n      earthRef: earthRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        birth: creature.birth,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this);\n    }) : null, isStatsVisible === false ? /*#__PURE__*/_jsxDEV(IconButton, {\n      onMouseEnter: e => {\n        e.preventDefault();\n        setMouseOnStats(true);\n      },\n      onMouseLeave: e => {\n        e.preventDefault();\n        setMouseOnStats(false);\n      },\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Statisitcs, {\n      closeStats: () => {\n        setIsStatsVisible(false);\n        setMouseOnStats(false);\n      },\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"19sNGCJ6MbJOfDMO+EglierSuo4=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","EarthQuake","Earth","status","restarted","earthQuakePosition","earthQuakeDuration","setEarthQuakePosition","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","setIsStatsVisible","mouseOnStats","setMouseOnStats","earthRef","creaturesRef","birthCache","newBirth","parents","birthCacheTemp","current","i","length","mother","localeCompare","father","addNewCreature","x","y","console","log","birthHandler","e","detail","candidates","id","Math","floor","position","offsetLeft","offsetTop","deathHandler","removeCreatureByUid","uid","addEventListener","removeEventListener","creaturesTemp","push","birth","Date","now","splice","removeRandom","random","InitializeCreatures","top","left","w","offsetWidth","h","offsetHeight","makeEarthQuake","event","CustomEvent","dispatchEvent","interval","setInterval","clearInterval","handleEarthMouseDown","preventDefault","button","clientX","clientY","backgroundColor","height","width","map","creature","color"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport EarthQuake from \"./earthQuake\";\r\n\r\n// const demo = Array.from(Array(100).keys());\r\n\r\nconst Earth = () => {\r\n  const { status, restarted ,earthQuakePosition,earthQuakeDuration} = useGlobalState();\r\n  const {setEarthQuakePosition} = useGlobalActions();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const [mouseOnStats,setMouseOnStats] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n  const birthCache = useRef([]);\r\n\r\n\r\n\r\n  function newBirth(parents){\r\n    const birthCacheTemp = birthCache.current;\r\n    for(var i=0;i<birthCacheTemp.length;i++){\r\n      if((birthCacheTemp[i].mother.localeCompare(parents.mother)!==0&&birthCacheTemp[i].mother.localeCompare(parents.mother)!==0)\r\n      ||(birthCacheTemp[i].father.localeCompare(parents.mother)!==0&&birthCacheTemp[i].father.localeCompare(parents.mother)!==0)){\r\n        addNewCreature({x:parents.x,y:parents.y})\r\n      }else{\r\n        console.log(\"BirthCache hit!\")\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const birthHandler = (e) => {\r\n        if (e.detail) {\r\n          newBirth({\r\n            mother: e.detail.mother,\r\n            father: e.detail.candidates[0].id,\r\n            x:\r\n              Math.floor(\r\n                e.detail.position.x + e.detail.candidates[0].offsetLeft\r\n              ) / 2,\r\n            y:\r\n              Math.floor(\r\n                e.detail.position.y + e.detail.candidates[0].offsetTop\r\n              ) / 2,\r\n          });\r\n        }\r\n      };\r\n      const deathHandler = (e) => {\r\n        if (e.detail) {\r\n          removeCreatureByUid(e.detail.uid);\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", birthHandler);\r\n      earthRef.current.addEventListener(\"death\", deathHandler);\r\n      return () => {earthRef?.current?.removeEventListener(\"birth\", birthHandler);earthRef?.current?.removeEventListener(\"death\", deathHandler);}\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      birth:Date.now()\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeCreatureByUid(uid){\r\n    const creaturesTemp = creaturesRef.current;\r\n    for(var i=0;i<creaturesTemp.length;i++){\r\n      if(creaturesTemp[i].uid.localeCompare(uid)===0){\r\n        creaturesTemp.splice(i, 1);\r\n        setCreatures([...creaturesTemp]);\r\n        creaturesRef.current = creaturesTemp;\r\n        break;\r\n      }\r\n    }\r\n\r\n\r\n    \r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n\r\n\r\n  function makeEarthQuake(x,y){\r\n\r\n    const event = new CustomEvent(\"earthQuake\", {\r\n      detail: { x,y },\r\n    });\r\n    earthRef?.current?.dispatchEvent(event);\r\n  }\r\n  useEffect(() => {\r\n    if (earthQuakePosition) {\r\n      const interval = setInterval(() => {\r\n        setEarthQuakePosition(null);\r\n        \r\n      }, [earthQuakeDuration]);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [earthQuakePosition,earthQuakeDuration]);\r\n\r\n\r\n  function handleEarthMouseDown(e)  {\r\n    e.preventDefault();\r\n    if(!mouseOnStats&&!isStatsVisible){\r\n      if (e.button === 0) {\r\n        makeEarthQuake(\r\n          e.clientX - earthDimensions.left,\r\n          e.clientY - earthDimensions.top\r\n        );\r\n        setEarthQuakePosition({\r\n          x: e.clientX - earthDimensions.left,\r\n          y: e.clientY - earthDimensions.top,\r\n        });\r\n        // addNewCreature({ color: \"#004CFF\" });\r\n      } else {\r\n        removeRandom();\r\n      }\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#222222\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      <EarthQuake duration={3000} earthRef={earthRef}></EarthQuake>\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                birth={creature.birth}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          onMouseEnter={(e) => {\r\n            \r\n            e.preventDefault();\r\n            setMouseOnStats(true);\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            \r\n            e.preventDefault();\r\n            setMouseOnStats(false);\r\n          }}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          closeStats={()=>{setIsStatsVisible(false);setMouseOnStats(false)}}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}