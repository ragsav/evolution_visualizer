{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\globalContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GlobalActionsContext = /*#__PURE__*/React.createContext(undefined);\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [status, setStatus] = useState(\"Paused\");\n  const [restarted, setRestart] = useState(true);\n  const [speed, setSpeed] = useState(1);\n  const [calamity, setCalamity] = useState(\"radiation\");\n  const [calamityType, setCalamityType] = useState(\"radiation\");\n  const [calamityPosition, setCalamityPosition] = useState(null);\n  const [calamityDuration, setCalamityDuration] = useState(10000);\n  const [calamitySize, setCalamitySize] = useState(100);\n  const [calamityAmplitude, setCalamityAmplitude] = useState(6);\n  const [calamities, setCalamities] = useState([]);\n  const calamitiesOrg = useRef([]);\n  const [earthQuakePosition, setEarthQuakePosition] = useState(null);\n  const [earthQuakeDuration, setEarthQuakeDuration] = useState(10000);\n  const [earthQuakeAmplitude, setEarthQuakeAmplitude] = useState(4);\n  const [earthQuakeRadius, setEarthQuakeRadius] = useState(100);\n  const [volcanoPosition, setVolcanoPosition] = useState(null);\n  const [volcanoDuration, setVolcanoDuration] = useState(10000);\n  const [volcanoSize, setVolcanoSize] = useState(100);\n  const [radiationPosition, setRadiationPosition] = useState(null);\n  const [radiationDuration, setRadiationDuration] = useState(10000);\n  const [radiationAmplitude, setRadiationAmplitude] = useState(4);\n  const [radiationRadius, setRadiationRadius] = useState(100); // useEffect(() => {\n  //   console.log(volcanoPosition);\n  // }, [volcanoPosition]);\n\n  function addCalamity() {\n    const uid = uuidv4();\n    const calamity = {\n      id: uid,\n      type: calamityType,\n      position: calamityPosition,\n      duration: calamityDuration,\n      amplitude: calamityAmplitude,\n      size: calamitySize,\n      start: Date.now()\n    };\n    const calamitiesTemp = calamitiesOrg.current;\n    calamitiesTemp.push(calamity);\n    calamitiesOrg.current = calamitiesTemp;\n    setCalamities([...calamitiesTemp]);\n    return uid;\n  }\n\n  function removeCalamityById(id) {\n    const calamitiesTemp = calamitiesOrg.current;\n    const l = calamitiesTemp.length;\n\n    for (var i = 0; i < l; i++) {\n      if (calamitiesTemp[i].id.localeCompare(id) === 0) {\n        calamitiesTemp.splice(i, 1);\n        break;\n      }\n    }\n\n    calamitiesOrg.current = calamitiesTemp;\n    setCalamities([...calamitiesTemp]);\n    console.log(\"removed\", calamitiesOrg.current);\n  }\n\n  useEffect(() => {\n    if (calamitiesOrg.current.length < 5 && calamityPosition) {\n      const newUid = addCalamity();\n      console.log(newUid, calamitiesOrg.current);\n      const interval = setInterval(() => {\n        removeCalamityById(newUid);\n      }, [calamityDuration]);\n    }\n  }, [calamityPosition]);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      status,\n      speed,\n      restarted,\n      calamity,\n      earthQuakePosition,\n      earthQuakeDuration,\n      earthQuakeAmplitude,\n      earthQuakeRadius,\n      volcanoPosition,\n      volcanoDuration,\n      volcanoSize,\n      radiationAmplitude,\n      radiationDuration,\n      radiationPosition,\n      radiationRadius,\n      calamityType,\n      calamityAmplitude,\n      calamityDuration,\n      calamityPosition,\n      calamitySize,\n      calamities\n    },\n    children: /*#__PURE__*/_jsxDEV(GlobalActionsContext.Provider, {\n      value: {\n        setStatus,\n        setSpeed,\n        setRestart,\n        setCalamity,\n        setEarthQuakePosition,\n        setEarthQuakeDuration,\n        setEarthQuakeAmplitude,\n        setEarthQuakeRadius,\n        setVolcanoPosition,\n        setVolcanoDuration,\n        setVolcanoSize,\n        setRadiationAmplitude,\n        setRadiationDuration,\n        setRadiationPosition,\n        setRadiationRadius,\n        setCalamityType,\n        setCalamityAmplitude,\n        setCalamityDuration,\n        setCalamityPosition,\n        setCalamitySize\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"qaHMrETXZ8y98JHRSf7jr8b/0us=\");\n\n_c = GlobalContextProvider;\n\nconst useGlobalState = () => {\n  _s2();\n\n  const context = React.useContext(GlobalStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalState error\");\n  }\n\n  return context;\n};\n\n_s2(useGlobalState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useGlobalActions = () => {\n  _s3();\n\n  const context = React.useContext(GlobalActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalActions error\");\n  }\n\n  return context;\n};\n\n_s3(useGlobalActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/globalContext.js"],"names":["React","createRef","useEffect","useState","useRef","v4","uuidv4","GlobalStateContext","createContext","undefined","GlobalActionsContext","GlobalContextProvider","children","status","setStatus","restarted","setRestart","speed","setSpeed","calamity","setCalamity","calamityType","setCalamityType","calamityPosition","setCalamityPosition","calamityDuration","setCalamityDuration","calamitySize","setCalamitySize","calamityAmplitude","setCalamityAmplitude","calamities","setCalamities","calamitiesOrg","earthQuakePosition","setEarthQuakePosition","earthQuakeDuration","setEarthQuakeDuration","earthQuakeAmplitude","setEarthQuakeAmplitude","earthQuakeRadius","setEarthQuakeRadius","volcanoPosition","setVolcanoPosition","volcanoDuration","setVolcanoDuration","volcanoSize","setVolcanoSize","radiationPosition","setRadiationPosition","radiationDuration","setRadiationDuration","radiationAmplitude","setRadiationAmplitude","radiationRadius","setRadiationRadius","addCalamity","uid","id","type","position","duration","amplitude","size","start","Date","now","calamitiesTemp","current","push","removeCalamityById","l","length","i","localeCompare","splice","console","log","newUid","interval","setInterval","useGlobalState","context","useContext","Error","useGlobalActions"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst GlobalStateContext = React.createContext(undefined);\r\nconst GlobalActionsContext = React.createContext(undefined);\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const [status, setStatus] = useState(\"Paused\");\r\n  const [restarted, setRestart] = useState(true);\r\n  const [speed, setSpeed] = useState(1);\r\n  const [calamity, setCalamity] = useState(\"radiation\");\r\n\r\n  const [calamityType, setCalamityType] = useState(\"radiation\");\r\n  const [calamityPosition, setCalamityPosition] = useState(null);\r\n  const [calamityDuration, setCalamityDuration] = useState(10000);\r\n  const [calamitySize, setCalamitySize] = useState(100);\r\n  const [calamityAmplitude, setCalamityAmplitude] = useState(6);\r\n  const [calamities, setCalamities] = useState([]);\r\n\r\n  const calamitiesOrg = useRef([]);\r\n  \r\n\r\n\r\n  const [earthQuakePosition, setEarthQuakePosition] = useState(null);\r\n  const [earthQuakeDuration, setEarthQuakeDuration] = useState(10000);\r\n  const [earthQuakeAmplitude, setEarthQuakeAmplitude] = useState(4);\r\n  const [earthQuakeRadius, setEarthQuakeRadius] = useState(100);\r\n\r\n  const [volcanoPosition, setVolcanoPosition] = useState(null);\r\n  const [volcanoDuration, setVolcanoDuration] = useState(10000);\r\n  const [volcanoSize, setVolcanoSize] = useState(100);\r\n\r\n  const [radiationPosition, setRadiationPosition] = useState(null);\r\n  const [radiationDuration, setRadiationDuration] = useState(10000);\r\n  const [radiationAmplitude, setRadiationAmplitude] = useState(4);\r\n  const [radiationRadius, setRadiationRadius] = useState(100);\r\n  // useEffect(() => {\r\n  //   console.log(volcanoPosition);\r\n  // }, [volcanoPosition]);\r\n\r\n  function addCalamity()  {\r\n    const uid = uuidv4();\r\n    const calamity = {\r\n      id:uid,\r\n      type: calamityType,\r\n      position: calamityPosition,\r\n      duration: calamityDuration,\r\n      amplitude: calamityAmplitude,\r\n      size: calamitySize,\r\n      start:Date.now()\r\n    };\r\n\r\n    const calamitiesTemp = calamitiesOrg.current;\r\n    calamitiesTemp.push(calamity);\r\n    calamitiesOrg.current = calamitiesTemp;\r\n    setCalamities([...calamitiesTemp]);\r\n    return uid;\r\n  }\r\n\r\n  function removeCalamityById(id){\r\n    const calamitiesTemp = calamitiesOrg.current\r\n    const l = calamitiesTemp.length;\r\n    for(var i=0;i<l;i++){\r\n      if(calamitiesTemp[i].id.localeCompare(id)===0){\r\n        calamitiesTemp.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    calamitiesOrg.current = calamitiesTemp;\r\n    setCalamities([...calamitiesTemp]);\r\n    console.log(\"removed\", calamitiesOrg.current);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (calamitiesOrg.current.length < 5 && calamityPosition) {\r\n      const newUid = addCalamity();\r\n      console.log(newUid,calamitiesOrg.current);\r\n      const interval = setInterval(()=>{\r\n        removeCalamityById(newUid);\r\n      },[calamityDuration]);\r\n\r\n      \r\n    }\r\n  }, [calamityPosition]);\r\n  return (\r\n    <GlobalStateContext.Provider\r\n      value={{\r\n        status,\r\n        speed,\r\n        restarted,\r\n        calamity,\r\n        earthQuakePosition,\r\n        earthQuakeDuration,\r\n        earthQuakeAmplitude,\r\n        earthQuakeRadius,\r\n        volcanoPosition,\r\n        volcanoDuration,\r\n        volcanoSize,\r\n        radiationAmplitude,\r\n        radiationDuration,\r\n        radiationPosition,\r\n        radiationRadius,\r\n\r\n        calamityType,\r\n        calamityAmplitude,\r\n        calamityDuration,\r\n        calamityPosition,\r\n        calamitySize,\r\n        calamities,\r\n      }}\r\n    >\r\n      <GlobalActionsContext.Provider\r\n        value={{\r\n          setStatus,\r\n          setSpeed,\r\n          setRestart,\r\n          setCalamity,\r\n          setEarthQuakePosition,\r\n          setEarthQuakeDuration,\r\n          setEarthQuakeAmplitude,\r\n          setEarthQuakeRadius,\r\n          setVolcanoPosition,\r\n          setVolcanoDuration,\r\n          setVolcanoSize,\r\n          setRadiationAmplitude,\r\n          setRadiationDuration,\r\n          setRadiationPosition,\r\n          setRadiationRadius,\r\n\r\n          setCalamityType,\r\n          setCalamityAmplitude,\r\n          setCalamityDuration,\r\n          setCalamityPosition,\r\n          setCalamitySize,\r\n          \r\n        }}\r\n      >\r\n        {children}\r\n      </GlobalActionsContext.Provider>\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalState = () => {\r\n  const context = React.useContext(GlobalStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useGlobalState error\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nconst useGlobalActions = () => {\r\n  const context = React.useContext(GlobalActionsContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useGlobalActions error\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}