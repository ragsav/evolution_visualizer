{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\globalContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GlobalActionsContext = /*#__PURE__*/React.createContext(undefined);\nconst bounds = {\n  w: window.innerWidth - 20,\n  h: window.innerHeight - 20,\n  l: 10,\n  t: 10\n}; // bounds = {\n//   l: screenRef.current.offsetLeft,\n//   t: screenRef.current.offsetTop,\n//   w: screenRef.current.clientWidth,\n//   h: screenRef.current.clientHeight,\n// };\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      if (typeof (savedCallback === null || savedCallback === void 0 ? void 0 : savedCallback.current) !== \"undefined\") {\n        savedCallback === null || savedCallback === void 0 ? void 0 : savedCallback.current();\n      }\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nconst creaturesInit = Array(100).fill({}); // console.log(bounds)\n\ncreaturesInit.forEach((val, index) => {\n  creaturesInit[index] = /*#__PURE__*/createRef();\n  creaturesInit[index].current = {\n    x: Math.floor(Math.random() * bounds.w),\n    y: Math.floor(Math.random() * bounds.h),\n    birth: Date.now(),\n    color: \"#A089FF\",\n    age: Math.random() * 5000,\n    isDead: false\n  };\n});\nconst dead = [];\n\nconst ga = function* () {\n  // console.log(creatures)\n  for (var i = 0; i < 100; i++) {\n    const l = creaturesInit.length;\n\n    for (var j = 0; j < l; j++) {\n      var prob = Math.random();\n\n      if (prob > 0.97) {\n        creaturesInit[j].current.isDead = true;\n        creaturesInit[j].current.color = \"#FF0000\";\n      } else {\n        const pos = [1, -1];\n        const skipX = Math.floor(Math.random() * 50);\n        const skipY = Math.floor(Math.random() * 50);\n        const plusMinusX = Math.floor(Math.random() * 2);\n        const plusMinusY = Math.floor(Math.random() * 2);\n        const newPosition = {\n          x: creaturesInit[j].current.x + pos[plusMinusX] * skipX,\n          y: creaturesInit[j].current.y + pos[plusMinusY] * skipY\n        };\n\n        if (newPosition.x > bounds.w + bounds.l) {\n          newPosition.x = bounds.w;\n        }\n\n        if (newPosition.y > bounds.h + bounds.t) {\n          newPosition.y = bounds.h;\n        }\n\n        if (newPosition.x < bounds.l) {\n          newPosition.x = bounds.l;\n        }\n\n        if (newPosition.y < bounds.t) {\n          newPosition.y = bounds.t;\n        }\n\n        creaturesInit[j].current = newPosition;\n      }\n    }\n\n    for (var i = 0; i < l; i++) {\n      // console.log(creaturesInit[i].current.x);\n      if (creaturesInit[i].isDead === false) {\n        for (var j = 0; j < l; j++) {\n          if (Math.floor(Math.abs(creaturesInit[i].current.x - creaturesInit[j].current.x)) < 20 && Math.floor(Math.abs(creaturesInit[i].current.y - creaturesInit[j].current.y)) < 20 && i !== j && creaturesInit[j].isDead === false) {\n            creaturesInit[i].current.color = \"#FFFFFF\";\n            const child = /*#__PURE__*/createRef();\n            const newChildData = {\n              x: (creaturesInit[i].current.x + creaturesInit[j].current.x) / 2,\n              y: (creaturesInit[i].current.y + creaturesInit[j].current.y) / 2,\n              color: \"#22FF00\",\n              birth: Date.now(),\n              age: Math.random() * 5000,\n              isDead: false\n            };\n            child.current = newChildData;\n            var prob = Math.random();\n\n            if (prob > 0.95) {\n              creaturesInit.push(child);\n            }\n\n            break;\n          } else {\n            creaturesInit[i].current.color = \"#A089FF\";\n          }\n        }\n      }\n    }\n\n    yield {\n      creatures: creaturesInit,\n      dead: [...dead]\n    }; // console.log(creaturesInit);\n  }\n};\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n  const [dead, setDead] = useState([]);\n  const [prevDead, setPrevDead] = useState([]);\n  const gaProcessSteps = ga();\n  useEffect(() => {\n    console.log(gaProcessSteps);\n  }, gaProcessSteps);\n  useInterval(() => {\n    // console.log(gaProcessSteps)\n    if (!gaProcessSteps) return;\n    const next = gaProcessSteps.next(); // console.log(next);\n\n    if (next.done) return;\n    const creatureState = next.value; // console.log(creatureState.creatures);\n\n    setPrevDead([...dead]);\n    setCreatures([...creatureState.creatures]);\n    setDead([...creatureState.dead]);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      creatures,\n      dead,\n      prevDead\n    },\n    children: /*#__PURE__*/_jsxDEV(GlobalActionsContext.Provider, {\n      value: {\n        setCreatures\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GlobalContextProvider, \"ojLeaICn6IeIagOt+HHmTnKSIQ8=\", false, function () {\n  return [useInterval];\n});\n\n_c = GlobalContextProvider;\n\nconst useGlobalState = () => {\n  _s3();\n\n  const context = React.useContext(GlobalStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalState error\");\n  }\n\n  return context;\n};\n\n_s3(useGlobalState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useGlobalActions = () => {\n  _s4();\n\n  const context = React.useContext(GlobalActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalActions error\");\n  }\n\n  return context;\n};\n\n_s4(useGlobalActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/globalContext.js"],"names":["React","createRef","useEffect","useState","useRef","GlobalStateContext","createContext","undefined","GlobalActionsContext","bounds","w","window","innerWidth","h","innerHeight","l","t","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","creaturesInit","Array","fill","forEach","val","index","x","Math","floor","random","y","birth","Date","now","color","age","isDead","dead","ga","i","length","j","prob","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","abs","child","newChildData","push","creatures","GlobalContextProvider","children","setCreatures","from","keys","setDead","prevDead","setPrevDead","gaProcessSteps","console","log","next","done","creatureState","value","useGlobalState","context","useContext","Error","useGlobalActions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,MAAhD,QAA6D,OAA7D;;AAIA,MAAMC,kBAAkB,gBAAGL,KAAK,CAACM,aAAN,CAAoBC,SAApB,CAA3B;AACA,MAAMC,oBAAoB,gBAAGR,KAAK,CAACM,aAAN,CAAoBC,SAApB,CAA7B;AAGA,MAAME,MAAM,GAAG;AAACC,EAAAA,CAAC,EAACC,MAAM,CAACC,UAAP,GAAkB,EAArB;AAAwBC,EAAAA,CAAC,EAACF,MAAM,CAACG,WAAP,GAAmB,EAA7C;AAAgDC,EAAAA,CAAC,EAAC,EAAlD;AAAqDC,EAAAA,CAAC,EAAC;AAAvD,CAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA;;AACvC,QAAMC,aAAa,GAAGhB,MAAM,EAA5B,CADuC,CAGvC;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,CAAT,CAJuC,CAOvC;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASoB,IAAT,GAAgB;AACd,UAAI,QAAOF,aAAP,aAAOA,aAAP,uBAAOA,aAAa,CAAEC,OAAtB,MAAkC,WAAtC,EAAmD;AACjDD,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,OAAf;AACD;AACF;;AACD,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMI,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAAtB;AACA,aAAO,MAAMM,aAAa,CAACF,EAAD,CAA1B;AACD;AACF,GAVQ,EAUN,CAACJ,KAAD,CAVM,CAAT;AAWD,CAnBD;;GAAMF,W;;AAuBN,MAAMS,aAAa,GAAGC,KAAK,CAAC,GAAD,CAAL,CAAWC,IAAX,CAAgB,EAAhB,CAAtB,C,CACA;;AACAF,aAAa,CAACG,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpCL,EAAAA,aAAa,CAACK,KAAD,CAAb,gBAAuB9B,SAAS,EAAhC;AACAyB,EAAAA,aAAa,CAACK,KAAD,CAAb,CAAqBV,OAArB,GAA+B;AAC7BW,IAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB1B,MAAM,CAACC,CAAlC,CAD0B;AAE7B0B,IAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB1B,MAAM,CAACI,CAAlC,CAF0B;AAG7BwB,IAAAA,KAAK,EAACC,IAAI,CAACC,GAAL,EAHuB;AAI7BC,IAAAA,KAAK,EAAC,SAJuB;AAK7BC,IAAAA,GAAG,EAACR,IAAI,CAACE,MAAL,KAAc,IALW;AAM7BO,IAAAA,MAAM,EAAG;AANoB,GAA/B;AAQD,CAVD;AAWA,MAAMC,IAAI,GAAG,EAAb;;AACA,MAAMC,EAAE,GAAG,aAAW;AAGpB;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAI5B,UAAM9B,CAAC,GAAGW,aAAa,CAACoB,MAAxB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,CAApB,EAAuBgC,CAAC,EAAxB,EAA4B;AAC1B,UAAIC,IAAI,GAAGf,IAAI,CAACE,MAAL,EAAX;;AACA,UAAIa,IAAI,GAAC,IAAT,EAAe;AACbtB,QAAAA,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBqB,MAAzB,GAAgC,IAAhC;AACAhB,QAAAA,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBmB,KAAzB,GAA+B,SAA/B;AAED,OAJD,MAIK;AACH,cAAMS,GAAG,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,CAAZ;AACA,cAAMC,KAAK,GAAGjB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAd;AACA,cAAMgB,KAAK,GAAGlB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAd;AAEA,cAAMiB,UAAU,GAAGnB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAnB;AACA,cAAMkB,UAAU,GAAGpB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAnB;AAEA,cAAMmB,WAAW,GAAG;AAClBtB,UAAAA,CAAC,EAAEN,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBW,CAAzB,GAA6BiB,GAAG,CAACG,UAAD,CAAH,GAAkBF,KADhC;AAElBd,UAAAA,CAAC,EAAEV,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBe,CAAzB,GAA6Ba,GAAG,CAACI,UAAD,CAAH,GAAkBF;AAFhC,SAApB;;AAIA,YAAIG,WAAW,CAACtB,CAAZ,GAAgBvB,MAAM,CAACC,CAAP,GAAWD,MAAM,CAACM,CAAtC,EAAyC;AACvCuC,UAAAA,WAAW,CAACtB,CAAZ,GAAgBvB,MAAM,CAACC,CAAvB;AACD;;AACD,YAAI4C,WAAW,CAAClB,CAAZ,GAAgB3B,MAAM,CAACI,CAAP,GAAWJ,MAAM,CAACO,CAAtC,EAAyC;AACvCsC,UAAAA,WAAW,CAAClB,CAAZ,GAAgB3B,MAAM,CAACI,CAAvB;AACD;;AACD,YAAIyC,WAAW,CAACtB,CAAZ,GAAgBvB,MAAM,CAACM,CAA3B,EAA8B;AAC5BuC,UAAAA,WAAW,CAACtB,CAAZ,GAAgBvB,MAAM,CAACM,CAAvB;AACD;;AACD,YAAIuC,WAAW,CAAClB,CAAZ,GAAgB3B,MAAM,CAACO,CAA3B,EAA8B;AAC5BsC,UAAAA,WAAW,CAAClB,CAAZ,GAAgB3B,MAAM,CAACO,CAAvB;AACD;;AAEDU,QAAAA,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,GAA2BiC,WAA3B;AACD;AAGF;;AAKD,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,CAApB,EAAuB8B,CAAC,EAAxB,EAA4B;AAC1B;AACA,UAAInB,aAAa,CAACmB,CAAD,CAAb,CAAiBH,MAAjB,KAA0B,KAA9B,EAAoC;AAClC,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhC,CAApB,EAAuBgC,CAAC,EAAxB,EAA4B;AAC1B,cACEd,IAAI,CAACC,KAAL,CACED,IAAI,CAACsB,GAAL,CAAS7B,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBW,CAAzB,GAA6BN,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBW,CAA/D,CADF,IAEI,EAFJ,IAGAC,IAAI,CAACC,KAAL,CACED,IAAI,CAACsB,GAAL,CAAS7B,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBe,CAAzB,GAA6BV,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBe,CAA/D,CADF,IAEI,EALJ,IAMAS,CAAC,KAAKE,CANN,IAOArB,aAAa,CAACqB,CAAD,CAAb,CAAiBL,MAAjB,KAA0B,KAR5B,EASE;AACAhB,YAAAA,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBmB,KAAzB,GAAiC,SAAjC;AACA,kBAAMgB,KAAK,gBAAGvD,SAAS,EAAvB;AACA,kBAAMwD,YAAY,GAAG;AACnBzB,cAAAA,CAAC,EAAE,CAACN,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBW,CAAzB,GAA6BN,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBW,CAAvD,IAA4D,CAD5C;AAEnBI,cAAAA,CAAC,EAAE,CAACV,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBe,CAAzB,GAA6BV,aAAa,CAACqB,CAAD,CAAb,CAAiB1B,OAAjB,CAAyBe,CAAvD,IAA4D,CAF5C;AAGnBI,cAAAA,KAAK,EAAE,SAHY;AAInBH,cAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,EAJY;AAKnBE,cAAAA,GAAG,EAAER,IAAI,CAACE,MAAL,KAAgB,IALF;AAMnBO,cAAAA,MAAM,EAAC;AANY,aAArB;AAQAc,YAAAA,KAAK,CAACnC,OAAN,GAAgBoC,YAAhB;AAEA,gBAAIT,IAAI,GAAGf,IAAI,CAACE,MAAL,EAAX;;AACA,gBAAIa,IAAI,GAAG,IAAX,EAAiB;AACftB,cAAAA,aAAa,CAACgC,IAAd,CAAmBF,KAAnB;AACD;;AAED;AACD,WA5BD,MA4BO;AACL9B,YAAAA,aAAa,CAACmB,CAAD,CAAb,CAAiBxB,OAAjB,CAAyBmB,KAAzB,GAAiC,SAAjC;AACD;AACF;AACF;AAEF;;AAED,UAAK;AAACmB,MAAAA,SAAS,EAACjC,aAAX;AAAyBiB,MAAAA,IAAI,EAAC,CAAC,GAAGA,IAAJ;AAA9B,KAAL,CArF4B,CAsF5B;AACD;AACF,CA7FD;;AA+FA,MAAMiB,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAI9C,QAAM,CAACF,SAAD,EAAYG,YAAZ,IAA4B3D,QAAQ,CAACwB,KAAK,CAACoC,IAAN,CAAWpC,KAAK,CAAC,GAAD,CAAL,CAAWqC,IAAX,EAAX,CAAD,CAA1C;AAEA,QAAM,CAACrB,IAAD,EAAMsB,OAAN,IAAiB9D,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAAC+D,QAAD,EAAWC,WAAX,IAA0BhE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiE,cAAc,GAAGxB,EAAE,EAAzB;AAEA1C,EAAAA,SAAS,CAAC,MAAI;AACZmE,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,GAFQ,EAEPA,cAFO,CAAT;AASAnD,EAAAA,WAAW,CAAC,MAAM;AAChB;AAEA,QAAI,CAACmD,cAAL,EAAqB;AACrB,UAAMG,IAAI,GAAGH,cAAc,CAACG,IAAf,EAAb,CAJgB,CAKhB;;AACA,QAAIA,IAAI,CAACC,IAAT,EAAe;AACf,UAAMC,aAAa,GAAGF,IAAI,CAACG,KAA3B,CAPgB,CAQhB;;AACAP,IAAAA,WAAW,CAAC,CAAC,GAAGxB,IAAJ,CAAD,CAAX;AACAmB,IAAAA,YAAY,CAAC,CAAC,GAAGW,aAAa,CAACd,SAAlB,CAAD,CAAZ;AACAM,IAAAA,OAAO,CAAC,CAAC,GAAGQ,aAAa,CAAC9B,IAAlB,CAAD,CAAP;AACD,GAZU,EAYR,IAZQ,CAAX;AAcA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLgB,MAAAA,SADK;AAELhB,MAAAA,IAFK;AAGLuB,MAAAA;AAHK,KADT;AAAA,2BAQE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAE;AAAEJ,QAAAA;AAAF,OAAtC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/CD;;IAAMD,qB;UAmBJ3C,W;;;KAnBI2C,qB;;AAiDN,MAAMe,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAG5E,KAAK,CAAC6E,UAAN,CAAiBxE,kBAAjB,CAAhB;;AACA,MAAIuE,OAAO,KAAKrE,SAAhB,EAA2B;AACzB,UAAM,IAAIuE,KAAJ,CACJ,sBADI,CAAN;AAGD;;AAED,SAAOF,OAAP;AACD,CATD;;IAAMD,c;;AAWN,MAAMI,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAMH,OAAO,GAAG5E,KAAK,CAAC6E,UAAN,CAAiBrE,oBAAjB,CAAhB;;AACA,MAAIoE,OAAO,KAAKrE,SAAhB,EAA2B;AACzB,UAAM,IAAIuE,KAAJ,CACJ,wBADI,CAAN;AAGD;;AAED,SAAOF,OAAP;AACD,CATD;;IAAMG,gB;;AAWN,SAASJ,cAAT,EAAyBI,gBAAzB,EAA2CnB,qBAA3C","sourcesContent":["import React, { createRef, useEffect, useState ,useRef} from \"react\";\n\n\n\nconst GlobalStateContext = React.createContext(undefined);\nconst GlobalActionsContext = React.createContext(undefined);\n\n\nconst bounds = {w:window.innerWidth-20,h:window.innerHeight-20,l:10,t:10}\n// bounds = {\n//   l: screenRef.current.offsetLeft,\n//   t: screenRef.current.offsetTop,\n//   w: screenRef.current.clientWidth,\n//   h: screenRef.current.clientHeight,\n// };\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (typeof savedCallback?.current !== \"undefined\") {\n        savedCallback?.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n\n\nconst creaturesInit = Array(100).fill({});\n// console.log(bounds)\ncreaturesInit.forEach((val, index) => {\n  creaturesInit[index] = createRef();\n  creaturesInit[index].current = {\n    x: Math.floor(Math.random() * bounds.w),\n    y: Math.floor(Math.random() * bounds.h),\n    birth:Date.now(),\n    color:\"#A089FF\",\n    age:Math.random()*5000,\n    isDead : false\n  };\n});\nconst dead = [];\nconst ga = function*(){\n\n  \n  // console.log(creatures)\n  \n  for (var i = 0; i < 100; i++) {\n       \n\n    \n    const l = creaturesInit.length;\n    for (var j = 0; j < l; j++) {\n      var prob = Math.random();\n      if (prob>0.97) {\n        creaturesInit[j].current.isDead=true;\n        creaturesInit[j].current.color=\"#FF0000\";\n        \n      }else{\n        const pos = [1, -1];\n        const skipX = Math.floor(Math.random() * 50);\n        const skipY = Math.floor(Math.random() * 50);\n\n        const plusMinusX = Math.floor(Math.random() * 2);\n        const plusMinusY = Math.floor(Math.random() * 2);\n\n        const newPosition = {\n          x: creaturesInit[j].current.x + pos[plusMinusX] * skipX,\n          y: creaturesInit[j].current.y + pos[plusMinusY] * skipY,\n        };\n        if (newPosition.x > bounds.w + bounds.l) {\n          newPosition.x = bounds.w;\n        }\n        if (newPosition.y > bounds.h + bounds.t) {\n          newPosition.y = bounds.h;\n        }\n        if (newPosition.x < bounds.l) {\n          newPosition.x = bounds.l;\n        }\n        if (newPosition.y < bounds.t) {\n          newPosition.y = bounds.t;\n        }\n\n        creaturesInit[j].current = newPosition;\n      }\n      \n      \n    }\n\n\n\n    \n    for (var i = 0; i < l; i++) {\n      // console.log(creaturesInit[i].current.x);\n      if (creaturesInit[i].isDead===false){\n        for (var j = 0; j < l; j++) {\n          if (\n            Math.floor(\n              Math.abs(creaturesInit[i].current.x - creaturesInit[j].current.x)\n            ) < 20 &&\n            Math.floor(\n              Math.abs(creaturesInit[i].current.y - creaturesInit[j].current.y)\n            ) < 20 &&\n            i !== j &&\n            creaturesInit[j].isDead===false\n          ) {\n            creaturesInit[i].current.color = \"#FFFFFF\";\n            const child = createRef();\n            const newChildData = {\n              x: (creaturesInit[i].current.x + creaturesInit[j].current.x) / 2,\n              y: (creaturesInit[i].current.y + creaturesInit[j].current.y) / 2,\n              color: \"#22FF00\",\n              birth: Date.now(),\n              age: Math.random() * 5000,\n              isDead:false\n            };\n            child.current = newChildData;\n\n            var prob = Math.random();\n            if (prob > 0.95) {\n              creaturesInit.push(child);\n            }\n\n            break;\n          } else {\n            creaturesInit[i].current.color = \"#A089FF\";\n          }\n        }\n      }\n        \n    }\n\n    yield{creatures:creaturesInit,dead:[...dead]}\n    // console.log(creaturesInit);\n  }\n}\n\nconst GlobalContextProvider = ({ children }) => {\n  \n\n  \n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n \n  const [dead,setDead] = useState([]);\n  const [prevDead, setPrevDead] = useState([]);\n  const gaProcessSteps = ga();\n\n  useEffect(()=>{\n    console.log(gaProcessSteps)\n  },gaProcessSteps)\n    \n\n\n  \n\n\n  useInterval(() => {\n    // console.log(gaProcessSteps)\n    \n    if (!gaProcessSteps) return;\n    const next = gaProcessSteps.next();\n    // console.log(next);\n    if (next.done) return ;\n    const creatureState = next.value;\n    // console.log(creatureState.creatures);\n    setPrevDead([...dead]);\n    setCreatures([...creatureState.creatures]);\n    setDead([...creatureState.dead]);\n  }, 1000);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        creatures,\n        dead,\n        prevDead\n      }}\n      \n    >\n      <GlobalActionsContext.Provider value={{ setCreatures }}>\n        {children}\n      </GlobalActionsContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useGlobalState = () => {\n  const context = React.useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalState error\"\n    );\n  }\n\n  return context;\n};\n\nconst useGlobalActions = () => {\n  const context = React.useContext(GlobalActionsContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalActions error\"\n    );\n  }\n\n  return context;\n};\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}