{"ast":null,"code":"import { Vector } from \"./vector\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport class Creature {\n  constructor(x, y, r, gender, creatures) {\n    this.id = uuidv4();\n    this.pos = new Vector(x, y);\n    this.r = r;\n    this.sightRange = 5;\n    this.smellRange = 200;\n    this.gender = gender;\n    this.vel = new Vector(0, 0);\n    this.acc = new Vector(0, 0);\n    this.acceleration = 0;\n    this.birth = Date.now();\n    this.color = \"#ffffff\";\n    this.isAdult = false;\n    this.lastBirth = Date.now();\n    this.isAbleToMate = false;\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n    this.lastFoodTime = Date.now();\n    this.canEatFood = false;\n    this.isInfected = false;\n    this.infectionTime = null;\n    this.energy = 600;\n    this.parents = null;\n    this.children = null;\n    creatures.current.push(this);\n  }\n\n  updateToAdult() {\n    if (this.birth + 10000 < Date.now()) {\n      this.isAdult = true;\n    }\n  }\n\n  updateAbleToMate() {\n    if (this.lastBirth + 10000 < Date.now()) {\n      this.isAbleToMate = true;\n    }\n  }\n\n  updateNotAbleToMate() {\n    this.isAbleToMate = false;\n    this.lastBirth = Date.now();\n  }\n\n  updateFoodFound(pos, fid) {\n    this.isFoodFound = true;\n    this.foundFoodPosition = pos;\n    this.foodId = fid;\n  }\n\n  updateFoodEaten() {\n    this.energy = this.energy + 600 + Math.random() * 400;\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n  }\n\n  updateFoodNotFound() {\n    this.isFoodFound = false;\n    this.foundFoodPosition = null;\n    this.foodId = null;\n  }\n\n  updateLastFoodTime() {\n    this.lastFoodTime = Date.now();\n  }\n\n  updateCanEatFood() {\n    if (this.energy < 300) {\n      this.canEatFood = true;\n    } else {\n      this.canEatFood = false;\n    }\n  }\n\n  canDie() {\n    return this.energy < 20; // return false;\n  }\n\n  infect() {\n    if (!this.isInfected) {\n      this.isInfected = true;\n      this.infectionTime = Date.now();\n    }\n  }\n\n  disInfect() {\n    if (this.isInfected && this.infectionTime + 10000 < Date.now()) {\n      this.isInfected = false;\n      this.infectionTime = null;\n    }\n  }\n\n  updateColor() {\n    if (this.isInfected) {\n      this.color = \"#FF0000\";\n    } else if (this.isAdult) {\n      this.color = this.gender == \"F\" ? \"#FF75BF\" : \"#2ED9FF\";\n    } else {\n      this.color = \"#ffffff\";\n    }\n  }\n\n  updateEnergy() {\n    if (this.energy > 0) {\n      if (this.isInfected) {\n        this.energy -= 3;\n      } else {\n        this.energy -= 1;\n      }\n    }\n  }\n\n  drawBall(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  reposition(ctx, speed) {\n    const multiplier = [1, -1];\n    const plusMinusX = Math.floor(Math.random() * 2);\n    const plusMinusY = Math.floor(Math.random() * 2); // this.acc = this.acc.unit().mult(this.acceleration);\n\n    if (this.isFoodFound && this.pos.subtr(this.foundFoodPosition).mag() < 2) {\n      this.updateFoodNotFound();\n    }\n\n    if (this.isFoodFound) {\n      this.vel = this.foundFoodPosition.subtr(this.pos).unit();\n    } else {\n      if (Math.random() > 0.991) this.vel = this.vel.add(new Vector(multiplier[plusMinusX] * speed, multiplier[plusMinusY] * speed));\n      this.vel = this.vel.mult(1 - 0.01);\n    }\n\n    if (this.vel.mag() > 0) {\n      this.updateEnergy();\n    }\n\n    let newPosition = {\n      x: this.pos.add(this.vel).x,\n      y: this.pos.add(this.vel).y\n    };\n    let isAtBoundary = false;\n\n    if (newPosition.x + this.r + 10 > window.innerWidth - 300) {\n      newPosition.x = window.innerWidth - 300 - this.r - 10;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\n      newPosition.y = window.innerHeight - this.r - 10;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.x < 10) {\n      newPosition.x = 10 + this.r;\n      isAtBoundary = true;\n    }\n\n    if (newPosition.y < 10) {\n      newPosition.y = 10 + this.r;\n      isAtBoundary = true;\n    }\n\n    if (isAtBoundary) {\n      this.vel = this.vel.mult(-1);\n      newPosition = {\n        x: this.pos.add(this.vel).x,\n        y: this.pos.add(this.vel).y\n      };\n    }\n\n    this.pos = new Vector(newPosition.x, newPosition.y); // console.log(this.pos);\n  }\n\n  updateCreature(ctx, speed) {\n    this.reposition(ctx, speed);\n    this.updateToAdult();\n    this.updateAbleToMate();\n    this.updateCanEatFood();\n    this.disInfect();\n    this.updateColor();\n    this.drawBall(ctx);\n  }\n\n}","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/core/creature.js"],"names":["Vector","v4","uuidv4","Creature","constructor","x","y","r","gender","creatures","id","pos","sightRange","smellRange","vel","acc","acceleration","birth","Date","now","color","isAdult","lastBirth","isAbleToMate","isFoodFound","foundFoodPosition","foodId","lastFoodTime","canEatFood","isInfected","infectionTime","energy","parents","children","current","push","updateToAdult","updateAbleToMate","updateNotAbleToMate","updateFoodFound","fid","updateFoodEaten","Math","random","updateFoodNotFound","updateLastFoodTime","updateCanEatFood","canDie","infect","disInfect","updateColor","updateEnergy","drawBall","ctx","beginPath","arc","PI","fillStyle","fill","closePath","reposition","speed","multiplier","plusMinusX","floor","plusMinusY","subtr","mag","unit","add","mult","newPosition","isAtBoundary","window","innerWidth","innerHeight","updateCreature"],"mappings":"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","sourcesContent":["import { Vector } from \"./vector\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport class Creature {\r\n  constructor(x, y, r, gender, creatures) {\r\n    this.id = uuidv4();\r\n    this.pos = new Vector(x, y);\r\n    this.r = r;\r\n    this.sightRange = 5;\r\n    this.smellRange = 200;\r\n    this.gender = gender;\r\n    this.vel = new Vector(0, 0);\r\n    this.acc = new Vector(0, 0);\r\n    this.acceleration = 0;\r\n    this.birth = Date.now();\r\n    this.color = \"#ffffff\";\r\n    this.isAdult = false;\r\n    this.lastBirth = Date.now();\r\n    this.isAbleToMate = false;\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n    this.lastFoodTime = Date.now();\r\n    this.canEatFood = false;\r\n    this.isInfected = false;\r\n    this.infectionTime = null;\r\n    this.energy = 600;\r\n    this.parents = null;\r\n    this.children = null;\r\n    creatures.current.push(this);\r\n  }\r\n\r\n  updateToAdult() {\r\n    if (this.birth + 10000 < Date.now()) {\r\n      this.isAdult = true;\r\n    }\r\n  }\r\n  updateAbleToMate() {\r\n    if (this.lastBirth + 10000 < Date.now()) {\r\n      this.isAbleToMate = true;\r\n    }\r\n  }\r\n\r\n  updateNotAbleToMate() {\r\n    this.isAbleToMate = false;\r\n    this.lastBirth = Date.now();\r\n  }\r\n\r\n  updateFoodFound(pos, fid) {\r\n    this.isFoodFound = true;\r\n    this.foundFoodPosition = pos;\r\n    this.foodId = fid;\r\n  }\r\n  updateFoodEaten() {\r\n    this.energy = this.energy + 600 + Math.random() * 400;\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n  }\r\n\r\n  updateFoodNotFound() {\r\n    this.isFoodFound = false;\r\n    this.foundFoodPosition = null;\r\n    this.foodId = null;\r\n  }\r\n\r\n  updateLastFoodTime() {\r\n    this.lastFoodTime = Date.now();\r\n  }\r\n\r\n  updateCanEatFood() {\r\n    if (this.energy < 300) {\r\n      this.canEatFood = true;\r\n    } else {\r\n      this.canEatFood = false;\r\n    }\r\n  }\r\n\r\n  canDie() {\r\n    return this.energy < 20;\r\n    // return false;\r\n  }\r\n\r\n  infect() {\r\n    if (!this.isInfected) {\r\n      this.isInfected = true;\r\n      this.infectionTime = Date.now();\r\n    }\r\n  }\r\n\r\n  disInfect() {\r\n    if (this.isInfected && this.infectionTime + 10000 < Date.now()) {\r\n      this.isInfected = false;\r\n      this.infectionTime = null;\r\n    }\r\n  }\r\n\r\n  updateColor() {\r\n    if (this.isInfected) {\r\n      this.color = \"#FF0000\";\r\n    } else if (this.isAdult) {\r\n      this.color = this.gender == \"F\" ? \"#FF75BF\" : \"#2ED9FF\";\r\n    } else {\r\n      this.color = \"#ffffff\";\r\n    }\r\n  }\r\n\r\n  updateEnergy() {\r\n    if (this.energy > 0) {\r\n      if (this.isInfected) {\r\n        this.energy -= 3;\r\n      } else {\r\n        this.energy -= 1;\r\n      }\r\n    }\r\n  }\r\n  drawBall(ctx) {\r\n    ctx.beginPath();\r\n    ctx.arc(this.pos.x, this.pos.y, this.r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = this.color;\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n\r\n  reposition(ctx, speed) {\r\n    const multiplier = [1, -1];\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    // this.acc = this.acc.unit().mult(this.acceleration);\r\n\r\n    if (this.isFoodFound && this.pos.subtr(this.foundFoodPosition).mag() < 2) {\r\n      this.updateFoodNotFound();\r\n    }\r\n\r\n    if (this.isFoodFound) {\r\n      this.vel = this.foundFoodPosition.subtr(this.pos).unit();\r\n    } else {\r\n      if (Math.random() > 0.991)\r\n        this.vel = this.vel.add(\r\n          new Vector(\r\n            multiplier[plusMinusX] * speed,\r\n            multiplier[plusMinusY] * speed\r\n          )\r\n        );\r\n      this.vel = this.vel.mult(1 - 0.01);\r\n    }\r\n\r\n    if (this.vel.mag() > 0) {\r\n      this.updateEnergy();\r\n    }\r\n    let newPosition = {\r\n      x: this.pos.add(this.vel).x,\r\n      y: this.pos.add(this.vel).y,\r\n    };\r\n\r\n    let isAtBoundary = false;\r\n    if (newPosition.x + this.r + 10 > window.innerWidth - 300) {\r\n      newPosition.x = window.innerWidth - 300 - this.r - 10;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.y + this.r + 10 > window.innerHeight) {\r\n      newPosition.y = window.innerHeight - this.r - 10;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.x < 10) {\r\n      newPosition.x = 10 + this.r;\r\n      isAtBoundary = true;\r\n    }\r\n    if (newPosition.y < 10) {\r\n      newPosition.y = 10 + this.r;\r\n      isAtBoundary = true;\r\n    }\r\n\r\n    if (isAtBoundary) {\r\n      this.vel = this.vel.mult(-1);\r\n      newPosition = {\r\n        x: this.pos.add(this.vel).x,\r\n        y: this.pos.add(this.vel).y,\r\n      };\r\n    }\r\n\r\n    this.pos = new Vector(newPosition.x, newPosition.y);\r\n\r\n    // console.log(this.pos);\r\n  }\r\n\r\n  updateCreature(ctx, speed) {\r\n    this.reposition(ctx, speed);\r\n    this.updateToAdult();\r\n    this.updateAbleToMate();\r\n    this.updateCanEatFood();\r\n    this.disInfect();\r\n    this.updateColor();\r\n    this.drawBall(ctx);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}