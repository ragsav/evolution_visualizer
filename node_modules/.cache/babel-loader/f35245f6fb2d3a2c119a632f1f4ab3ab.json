{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\statistics.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Card } from \"react-bootstrap\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ValueLabelComponent;\n\nconst Statisitcs = () => {\n  _s();\n\n  const {\n    setStatus,\n    setSpeed\n  } = useGlobalActions();\n  const {\n    status,\n    speed\n  } = useGlobalState();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      padding: 4,\n      margin: 4,\n      top: 4,\n      left: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        margin: 0,\n        padding: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        style: {\n          padding: 4,\n          margin: 0,\n          top: 5,\n          left: 5,\n          position: \"absolute\"\n        },\n        onClick: e => {\n          e.preventDefault();\n          status.localeCompare(\"Playing\") === 0 ? setStatus(\"Paused\") : setStatus(\"Playing\");\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        style: {\n          padding: 4,\n          margin: 0,\n          top: 5,\n          left: 5,\n          position: \"absolute\"\n        },\n        onClick: e => {\n          e.preventDefault();\n          status.localeCompare(\"Finished\") === 0 ? setStatus(\"Playing\") : setStatus(\"Finished\");\n        },\n        children: status.localeCompare(\"Finished\") === 0 ? \"Start simulation\" : \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        margin: 0,\n        padding: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: \"Tooltip value label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        ValueLabelComponent: ValueLabelComponent,\n        value: speed,\n        onChange: e => {\n          setSpeed(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Statisitcs, \"tAfyCtk+PnJk7TPSZ5+LQ95iEUE=\", false, function () {\n  return [useGlobalActions, useGlobalState];\n});\n\n_c2 = Statisitcs;\nexport default Statisitcs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValueLabelComponent\");\n$RefreshReg$(_c2, \"Statisitcs\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/statistics.js"],"names":["Row","Card","Slider","Typography","Tooltip","useGlobalActions","useGlobalState","Button","ValueLabelComponent","props","children","open","value","Statisitcs","setStatus","setSpeed","status","speed","padding","margin","top","left","position","e","preventDefault","localeCompare","target"],"mappings":"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","sourcesContent":["import { Row, Card } from \"react-bootstrap\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport { Button } from \"react-bootstrap\";\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst Statisitcs = () => {\r\n  const { setStatus, setSpeed } = useGlobalActions();\r\n  const { status, speed } = useGlobalState();\r\n\r\n  return (\r\n    <Card style={{ padding: 4, margin: 4, top: 4, left: 4 }}>\r\n      <Row style={{ margin: 0, padding: 4 }}>\r\n        <Button\r\n          variant=\"outline-dark\"\r\n          style={{\r\n            padding: 4,\r\n            margin: 0,\r\n            top: 5,\r\n            left: 5,\r\n            position: \"absolute\",\r\n          }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            status.localeCompare(\"Playing\") === 0\r\n              ? setStatus(\"Paused\")\r\n              : setStatus(\"Playing\");\r\n          }}\r\n        >\r\n          {status}\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-dark\"\r\n          style={{\r\n            padding: 4,\r\n            margin: 0,\r\n            top: 5,\r\n            left: 5,\r\n            position: \"absolute\",\r\n          }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            status.localeCompare(\"Finished\") === 0\r\n              ? setStatus(\"Playing\")\r\n              : setStatus(\"Finished\");\r\n          }}\r\n        >\r\n          {status.localeCompare(\"Finished\") === 0\r\n            ? \"Start simulation\"\r\n            : \"Finish\"}\r\n        </Button>\r\n      </Row>\r\n      <Row style={{ margin: 0, padding: 4 }}>\r\n        <Typography gutterBottom>Tooltip value label</Typography>\r\n        <Slider\r\n          ValueLabelComponent={ValueLabelComponent}\r\n          value={speed}\r\n          onChange={(e) => {\r\n            setSpeed(e.target.value);\r\n          }}\r\n        />\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Statisitcs;\r\n"]},"metadata":{},"sourceType":"module"}