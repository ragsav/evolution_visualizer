{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\earth.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Vector } from \"./vector\";\nimport { Creature } from \"./creature\";\nimport { Wall } from \"./wall\";\nimport { useGlobalState, useGlobalActions } from \"../context/globalContext\";\nimport { Food } from \"./food\";\nimport EarthQuake from \"./earthQuake\";\nimport Volcano from \"./volcana\";\nimport Radiation from \"./radiation\";\nimport WaterBody from \"./waterBody\";\nimport { makeInitialFood, makeInitialPopulation } from \"./gaFunctions/initiators\";\nimport { isPairEqual, randInt } from \"./utils/util\";\nimport { matingPool } from \"./gaFunctions/mating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clearCanvas(ctx, canvasRef) {\n  var _canvasRef$current, _canvasRef$current2;\n\n  ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef === null || canvasRef === void 0 ? void 0 : (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.clientWidth, canvasRef === null || canvasRef === void 0 ? void 0 : (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.clientHeight);\n}\n\nfunction addRandomNumberOfFood(foods) {\n  if (Math.random() > 0.8) {\n    const food = new Food(randInt(10, window.innerWidth - 300 - 10), randInt(10, window.innerHeight - 10), foods);\n  }\n}\n\nfunction findFood(creatures, foods) {\n  creatures.current.forEach((creature, index) => {\n    if (!creature.isFoodFound && creature.canEatFood) {\n      for (let i = 0; i < foods.current.length; i++) {\n        const food = foods.current[i];\n\n        if (food.pos.subtr(creature.pos).mag() < 20) {\n          creature.updateFoodFound(food.pos, food.id);\n          break;\n        }\n      }\n    } else {\n      if (creature.isFoodFound && creature.canEatFood && creature.pos.subtr(creature.foundFoodPosition).mag() < 5) {\n        let foodIndex = -1;\n\n        for (var i = 0; i < foods.current.length; i++) {\n          if (foods.current[i].id.localeCompare(creature.foodId) === 0) {\n            foodIndex = i;\n            break;\n          }\n        }\n\n        if (foodIndex !== -1) {\n          foods.current.splice(foodIndex, 1);\n          creature.updateFoodEaten();\n          creature.updateLastFoodTime();\n        }\n      }\n    }\n  });\n}\n\nfunction infection(creatures) {\n  let n = creatures.current.length;\n\n  for (let i = 0; i < n; i++) {\n    const observer = creatures.current[i];\n\n    if (observer.isInfected) {\n      for (let j = i + 1; j < n; j++) {\n        const target = creatures.current[j];\n\n        if (observer.pos.subtr(target.pos).mag() < 7) {\n          target.infect();\n        }\n      }\n    }\n  }\n}\n\nfunction die(creatures) {\n  for (let i = 0; i < creatures.current.length; i++) {\n    if (creatures.current[i].canDie()) {\n      creatures.current.splice(i, 1);\n    }\n  }\n}\n\nfunction infectCreatures(creatures, mouse) {\n  const n = creatures.current.length;\n\n  for (let i = 0; i < n; i++) {\n    const observer = creatures.current[i];\n\n    if (observer.pos.subtr(mouse).mag() < 10) {\n      observer.infect();\n    }\n  }\n}\n\nconst Earth = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const CREATURES = useRef([]);\n  const FOODS = useRef([]);\n  const localSpeed = useRef(0.5);\n  const birthCache = useRef([]);\n  const {\n    restarted,\n    calamityType,\n    calamities,\n    resources,\n    resourceType,\n    status,\n    speed,\n    initialPopulation\n  } = useGlobalState();\n  const {\n    setTotalPopulation,\n    setCalamityPosition,\n    setResourcePosition\n  } = useGlobalActions();\n  const localStatus = useRef(status);\n  useEffect(() => {\n    localSpeed.current = speed;\n  }, [speed]);\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const canvas = document.getElementById(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvasRef.current.focus();\n      setCtx(ctx);\n    }\n  }, [canvasRef]);\n  useEffect(() => {\n    if (ctx) {\n      clearCanvas(ctx, canvasRef);\n      makeInitialPopulation(initialPopulation, CREATURES);\n      makeInitialFood(FOODS);\n    }\n  }, [ctx, restarted, initialPopulation]);\n  useEffect(() => {\n    let reqID = null;\n    localStatus.current = status;\n\n    if (status.localeCompare(\"Playing\") === 0) {\n      reqID = requestAnimationFrame(mainLoop);\n    }\n\n    return () => {\n      if (reqID) {\n        cancelAnimationFrame(reqID);\n      }\n    };\n  }, [status]);\n\n  function mainLoop(timestamp) {\n    if (localStatus.current.localeCompare(\"Playing\") === 0) {\n      clearCanvas(ctx, canvasRef);\n      findFood(CREATURES, FOODS);\n      die(CREATURES);\n      infection(CREATURES);\n      matingPool(CREATURES);\n      CREATURES.current.forEach((b, index) => {\n        b.updateCreature(ctx, localSpeed.current);\n      });\n      FOODS.current.forEach((f, index) => {\n        f.drawFood(ctx);\n      });\n      addRandomNumberOfFood(FOODS);\n      setTotalPopulation(CREATURES.current.length);\n      requestAnimationFrame(mainLoop);\n    }\n\n    return;\n  }\n\n  function handleCanvasClick(e) {\n    const mouse = new Vector(e.clientX - 300, e.clientY);\n\n    if (e.button === 0) {\n      if (calamityType.localeCompare(\"none\") !== 0 && calamities.length < 5 && resourceType.localeCompare(\"none\") === 0) {\n        setCalamityPosition({\n          x: mouse.x,\n          y: mouse.y\n        });\n      } else if (resourceType.localeCompare(\"none\") !== 0 && resources.length < 5 && calamityType.localeCompare(\"none\") === 0) {\n        setResourcePosition({\n          x: mouse.x,\n          y: mouse.y\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [resources ? resources.map(resource => {\n      if (resource.type.localeCompare(\"waterBody\") === 0) {\n        return /*#__PURE__*/_jsxDEV(WaterBody, {\n          uid: resource.id,\n          size: resource.size,\n          position: resource.position\n        }, `${resource.id}+resource`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }, this);\n      }\n    }) : null, calamities ? calamities.map(calamity => {\n      if (calamity.type.localeCompare(\"earthQuake\") === 0) {\n        return /*#__PURE__*/_jsxDEV(EarthQuake, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }, this);\n      } else if (calamity.type.localeCompare(\"volcano\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Volcano, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }, this);\n      } else if (calamity.type.localeCompare(\"radiation\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Radiation, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }, this);\n      }\n    }) : null, /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onClick: handleCanvasClick,\n      tabIndex: 1,\n      id: \"canvas\",\n      ref: canvasRef,\n      width: window.innerWidth - 300,\n      height: window.innerHeight,\n      style: {\n        backgroundColor: \"#222222\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"7wExc+fZ+Pad8e5t0Axh2sXkYgc=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/earth.js"],"names":["useEffect","useRef","useState","Vector","Creature","Wall","useGlobalState","useGlobalActions","Food","EarthQuake","Volcano","Radiation","WaterBody","makeInitialFood","makeInitialPopulation","isPairEqual","randInt","matingPool","clearCanvas","ctx","canvasRef","clearRect","current","clientWidth","clientHeight","addRandomNumberOfFood","foods","Math","random","food","window","innerWidth","innerHeight","findFood","creatures","forEach","creature","index","isFoodFound","canEatFood","i","length","pos","subtr","mag","updateFoodFound","id","foundFoodPosition","foodIndex","localeCompare","foodId","splice","updateFoodEaten","updateLastFoodTime","infection","n","observer","isInfected","j","target","infect","die","canDie","infectCreatures","mouse","Earth","setCtx","CREATURES","FOODS","localSpeed","birthCache","restarted","calamityType","calamities","resources","resourceType","status","speed","initialPopulation","setTotalPopulation","setCalamityPosition","setResourcePosition","localStatus","canvas","document","getElementById","getContext","focus","reqID","requestAnimationFrame","mainLoop","cancelAnimationFrame","timestamp","b","updateCreature","f","drawFood","handleCanvasClick","e","clientX","clientY","button","x","y","map","resource","type","size","position","calamity","amplitude","duration","backgroundColor"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Vector } from \"./vector\";\r\nimport { Creature } from \"./creature\";\r\nimport { Wall } from \"./wall\";\r\nimport { useGlobalState, useGlobalActions } from \"../context/globalContext\";\r\nimport { Food } from \"./food\";\r\nimport EarthQuake from \"./earthQuake\";\r\nimport Volcano from \"./volcana\";\r\nimport Radiation from \"./radiation\";\r\nimport WaterBody from \"./waterBody\";\r\nimport {makeInitialFood,makeInitialPopulation} from \"./gaFunctions/initiators\"\r\nimport {isPairEqual,randInt} from \"./utils/util\";\r\nimport {matingPool} from \"./gaFunctions/mating\";\r\n\r\nfunction clearCanvas(ctx, canvasRef) {\r\n  ctx?.clearRect(\r\n    0,\r\n    0,\r\n    canvasRef?.current?.clientWidth,\r\n    canvasRef?.current?.clientHeight\r\n  );\r\n}\r\n\r\n\r\nfunction addRandomNumberOfFood(foods) {\r\n  if (Math.random() > 0.8) {\r\n    const food = new Food(\r\n      randInt(10, window.innerWidth - 300 - 10),\r\n      randInt(10, window.innerHeight - 10),\r\n      foods\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction findFood(creatures, foods) {\r\n  creatures.current.forEach((creature, index) => {\r\n    if (!creature.isFoodFound && creature.canEatFood) {\r\n      for (let i = 0; i < foods.current.length; i++) {\r\n        const food = foods.current[i];\r\n        if (food.pos.subtr(creature.pos).mag() < 20) {\r\n          creature.updateFoodFound(food.pos, food.id);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      if (\r\n        creature.isFoodFound &&\r\n        creature.canEatFood &&\r\n        creature.pos.subtr(creature.foundFoodPosition).mag() < 5\r\n      ) {\r\n        let foodIndex = -1;\r\n        for (var i = 0; i < foods.current.length; i++) {\r\n          if (foods.current[i].id.localeCompare(creature.foodId) === 0) {\r\n            foodIndex = i;\r\n            break;\r\n          }\r\n        }\r\n        if (foodIndex !== -1) {\r\n          foods.current.splice(foodIndex, 1);\r\n          creature.updateFoodEaten();\r\n          creature.updateLastFoodTime();\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction infection(creatures) {\r\n  let n = creatures.current.length;\r\n  for (let i = 0; i < n; i++) {\r\n    const observer = creatures.current[i];\r\n    if (observer.isInfected) {\r\n      for (let j = i + 1; j < n; j++) {\r\n        const target = creatures.current[j];\r\n        if (observer.pos.subtr(target.pos).mag() < 7) {\r\n          target.infect();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction die(creatures) {\r\n  for (let i = 0; i < creatures.current.length; i++) {\r\n    if (creatures.current[i].canDie()) {\r\n      creatures.current.splice(i, 1);\r\n    }\r\n  }\r\n}\r\n\r\nfunction infectCreatures(creatures, mouse) {\r\n  const n = creatures.current.length;\r\n  for (let i = 0; i < n; i++) {\r\n    const observer = creatures.current[i];\r\n    if (observer.pos.subtr(mouse).mag() < 10) {\r\n      observer.infect();\r\n    }\r\n  }\r\n}\r\n\r\nconst Earth = () => {\r\n  const canvasRef = useRef(null);\r\n  const [ctx, setCtx] = useState(null);\r\n  const CREATURES = useRef([]);\r\n  const FOODS = useRef([]);\r\n  const localSpeed = useRef(0.5);\r\n  const birthCache = useRef([]);\r\n  const {\r\n    restarted,\r\n    calamityType,\r\n    calamities,\r\n    resources,\r\n    resourceType,\r\n    status,\r\n    speed,\r\n    initialPopulation,\r\n  } = useGlobalState();\r\n\r\n  const {\r\n    setTotalPopulation,\r\n    setCalamityPosition,\r\n    setResourcePosition,\r\n  } = useGlobalActions();\r\n  const localStatus = useRef(status);\r\n\r\n  useEffect(() => {\r\n    localSpeed.current = speed;\r\n  }, [speed]);\r\n  useEffect(() => {\r\n    if (canvasRef && canvasRef.current) {\r\n      const canvas = document.getElementById(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      canvasRef.current.focus();\r\n      setCtx(ctx);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  useEffect(() => {\r\n    if (ctx) {\r\n      clearCanvas(ctx, canvasRef);\r\n      makeInitialPopulation(initialPopulation, CREATURES);\r\n      makeInitialFood(FOODS);\r\n    }\r\n  }, [ctx, restarted, initialPopulation]);\r\n\r\n  useEffect(() => {\r\n    let reqID = null;\r\n    localStatus.current = status;\r\n    if (status.localeCompare(\"Playing\") === 0) {\r\n      reqID = requestAnimationFrame(mainLoop);\r\n    }\r\n    return () => {\r\n      if (reqID) {\r\n        cancelAnimationFrame(reqID);\r\n      }\r\n    };\r\n  }, [status]);\r\n\r\n  function mainLoop(timestamp) {\r\n    if (localStatus.current.localeCompare(\"Playing\") === 0) {\r\n      clearCanvas(ctx, canvasRef);\r\n      findFood(CREATURES, FOODS);\r\n      die(CREATURES);\r\n      infection(CREATURES);\r\n      matingPool(CREATURES);\r\n\r\n      CREATURES.current.forEach((b, index) => {\r\n        b.updateCreature(ctx, localSpeed.current);\r\n      });\r\n\r\n      FOODS.current.forEach((f, index) => {\r\n        f.drawFood(ctx);\r\n      });\r\n      addRandomNumberOfFood(FOODS);\r\n      setTotalPopulation(CREATURES.current.length);\r\n      requestAnimationFrame(mainLoop);\r\n    }\r\n    return;\r\n  }\r\n\r\n  function handleCanvasClick(e) {\r\n    const mouse = new Vector(e.clientX - 300, e.clientY);\r\n    if (e.button === 0) {\r\n      if (\r\n        calamityType.localeCompare(\"none\") !== 0 &&\r\n        calamities.length < 5 &&\r\n        resourceType.localeCompare(\"none\") === 0\r\n      ) {\r\n        setCalamityPosition({\r\n          x: mouse.x,\r\n          y: mouse.y,\r\n        });\r\n      } else if (\r\n        resourceType.localeCompare(\"none\") !== 0 &&\r\n        resources.length < 5 &&\r\n        calamityType.localeCompare(\"none\") === 0\r\n      ) {\r\n        setResourcePosition({\r\n          x: mouse.x,\r\n          y: mouse.y,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {\r\n        resources\r\n          ? resources.map((resource) => {\r\n              if (resource.type.localeCompare(\"waterBody\") === 0) {\r\n                return (\r\n                  <WaterBody\r\n                    key={`${resource.id}+resource`}\r\n                    uid={resource.id}\r\n                    size={resource.size}\r\n                    position={resource.position}\r\n                  ></WaterBody>\r\n                );\r\n              }\r\n            })\r\n          : null\r\n      }\r\n      {\r\n        calamities\r\n          ? calamities.map((calamity) => {\r\n              if (calamity.type.localeCompare(\"earthQuake\") === 0) {\r\n                return (\r\n                  <EarthQuake\r\n                    key={`${calamity.id}+calamity`}\r\n                    size={calamity.size}\r\n                    amplitude={calamity.amplitude}\r\n                    duration={calamity.duration}\r\n                    position={calamity.position}\r\n                  />\r\n                );\r\n              } else if (calamity.type.localeCompare(\"volcano\") === 0) {\r\n                return (\r\n                  <Volcano\r\n                    key={`${calamity.id}+calamity`}\r\n                    size={calamity.size}\r\n                    amplitude={calamity.amplitude}\r\n                    duration={calamity.duration}\r\n                    position={calamity.position}\r\n                  />\r\n                );\r\n              } else if (calamity.type.localeCompare(\"radiation\") === 0) {\r\n                return (\r\n                  <Radiation\r\n                    key={`${calamity.id}+calamity`}\r\n                    size={calamity.size}\r\n                    amplitude={calamity.amplitude}\r\n                    duration={calamity.duration}\r\n                    position={calamity.position}\r\n                  />\r\n                );\r\n              }\r\n            })\r\n          : null\r\n      }\r\n      <canvas\r\n        onClick={handleCanvasClick}\r\n        tabIndex={1}\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        width={window.innerWidth - 300}\r\n        height={window.innerHeight}\r\n        style={{ backgroundColor: \"#222222\" }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}