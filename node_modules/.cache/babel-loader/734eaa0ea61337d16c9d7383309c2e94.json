{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport MojsExample from \"./earthQuake\";\nimport EarthQuake from \"./earthQuake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst demo = Array.from(Array(20).keys());\n\nconst Earth = () => {\n  _s();\n\n  const {\n    status,\n    restarted\n  } = useGlobalState();\n  const [isEarthQuakeActive, setIsEarthQuakeActive] = useState(false);\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      const handler = e => {\n        if (e.detail) {\n          e.detail.candidates.forEach(() => {\n            addNewCreature({\n              color: \"#FF0000\"\n            });\n          });\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", handler);\n      return () => {\n        var _earthRef$current;\n\n        return earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", handler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature(props) {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      color: (props === null || props === void 0 ? void 0 : props.color) ? props.color : \"#000000\"\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature({\n        color: \"#8FFF40\"\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n\n  function makeEarthQuake(x, y) {\n    var _earthRef$current2;\n\n    const event = new CustomEvent(\"earthQuake\", {\n      detail: {\n        x,\n        y\n      }\n    });\n    earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.dispatchEvent(event);\n  }\n\n  useEffect(() => {\n    console.log(\"earth quake\", isEarthQuakeActive);\n\n    if (isEarthQuakeActive) {\n      const interval = setInterval(() => {\n        setIsEarthQuakeActive(false);\n      }, [6000]);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [isEarthQuakeActive]);\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n\n    if (e.button === 0) {\n      makeEarthQuake(e.clientX - earthDimensions.left, e.clientY - earthDimensions.top); // addNewCreature({ color: \"#004CFF\" });\n    } else {\n      removeRandom();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [/*#__PURE__*/_jsxDEV(EarthQuake, {\n      duration: 3000,\n      earthRef: earthRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        color: creature.color,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this);\n    }) : null, /*#__PURE__*/_jsxDEV(MojsExample, {\n      duration: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), isStatsVisible === false ? /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Statisitcs, {\n      setIsStatsVisible: setIsStatsVisible,\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), isEarthQuakeActive ? /*#__PURE__*/_jsxDEV(MojsExample, {\n      duration: 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 27\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"klozDaL2ivQ53x59O5q1wTlfau4=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","MojsExample","EarthQuake","demo","Array","from","keys","Earth","status","restarted","isEarthQuakeActive","setIsEarthQuakeActive","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","setIsStatsVisible","earthRef","creaturesRef","current","handler","e","detail","candidates","forEach","addNewCreature","color","addEventListener","removeEventListener","props","creaturesTemp","push","uid","removeRandom","splice","Math","floor","random","length","InitializeCreatures","i","top","offsetTop","left","offsetLeft","w","offsetWidth","h","offsetHeight","makeEarthQuake","x","y","event","CustomEvent","dispatchEvent","console","log","interval","setInterval","clearInterval","handleEarthMouseDown","preventDefault","button","clientX","clientY","backgroundColor","height","width","map","creature","position"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport MojsExample from \"./earthQuake\";\r\nimport EarthQuake from \"./earthQuake\";\r\n\r\nconst demo = Array.from(Array(20).keys());\r\n\r\nconst Earth = () => {\r\n  const { status, restarted } = useGlobalState();\r\n  const [isEarthQuakeActive, setIsEarthQuakeActive] = useState(false);\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const handler = (e) => {\r\n        if (e.detail) {\r\n          e.detail.candidates.forEach(() => {\r\n            addNewCreature({ color: \"#FF0000\" });\r\n          });\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", handler);\r\n      return () => earthRef?.current?.removeEventListener(\"birth\", handler);\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      color: props?.color ? props.color : \"#000000\",\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature({ color: \"#8FFF40\" });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n\r\n\r\n  function makeEarthQuake(x,y){\r\n\r\n    const event = new CustomEvent(\"earthQuake\", {\r\n      detail: { x,y },\r\n    });\r\n    earthRef?.current?.dispatchEvent(event);\r\n  }\r\n  useEffect(() => {\r\n    console.log(\"earth quake\",isEarthQuakeActive);\r\n    if (isEarthQuakeActive) {\r\n      \r\n      const interval = setInterval(() => {\r\n        setIsEarthQuakeActive(false);\r\n      }, [6000]);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [isEarthQuakeActive]);\r\n  function handleEarthMouseDown(e)  {\r\n    e.preventDefault();\r\n    if (e.button === 0) {\r\n      makeEarthQuake(e.clientX-earthDimensions.left,e.clientY-earthDimensions.top)\r\n      // addNewCreature({ color: \"#004CFF\" });\r\n    } else {\r\n      removeRandom();\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#222222\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      <EarthQuake duration={3000} earthRef = {earthRef}></EarthQuake>\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                color={creature.color}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      <MojsExample duration={1000} />\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          setIsStatsVisible={setIsStatsVisible}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n      {isEarthQuakeActive?<MojsExample duration={5000}></MojsExample>:null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}