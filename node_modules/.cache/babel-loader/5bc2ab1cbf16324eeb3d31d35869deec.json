{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport EarthQuake from \"./earthQuake\"; // const demo = Array.from(Array(100).keys());\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Earth = () => {\n  _s();\n\n  const {\n    status,\n    restarted,\n    earthQuakePosition,\n    earthQuakeDuration,\n    earthQuakeAmplitude,\n    earthQuakeRadius\n  } = useGlobalState();\n  const {\n    setEarthQuakePosition\n  } = useGlobalActions();\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const [mouseOnStats, setMouseOnStats] = useState(false);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  const birthCache = useRef([]);\n  const [localEQRadius, setLocalEQRadius] = useState(earthQuakeRadius);\n  const [localEQAmplitude, setLocalEQAmplitude] = useState(earthQuakeAmplitude);\n  const [localEQDuration, setLocalEQDuration] = useState(earthQuakeDuration);\n  useEffect(() => {\n    setLocalEQAmplitude(earthQuakeAmplitude);\n    setLocalEQRadius(earthQuakeRadius);\n    setLocalEQDuration(earthQuakeDuration);\n  }, [earthQuakeDuration, earthQuakeAmplitude, earthQuakeRadius]);\n\n  function newBirth(parents) {\n    const birthCacheTemp = birthCache.current;\n    const l = birthCacheTemp.length;\n    var canGiveBirth = true;\n\n    for (var i = 0; i < l; i++) {\n      if ((birthCacheTemp[i].mother.localeCompare(parents.mother) === 0 || birthCacheTemp[i].mother.localeCompare(parents.father) === 0) && (birthCacheTemp[i].father.localeCompare(parents.mother) === 0 || birthCacheTemp[i].father.localeCompare(parents.father) === 0)) {\n        // console.log(\"BirthCache hit!\", parents, birthCacheTemp);\n        canGiveBirth = false;\n        break;\n      }\n    }\n\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\n      addNewCreature({\n        x: parents.x,\n        y: parents.y\n      });\n      birthCacheTemp.push({ ...parents\n      });\n    }\n\n    if (birthCacheTemp.length > 100) {\n      birthCacheTemp.shift();\n    }\n\n    birthCache.current = birthCacheTemp;\n  }\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      const birthHandler = e => {\n        if (e.detail) {\n          newBirth({\n            mother: e.detail.mother,\n            father: e.detail.candidates[0].id,\n            x: Math.floor(e.detail.position.x + e.detail.candidates[0].offsetLeft) / 2,\n            y: Math.floor(e.detail.position.y + e.detail.candidates[0].offsetTop) / 2,\n            positionM: e.detail.position,\n            positionF: {\n              x: e.detail.candidates[0].offsetLeft,\n              y: e.detail.candidates[0].offsetTop\n            }\n          });\n        }\n      };\n\n      const deathHandler = e => {\n        if (e.detail) {\n          removeCreatureByUid(e.detail.uid);\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", birthHandler);\n      earthRef.current.addEventListener(\"death\", deathHandler);\n      return () => {\n        var _earthRef$current, _earthRef$current2;\n\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", birthHandler);\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.removeEventListener(\"death\", deathHandler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature(props) {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      birth: Date.now(),\n      x: props ? props.x : null,\n      y: props ? props.y : null\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function removeCreatureByUid(uid) {\n    const creaturesTemp = creaturesRef.current;\n\n    for (var i = 0; i < creaturesTemp.length; i++) {\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\n        creaturesTemp.splice(i, 1);\n        setCreatures([...creaturesTemp]);\n        creaturesRef.current = creaturesTemp;\n        break;\n      }\n    }\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature();\n    }\n  }\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n\n  function makeEarthQuake(x, y) {\n    var _earthRef$current3;\n\n    const event = new CustomEvent(\"earthQuake\", {\n      detail: {\n        x,\n        y\n      }\n    });\n    earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current3 = earthRef.current) === null || _earthRef$current3 === void 0 ? void 0 : _earthRef$current3.dispatchEvent(event);\n  }\n\n  useEffect(() => {\n    if (earthQuakePosition) {\n      const interval = setInterval(() => {\n        setEarthQuakePosition(null);\n      }, [earthQuakeDuration]);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [earthQuakePosition, earthQuakeDuration]);\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n\n    if (!mouseOnStats && !isStatsVisible) {\n      if (e.button === 0) {\n        makeEarthQuake(e.clientX - earthDimensions.left, e.clientY - earthDimensions.top);\n        setEarthQuakePosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        }); // addNewCreature({ color: \"#004CFF\" });\n      } else {\n        removeRandom();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [/*#__PURE__*/_jsxDEV(EarthQuake, {\n      earthRef: earthRef,\n      earthQuakeDuration: localEQDuration,\n      earthQuakeAmplitude: localEQAmplitude,\n      earthQuakeRadius: localEQRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        birth: creature.birth,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions,\n        x: creature.x,\n        y: creature.y\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }, this);\n    }) : null, isStatsVisible === false ? /*#__PURE__*/_jsxDEV(IconButton, {\n      onMouseEnter: e => {\n        e.preventDefault();\n        setMouseOnStats(true);\n      },\n      onMouseLeave: e => {\n        e.preventDefault();\n        setMouseOnStats(false);\n      },\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Statisitcs, {\n      closeStats: () => {\n        setIsStatsVisible(false);\n        setMouseOnStats(false);\n      },\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"iZzyvM0xWvMt6ljCUeiZ7QclucA=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","EarthQuake","Earth","status","restarted","earthQuakePosition","earthQuakeDuration","earthQuakeAmplitude","earthQuakeRadius","setEarthQuakePosition","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","setIsStatsVisible","mouseOnStats","setMouseOnStats","earthRef","creaturesRef","birthCache","localEQRadius","setLocalEQRadius","localEQAmplitude","setLocalEQAmplitude","localEQDuration","setLocalEQDuration","newBirth","parents","birthCacheTemp","current","l","length","canGiveBirth","i","mother","localeCompare","father","addNewCreature","x","y","push","shift","birthHandler","e","detail","candidates","id","Math","floor","position","offsetLeft","offsetTop","positionM","positionF","deathHandler","removeCreatureByUid","uid","addEventListener","removeEventListener","props","creaturesTemp","birth","Date","now","splice","removeRandom","random","InitializeCreatures","top","left","w","offsetWidth","h","offsetHeight","makeEarthQuake","event","CustomEvent","dispatchEvent","interval","setInterval","clearInterval","handleEarthMouseDown","preventDefault","button","clientX","clientY","backgroundColor","height","width","overflow","map","creature","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,mBALI;AAMJC,IAAAA;AANI,MAOFT,cAAc,EAPlB;AAQA,QAAM;AAAEU,IAAAA;AAAF,MAA4BX,gBAAgB,EAAlD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM2B,QAAQ,gBAAG9B,SAAS,EAA1B;AACA,QAAM+B,YAAY,GAAG7B,MAAM,CAAC,EAAD,CAA3B;AACA,QAAM8B,UAAU,GAAG9B,MAAM,CAAC,EAAD,CAAzB;AAEA,QAAM,CAAC+B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAACiB,gBAAD,CAAlD;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0CjC,QAAQ,CAACgB,mBAAD,CAAxD;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnC,QAAQ,CAACe,kBAAD,CAAtD;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdmC,IAAAA,mBAAmB,CAACjB,mBAAD,CAAnB;AACAe,IAAAA,gBAAgB,CAACd,gBAAD,CAAhB;AACAkB,IAAAA,kBAAkB,CAACpB,kBAAD,CAAlB;AACD,GAJQ,EAIN,CAACA,kBAAD,EAAqBC,mBAArB,EAA0CC,gBAA1C,CAJM,CAAT;;AAKA,WAASmB,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,UAAMC,cAAc,GAAGT,UAAU,CAACU,OAAlC;AACA,UAAMC,CAAC,GAAGF,cAAc,CAACG,MAAzB;AAEA,QAAIC,YAAY,GAAG,IAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AAC1B,UACE,CAACL,cAAc,CAACK,CAAD,CAAd,CAAkBC,MAAlB,CAAyBC,aAAzB,CAAuCR,OAAO,CAACO,MAA/C,MAA2D,CAA3D,IACCN,cAAc,CAACK,CAAD,CAAd,CAAkBC,MAAlB,CAAyBC,aAAzB,CAAuCR,OAAO,CAACS,MAA/C,MAA2D,CAD7D,MAECR,cAAc,CAACK,CAAD,CAAd,CAAkBG,MAAlB,CAAyBD,aAAzB,CAAuCR,OAAO,CAACO,MAA/C,MAA2D,CAA3D,IACCN,cAAc,CAACK,CAAD,CAAd,CAAkBG,MAAlB,CAAyBD,aAAzB,CAAuCR,OAAO,CAACS,MAA/C,MAA2D,CAH7D,CADF,EAKE;AACA;AACAJ,QAAAA,YAAY,GAAG,KAAf;AACA;AACD;AACF;;AAED,QAAIJ,cAAc,CAACG,MAAf,KAA0B,CAA1B,IAA+BC,YAAnC,EAAiD;AAC/CK,MAAAA,cAAc,CAAC;AAAEC,QAAAA,CAAC,EAAEX,OAAO,CAACW,CAAb;AAAgBC,QAAAA,CAAC,EAAEZ,OAAO,CAACY;AAA3B,OAAD,CAAd;AACAX,MAAAA,cAAc,CAACY,IAAf,CAAoB,EAAE,GAAGb;AAAL,OAApB;AACD;;AACD,QAAIC,cAAc,CAACG,MAAf,GAAwB,GAA5B,EAAiC;AAC/BH,MAAAA,cAAc,CAACa,KAAf;AACD;;AACDtB,IAAAA,UAAU,CAACU,OAAX,GAAqBD,cAArB;AACD;;AACDxC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAQ,IAAIA,QAAQ,CAACY,OAArB,IAAgC,CAAClB,eAArC,EAAsD;AACpD,YAAM+B,YAAY,GAAIC,CAAD,IAAO;AAC1B,YAAIA,CAAC,CAACC,MAAN,EAAc;AACZlB,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,MAAM,EAAES,CAAC,CAACC,MAAF,CAASV,MADV;AAEPE,YAAAA,MAAM,EAAEO,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBC,EAFxB;AAGPR,YAAAA,CAAC,EACCS,IAAI,CAACC,KAAL,CACEL,CAAC,CAACC,MAAF,CAASK,QAAT,CAAkBX,CAAlB,GAAsBK,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBK,UAD/C,IAEI,CANC;AAOPX,YAAAA,CAAC,EACCQ,IAAI,CAACC,KAAL,CACEL,CAAC,CAACC,MAAF,CAASK,QAAT,CAAkBV,CAAlB,GAAsBI,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBM,SAD/C,IAEI,CAVC;AAWPC,YAAAA,SAAS,EAAET,CAAC,CAACC,MAAF,CAASK,QAXb;AAYPI,YAAAA,SAAS,EAAE;AACTf,cAAAA,CAAC,EAAEK,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBK,UADjB;AAETX,cAAAA,CAAC,EAAEI,CAAC,CAACC,MAAF,CAASC,UAAT,CAAoB,CAApB,EAAuBM;AAFjB;AAZJ,WAAD,CAAR;AAiBD;AACF,OApBD;;AAqBA,YAAMG,YAAY,GAAIX,CAAD,IAAO;AAC1B,YAAIA,CAAC,CAACC,MAAN,EAAc;AACZW,UAAAA,mBAAmB,CAACZ,CAAC,CAACC,MAAF,CAASY,GAAV,CAAnB;AACD;AACF,OAJD;;AAKAvC,MAAAA,QAAQ,CAACY,OAAT,CAAiB4B,gBAAjB,CAAkC,OAAlC,EAA2Cf,YAA3C;AACAzB,MAAAA,QAAQ,CAACY,OAAT,CAAiB4B,gBAAjB,CAAkC,OAAlC,EAA2CH,YAA3C;AACA,aAAO,MAAM;AAAA;;AACXrC,QAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,iCAAAA,QAAQ,CAAEY,OAAV,wEAAmB6B,mBAAnB,CAAuC,OAAvC,EAAgDhB,YAAhD;AACAzB,QAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,kCAAAA,QAAQ,CAAEY,OAAV,0EAAmB6B,mBAAnB,CAAuC,OAAvC,EAAgDJ,YAAhD;AACD,OAHD;AAID;AACF,GAnCQ,EAmCN,CAACrC,QAAD,EAAWA,QAAQ,CAACY,OAApB,CAnCM,CAAT;;AAqCA,WAASQ,cAAT,CAAwBsB,KAAxB,EAA+B;AAC7B,UAAMC,aAAa,GAAG1C,YAAY,CAACW,OAAnC;AACA+B,IAAAA,aAAa,CAACpB,IAAd,CAAmB;AACjBgB,MAAAA,GAAG,EAAE/D,MAAM,EADM;AAEjBoE,MAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,EAFU;AAGjBzB,MAAAA,CAAC,EAAEqB,KAAK,GAAGA,KAAK,CAACrB,CAAT,GAAa,IAHJ;AAIjBC,MAAAA,CAAC,EAAEoB,KAAK,GAAGA,KAAK,CAACpB,CAAT,GAAa;AAJJ,KAAnB;AAMA7B,IAAAA,YAAY,CAAC,CAAC,GAAGkD,aAAJ,CAAD,CAAZ;AACA1C,IAAAA,YAAY,CAACW,OAAb,GAAuB+B,aAAvB;AACD;;AAED,WAASL,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,UAAMI,aAAa,GAAG1C,YAAY,CAACW,OAAnC;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,aAAa,CAAC7B,MAAlC,EAA0CE,CAAC,EAA3C,EAA+C;AAC7C,UAAI2B,aAAa,CAAC3B,CAAD,CAAb,CAAiBuB,GAAjB,CAAqBrB,aAArB,CAAmCqB,GAAnC,MAA4C,CAAhD,EAAmD;AACjDI,QAAAA,aAAa,CAACI,MAAd,CAAqB/B,CAArB,EAAwB,CAAxB;AACAvB,QAAAA,YAAY,CAAC,CAAC,GAAGkD,aAAJ,CAAD,CAAZ;AACA1C,QAAAA,YAAY,CAACW,OAAb,GAAuB+B,aAAvB;AACA;AACD;AACF;AACF;;AAED,WAASK,YAAT,GAAwB;AACtB,UAAML,aAAa,GAAG1C,YAAY,CAACW,OAAnC;AACA+B,IAAAA,aAAa,CAACI,MAAd,CACEjB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACmB,MAAL,KAAgBhD,YAAY,CAACW,OAAb,CAAqBE,MAAhD,CADF,EAEE,CAFF;AAIArB,IAAAA,YAAY,CAAC,CAAC,GAAGkD,aAAJ,CAAD,CAAZ;AACA1C,IAAAA,YAAY,CAACW,OAAb,GAAuB+B,aAAvB;AACD;;AAED,WAASO,mBAAT,GAA+B;AAC7BjD,IAAAA,YAAY,CAACW,OAAb,GAAuB,EAAvB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BI,MAAAA,cAAc;AACf;AACF;;AACDjD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAJ,EAAe;AACbgE,MAAAA,mBAAmB;AACpB;AACF,GAJQ,EAIN,CAAChE,SAAD,CAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAQ,IAAIA,QAAQ,CAACY,OAArB,IAAgC,CAAClB,eAArC,EAAsD;AACpDC,MAAAA,kBAAkB,CAAC;AACjBwD,QAAAA,GAAG,EAAEnD,QAAQ,CAACY,OAAT,CAAiBsB,SADL;AAEjBkB,QAAAA,IAAI,EAAEpD,QAAQ,CAACY,OAAT,CAAiBqB,UAFN;AAGjBoB,QAAAA,CAAC,EAAErD,QAAQ,CAACY,OAAT,CAAiB0C,WAHH;AAIjBC,QAAAA,CAAC,EAAEvD,QAAQ,CAACY,OAAT,CAAiB4C;AAJH,OAAD,CAAlB;AAMD;AACF,GATQ,EASN,CAACxD,QAAD,CATM,CAAT;;AAWA,WAASyD,cAAT,CAAwBpC,CAAxB,EAA2BC,CAA3B,EAA8B;AAAA;;AAC5B,UAAMoC,KAAK,GAAG,IAAIC,WAAJ,CAAgB,YAAhB,EAA8B;AAC1ChC,MAAAA,MAAM,EAAE;AAAEN,QAAAA,CAAF;AAAKC,QAAAA;AAAL;AADkC,KAA9B,CAAd;AAGAtB,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,kCAAAA,QAAQ,CAAEY,OAAV,0EAAmBgD,aAAnB,CAAiCF,KAAjC;AACD;;AACDvF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,kBAAJ,EAAwB;AACtB,YAAM0E,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCvE,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,OAF2B,EAEzB,CAACH,kBAAD,CAFyB,CAA5B;AAIA,aAAO,MAAM;AACX2E,QAAAA,aAAa,CAACF,QAAD,CAAb;AACD,OAFD;AAGD;AACF,GAVQ,EAUN,CAAC1E,kBAAD,EAAqBC,kBAArB,CAVM,CAAT;;AAYA,WAAS4E,oBAAT,CAA8BtC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACuC,cAAF;;AACA,QAAI,CAACnE,YAAD,IAAiB,CAACF,cAAtB,EAAsC;AACpC,UAAI8B,CAAC,CAACwC,MAAF,KAAa,CAAjB,EAAoB;AAClBT,QAAAA,cAAc,CACZ/B,CAAC,CAACyC,OAAF,GAAYzE,eAAe,CAAC0D,IADhB,EAEZ1B,CAAC,CAAC0C,OAAF,GAAY1E,eAAe,CAACyD,GAFhB,CAAd;AAIA5D,QAAAA,qBAAqB,CAAC;AACpB8B,UAAAA,CAAC,EAAEK,CAAC,CAACyC,OAAF,GAAYzE,eAAe,CAAC0D,IADX;AAEpB9B,UAAAA,CAAC,EAAEI,CAAC,CAAC0C,OAAF,GAAY1E,eAAe,CAACyD;AAFX,SAAD,CAArB,CALkB,CASlB;AACD,OAVD,MAUO;AACLH,QAAAA,YAAY;AACb;AACF;AACF;;AACD,sBACE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,GAAG,EAAEhD,QAFP;AAGE,IAAA,KAAK,EAAE;AACLqE,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,QAAQ,EAAE;AAJL,KAHT;AASE,IAAA,WAAW,EAAER,oBATf;AAAA,4BAWE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEhE,QADZ;AAEE,MAAA,kBAAkB,EAAEO,eAFtB;AAGE,MAAA,mBAAmB,EAAEF,gBAHvB;AAIE,MAAA,gBAAgB,EAAEF;AAJpB;AAAA;AAAA;AAAA;AAAA,YAXF,EAiBGH,QAAQ,IAAIN,eAAZ,GACGF,SAAS,CAACiF,GAAV,CAAeC,QAAD,IAAc;AAC1B,0BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEA,QAAQ,CAAC9B,KADlB;AAGE,QAAA,GAAG,EAAE8B,QAAQ,CAACnC,GAHhB;AAIE,QAAA,QAAQ,EAAEvC,QAJZ;AAKE,QAAA,GAAG,EAAEN,eALP;AAME,QAAA,CAAC,EAAEgF,QAAQ,CAACrD,CANd;AAOE,QAAA,CAAC,EAAEqD,QAAQ,CAACpD;AAPd,SAEOoD,QAAQ,CAACnC,GAFhB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZD,CADH,GAcG,IA/BN,EAgCG3C,cAAc,KAAK,KAAnB,gBACC,QAAC,UAAD;AACE,MAAA,YAAY,EAAG8B,CAAD,IAAO;AACnBA,QAAAA,CAAC,CAACuC,cAAF;AACAlE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAJH;AAKE,MAAA,YAAY,EAAG2B,CAAD,IAAO;AACnBA,QAAAA,CAAC,CAACuC,cAAF;AACAlE,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OARH;AASE,MAAA,KAAK,EAAE;AAAEiC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBmB,QAAAA,GAAG,EAAE,CAA7B;AAAgCC,QAAAA,IAAI,EAAE;AAAtC,OATT;AAUE,MAAA,OAAO,EAAG1B,CAAD,IAAO;AACdA,QAAAA,CAAC,CAACuC,cAAF;AACApE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,OAbH;AAAA,6BAeE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAE8E,UAAAA,KAAK,EAAE;AAAT;AAAnB;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,YADD,gBAmBC,QAAC,UAAD;AACE,MAAA,UAAU,EAAE,MAAM;AAChB9E,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEiC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBmB,QAAAA,GAAG,EAAE,CAA7B;AAAgCC,QAAAA,IAAI,EAAE;AAAtC;AALT;AAAA;AAAA;AAAA;AAAA,YAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CAtPD;;GAAMpE,K;UAQAH,c,EAC8BD,gB;;;KAT9BI,K;AAwPN,eAAeA,KAAf","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport EarthQuake from \"./earthQuake\";\r\n\r\n// const demo = Array.from(Array(100).keys());\r\n\r\nconst Earth = () => {\r\n  const {\r\n    status,\r\n    restarted,\r\n    earthQuakePosition,\r\n    earthQuakeDuration,\r\n    earthQuakeAmplitude,\r\n    earthQuakeRadius,\r\n  } = useGlobalState();\r\n  const { setEarthQuakePosition } = useGlobalActions();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const [mouseOnStats, setMouseOnStats] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n  const birthCache = useRef([]);\r\n\r\n  const [localEQRadius, setLocalEQRadius] = useState(earthQuakeRadius);\r\n  const [localEQAmplitude, setLocalEQAmplitude] = useState(earthQuakeAmplitude);\r\n  const [localEQDuration, setLocalEQDuration] = useState(earthQuakeDuration);\r\n\r\n  useEffect(() => {\r\n    setLocalEQAmplitude(earthQuakeAmplitude);\r\n    setLocalEQRadius(earthQuakeRadius);\r\n    setLocalEQDuration(earthQuakeDuration);\r\n  }, [earthQuakeDuration, earthQuakeAmplitude, earthQuakeRadius]);\r\n  function newBirth(parents) {\r\n    const birthCacheTemp = birthCache.current;\r\n    const l = birthCacheTemp.length;\r\n\r\n    var canGiveBirth = true;\r\n    for (var i = 0; i < l; i++) {\r\n      if (\r\n        (birthCacheTemp[i].mother.localeCompare(parents.mother) === 0 ||\r\n          birthCacheTemp[i].mother.localeCompare(parents.father) === 0) &&\r\n        (birthCacheTemp[i].father.localeCompare(parents.mother) === 0 ||\r\n          birthCacheTemp[i].father.localeCompare(parents.father) === 0)\r\n      ) {\r\n        // console.log(\"BirthCache hit!\", parents, birthCacheTemp);\r\n        canGiveBirth = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\r\n      addNewCreature({ x: parents.x, y: parents.y });\r\n      birthCacheTemp.push({ ...parents });\r\n    }\r\n    if (birthCacheTemp.length > 100) {\r\n      birthCacheTemp.shift();\r\n    }\r\n    birthCache.current = birthCacheTemp;\r\n  }\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const birthHandler = (e) => {\r\n        if (e.detail) {\r\n          newBirth({\r\n            mother: e.detail.mother,\r\n            father: e.detail.candidates[0].id,\r\n            x:\r\n              Math.floor(\r\n                e.detail.position.x + e.detail.candidates[0].offsetLeft\r\n              ) / 2,\r\n            y:\r\n              Math.floor(\r\n                e.detail.position.y + e.detail.candidates[0].offsetTop\r\n              ) / 2,\r\n            positionM: e.detail.position,\r\n            positionF: {\r\n              x: e.detail.candidates[0].offsetLeft,\r\n              y: e.detail.candidates[0].offsetTop,\r\n            },\r\n          });\r\n        }\r\n      };\r\n      const deathHandler = (e) => {\r\n        if (e.detail) {\r\n          removeCreatureByUid(e.detail.uid);\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", birthHandler);\r\n      earthRef.current.addEventListener(\"death\", deathHandler);\r\n      return () => {\r\n        earthRef?.current?.removeEventListener(\"birth\", birthHandler);\r\n        earthRef?.current?.removeEventListener(\"death\", deathHandler);\r\n      };\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      birth: Date.now(),\r\n      x: props ? props.x : null,\r\n      y: props ? props.y : null,\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeCreatureByUid(uid) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    for (var i = 0; i < creaturesTemp.length; i++) {\r\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\r\n        creaturesTemp.splice(i, 1);\r\n        setCreatures([...creaturesTemp]);\r\n        creaturesRef.current = creaturesTemp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n\r\n  function makeEarthQuake(x, y) {\r\n    const event = new CustomEvent(\"earthQuake\", {\r\n      detail: { x, y },\r\n    });\r\n    earthRef?.current?.dispatchEvent(event);\r\n  }\r\n  useEffect(() => {\r\n    if (earthQuakePosition) {\r\n      const interval = setInterval(() => {\r\n        setEarthQuakePosition(null);\r\n      }, [earthQuakeDuration]);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [earthQuakePosition, earthQuakeDuration]);\r\n\r\n  function handleEarthMouseDown(e) {\r\n    e.preventDefault();\r\n    if (!mouseOnStats && !isStatsVisible) {\r\n      if (e.button === 0) {\r\n        makeEarthQuake(\r\n          e.clientX - earthDimensions.left,\r\n          e.clientY - earthDimensions.top\r\n        );\r\n        setEarthQuakePosition({\r\n          x: e.clientX - earthDimensions.left,\r\n          y: e.clientY - earthDimensions.top,\r\n        });\r\n        // addNewCreature({ color: \"#004CFF\" });\r\n      } else {\r\n        removeRandom();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{\r\n        backgroundColor: \"#222222\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n      }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      <EarthQuake\r\n        earthRef={earthRef}\r\n        earthQuakeDuration={localEQDuration}\r\n        earthQuakeAmplitude={localEQAmplitude}\r\n        earthQuakeRadius={localEQRadius}\r\n      ></EarthQuake>\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                birth={creature.birth}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n                x={creature.x}\r\n                y={creature.y}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          onMouseEnter={(e) => {\r\n            e.preventDefault();\r\n            setMouseOnStats(true);\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            e.preventDefault();\r\n            setMouseOnStats(false);\r\n          }}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          closeStats={() => {\r\n            setIsStatsVisible(false);\r\n            setMouseOnStats(false);\r\n          }}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}