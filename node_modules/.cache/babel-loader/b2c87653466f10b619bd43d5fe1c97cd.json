{"ast":null,"code":"import _toConsumableArray from\"E:/projects/Fun/genetic algorithm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/projects/Fun/genetic algorithm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createRef,useEffect,useRef,useState}from\"react\";import{Card}from\"react-bootstrap\";import{v4 as uuidv4}from\"uuid\";import Creature from\"./creature\";import IconButton from\"@material-ui/core/IconButton\";import DehazeIcon from\"@material-ui/icons/Dehaze\";import{useGlobalActions,useGlobalState}from\"../context/globalContext\";import Statisitcs from\"./statistics\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var demo=Array.from(Array(20).keys());var Earth=function Earth(){var _useGlobalState=useGlobalState(),status=_useGlobalState.status,restarted=_useGlobalState.restarted;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),creatures=_useState2[0],setCreatures=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),earthDimensions=_useState4[0],setEarthDimensions=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isStatsVisible=_useState6[0],setIsStatsVisible=_useState6[1];var earthRef=/*#__PURE__*/createRef();var creaturesRef=useRef([]);useEffect(function(){if(earthRef&&earthRef.current&&!earthDimensions){var handler=function handler(e){if(e.detail){e.detail.candidates.forEach(function(){addNewCreature({color:\"#FF0000\"});});}};earthRef.current.addEventListener(\"birth\",handler);return function(){var _earthRef$current;return earthRef===null||earthRef===void 0?void 0:(_earthRef$current=earthRef.current)===null||_earthRef$current===void 0?void 0:_earthRef$current.removeEventListener(\"birth\",handler);};}},[earthRef,earthRef.current]);function addNewCreature(props){var creaturesTemp=creaturesRef.current;creaturesTemp.push({uid:uuidv4(),color:(props===null||props===void 0?void 0:props.color)?props.color:\"#000000\"});setCreatures(_toConsumableArray(creaturesTemp));creaturesRef.current=creaturesTemp;}function removeRandom(){var creaturesTemp=creaturesRef.current;creaturesTemp.splice(Math.floor(Math.random()*creaturesRef.current.length),1);setCreatures(_toConsumableArray(creaturesTemp));creaturesRef.current=creaturesTemp;}function InitializeCreatures(){creaturesRef.current=[];for(var i=0;i<20;i++){addNewCreature({color:\"#111111\"});}}useEffect(function(){if(restarted){InitializeCreatures();}},[restarted]);useEffect(function(){if(earthRef&&earthRef.current&&!earthDimensions){setEarthDimensions({top:earthRef.current.offsetTop,left:earthRef.current.offsetLeft,w:earthRef.current.offsetWidth,h:earthRef.current.offsetHeight});}},[earthRef]);return/*#__PURE__*/_jsxs(\"div\",{ref:earthRef,style:{backgroundColor:\"#2C931D\",height:\"100%\",width:\"100%\"},onMouseDown:function onMouseDown(e){// console.log(onClick);\ne.preventDefault();if(e.button===0){addNewCreature({color:\"#004CFF\"});}else{removeRandom();}},children:[earthRef&&earthDimensions?creatures.map(function(creature){return/*#__PURE__*/_jsx(Creature,{color:creature.color,uid:creature.uid,earthRef:earthRef,dim:earthDimensions},creature.uid);}):null,isStatsVisible===false?/*#__PURE__*/_jsx(IconButton,{style:{position:\"absolute\",top:5,left:5},onClick:function onClick(e){e.preventDefault();setIsStatsVisible(true);},children:/*#__PURE__*/_jsx(DehazeIcon,{style:{color:\"white\"}})}):/*#__PURE__*/_jsx(Statisitcs,{setIsStatsVisible:setIsStatsVisible,style:{position:\"absolute\",top:5,left:5}})]});};export default Earth;","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","demo","Array","from","keys","Earth","status","restarted","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","setIsStatsVisible","earthRef","creaturesRef","current","handler","e","detail","candidates","forEach","addNewCreature","color","addEventListener","removeEventListener","props","creaturesTemp","push","uid","removeRandom","splice","Math","floor","random","length","InitializeCreatures","i","top","offsetTop","left","offsetLeft","w","offsetWidth","h","offsetHeight","backgroundColor","height","width","preventDefault","button","map","creature","position"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\n\r\nconst demo = Array.from(Array(20).keys());\r\n\r\nconst Earth = () => {\r\n  const { status, restarted } = useGlobalState();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const handler = (e) => {\r\n        if (e.detail) {\r\n          e.detail.candidates.forEach(() => {\r\n            addNewCreature({ color: \"#FF0000\" });\r\n          });\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", handler);\r\n      return () => earthRef?.current?.removeEventListener(\"birth\", handler);\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      color: props?.color ? props.color : \"#000000\",\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature({ color: \"#111111\" });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n  return (\r\n    <div\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#2C931D\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={(e) => {\r\n        // console.log(onClick);\r\n        e.preventDefault();\r\n        if (e.button === 0) {\r\n          addNewCreature({ color: \"#004CFF\" });\r\n        } else {\r\n          removeRandom();\r\n        }\r\n      }}\r\n    >\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                color={creature.color}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          setIsStatsVisible={setIsStatsVisible}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}