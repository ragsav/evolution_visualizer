{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\globalContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GlobalActionsContext = /*#__PURE__*/React.createContext(undefined);\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const chartDataOrg = useRef([]);\n  const [initialPopulation, setInitialPopulation] = useState(50);\n  const [chartData, setChartData] = useState([initialPopulation]);\n  const [status, setStatus] = useState(\"Paused\");\n  const [restarted, setRestart] = useState(true);\n  const [speed, setSpeed] = useState(0.5);\n  const [foodSpawnRate, setFoodSpawnRate] = useState(0.1);\n  const [totalPopulation, setTotalPopulation] = useState(50); // const [calamity, setCalamity] = useState(\"radiation\");\n\n  const [calamityType, setCalamityType] = useState(\"none\");\n  const [calamityPosition, setCalamityPosition] = useState(null);\n  const [calamityDuration, setCalamityDuration] = useState(10000);\n  const [calamitySize, setCalamitySize] = useState(100);\n  const [calamityAmplitude, setCalamityAmplitude] = useState(6);\n  const [calamities, setCalamities] = useState([]);\n  const calamitiesOrg = useRef([]);\n  const timerRef = useRef(0);\n  const [resourcePosition, setResourcePosition] = useState(null);\n  const [resourceType, setResourceType] = useState(\"none\");\n  const [resourceSize, setResourceSize] = useState(70);\n  const [resources, setResources] = useState([]);\n  const resourcesOrg = useRef([]);\n\n  function addResource() {\n    const uid = uuidv4();\n    const resource = {\n      id: uid,\n      type: resourceType,\n      position: resourcePosition,\n      size: resourceSize\n    };\n    const resourcesTemp = resourcesOrg.current;\n    resourcesTemp.push(resource);\n    resourcesOrg.current = resourcesTemp;\n    setResources([...resourcesTemp]);\n  }\n\n  function addCalamity() {\n    const uid = uuidv4();\n    const calamity = {\n      id: uid,\n      type: calamityType,\n      position: calamityPosition,\n      duration: calamityDuration,\n      amplitude: calamityAmplitude,\n      size: calamitySize,\n      start: Date.now()\n    };\n    const calamitiesTemp = calamitiesOrg.current;\n    calamitiesTemp.push(calamity);\n    calamitiesOrg.current = calamitiesTemp;\n    setCalamities([...calamitiesTemp]);\n    return uid;\n  }\n\n  function removeResourceById(id) {\n    const resourcesTemp = resourcesOrg.current;\n    const l = resourcesTemp.length;\n\n    for (var i = 0; i < l; i++) {\n      if (resourcesTemp[i].id.localeCompare(id) === 0) {\n        resourcesTemp.splice(i, 1);\n        break;\n      }\n    }\n\n    resourcesOrg.current = resourcesTemp;\n\n    if (resourcesTemp.length === 0) {\n      setResourcePosition(null);\n    }\n\n    setResources([...resourcesTemp]);\n  }\n\n  function removeCalamityById(id) {\n    const calamitiesTemp = calamitiesOrg.current;\n    const l = calamitiesTemp.length;\n\n    for (var i = 0; i < l; i++) {\n      if (calamitiesTemp[i].id.localeCompare(id) === 0) {\n        calamitiesTemp.splice(i, 1);\n        break;\n      }\n    }\n\n    calamitiesOrg.current = calamitiesTemp;\n\n    if (calamitiesTemp.length === 0) {\n      setCalamityPosition(null);\n    }\n\n    setCalamities([...calamitiesTemp]);\n  }\n\n  useEffect(() => {\n    if (resourcesOrg.current.length < 5 && resourcePosition) {\n      addResource();\n    }\n  }, [resourcePosition]);\n  useEffect(() => {\n    if (calamitiesOrg.current.length < 5 && calamityPosition) {\n      const newUid = addCalamity();\n      const interval = setInterval(() => {\n        removeCalamityById(newUid);\n      }, [calamityDuration]);\n\n      if (calamitiesOrg.current.length === 0) {\n        return () => {\n          clearInterval(interval);\n        };\n      }\n    }\n  }, [calamityPosition]);\n  useEffect(() => {\n    chartDataOrg.current.push(totalPopulation); // timerRef.current  +=  1;\n    // setChartData(chartDataOrg.current);\n  }, [totalPopulation]);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      initialPopulation,\n      status,\n      speed,\n      restarted,\n      totalPopulation,\n      calamityType,\n      calamityAmplitude,\n      calamityDuration,\n      calamityPosition,\n      calamitySize,\n      calamities,\n      resourcePosition,\n      resources,\n      resourceType,\n      resourceSize,\n      chartData,\n      foodSpawnRate\n    },\n    children: /*#__PURE__*/_jsxDEV(GlobalActionsContext.Provider, {\n      value: {\n        setInitialPopulation,\n        setStatus,\n        setSpeed,\n        setRestart,\n        setTotalPopulation,\n        setCalamityType,\n        setCalamityAmplitude,\n        setCalamityDuration,\n        setCalamityPosition,\n        setCalamitySize,\n        removeResourceById,\n        setResourcePosition,\n        setResourceType,\n        setResourceSize,\n        setFoodSpawnRate\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"GEwXPI0z3Ji7TlktGYWfg77OxoM=\");\n\n_c = GlobalContextProvider;\n\nconst useGlobalState = () => {\n  _s2();\n\n  const context = React.useContext(GlobalStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalState error\");\n  }\n\n  return context;\n};\n\n_s2(useGlobalState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useGlobalActions = () => {\n  _s3();\n\n  const context = React.useContext(GlobalActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalActions error\");\n  }\n\n  return context;\n};\n\n_s3(useGlobalActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/globalContext.js"],"names":["React","createRef","useEffect","useState","useRef","v4","uuidv4","GlobalStateContext","createContext","undefined","GlobalActionsContext","GlobalContextProvider","children","chartDataOrg","initialPopulation","setInitialPopulation","chartData","setChartData","status","setStatus","restarted","setRestart","speed","setSpeed","foodSpawnRate","setFoodSpawnRate","totalPopulation","setTotalPopulation","calamityType","setCalamityType","calamityPosition","setCalamityPosition","calamityDuration","setCalamityDuration","calamitySize","setCalamitySize","calamityAmplitude","setCalamityAmplitude","calamities","setCalamities","calamitiesOrg","timerRef","resourcePosition","setResourcePosition","resourceType","setResourceType","resourceSize","setResourceSize","resources","setResources","resourcesOrg","addResource","uid","resource","id","type","position","size","resourcesTemp","current","push","addCalamity","calamity","duration","amplitude","start","Date","now","calamitiesTemp","removeResourceById","l","length","i","localeCompare","splice","removeCalamityById","newUid","interval","setInterval","clearInterval","useGlobalState","context","useContext","Error","useGlobalActions"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst GlobalStateContext = React.createContext(undefined);\r\nconst GlobalActionsContext = React.createContext(undefined);\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const chartDataOrg = useRef([]);\r\n  const [initialPopulation, setInitialPopulation] = useState(50);\r\n  const [chartData, setChartData] = useState([initialPopulation]);\r\n  \r\n  const [status, setStatus] = useState(\"Paused\");\r\n  const [restarted, setRestart] = useState(true);\r\n  const [speed, setSpeed] = useState(0.5);\r\n  const [foodSpawnRate, setFoodSpawnRate] = useState(0.1);\r\n  const [totalPopulation, setTotalPopulation] = useState(50);\r\n  // const [calamity, setCalamity] = useState(\"radiation\");\r\n\r\n  const [calamityType, setCalamityType] = useState(\"none\");\r\n  const [calamityPosition, setCalamityPosition] = useState(null);\r\n  const [calamityDuration, setCalamityDuration] = useState(10000);\r\n  const [calamitySize, setCalamitySize] = useState(100);\r\n  const [calamityAmplitude, setCalamityAmplitude] = useState(6);\r\n  const [calamities, setCalamities] = useState([]);\r\n\r\n  const calamitiesOrg = useRef([]);\r\n  const timerRef = useRef(0);\r\n\r\n\r\n\r\n\r\n  \r\n  const [resourcePosition, setResourcePosition] = useState(null);\r\n  const [resourceType,setResourceType] = useState(\"none\");\r\n  const [resourceSize,setResourceSize] = useState(70);\r\n  const [resources, setResources] = useState([]);\r\n  const resourcesOrg = useRef([]);\r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n  function addResource() {\r\n    const uid = uuidv4();\r\n    const resource = {\r\n      id: uid,\r\n      type:resourceType,\r\n      position: resourcePosition,\r\n      size:resourceSize\r\n    };\r\n\r\n    const resourcesTemp = resourcesOrg.current;\r\n    resourcesTemp.push(resource);\r\n    resourcesOrg.current = resourcesTemp;\r\n    setResources([...resourcesTemp]);\r\n  }\r\n\r\n  function addCalamity()  {\r\n    const uid = uuidv4();\r\n    const calamity = {\r\n      id:uid,\r\n      type: calamityType,\r\n      position: calamityPosition,\r\n      duration: calamityDuration,\r\n      amplitude: calamityAmplitude,\r\n      size: calamitySize,\r\n      start:Date.now()\r\n    };\r\n\r\n    const calamitiesTemp = calamitiesOrg.current;\r\n    calamitiesTemp.push(calamity);\r\n    calamitiesOrg.current = calamitiesTemp;\r\n    setCalamities([...calamitiesTemp]);\r\n    return uid;\r\n  }\r\n\r\n  function removeResourceById(id){\r\n    const resourcesTemp = resourcesOrg.current;\r\n    const l = resourcesTemp.length;\r\n    for (var i = 0; i < l; i++) {\r\n      if (resourcesTemp[i].id.localeCompare(id) === 0) {\r\n        resourcesTemp.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    resourcesOrg.current = resourcesTemp;\r\n    if (resourcesTemp.length === 0) {\r\n      setResourcePosition(null);\r\n    }\r\n    setResources([...resourcesTemp]);\r\n  }\r\n\r\n  function removeCalamityById(id){\r\n    const calamitiesTemp = calamitiesOrg.current\r\n    const l = calamitiesTemp.length;\r\n    for(var i=0;i<l;i++){\r\n      if(calamitiesTemp[i].id.localeCompare(id)===0){\r\n        calamitiesTemp.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    calamitiesOrg.current = calamitiesTemp;\r\n    if(calamitiesTemp.length===0){\r\n      setCalamityPosition(null);\r\n    }\r\n    setCalamities([...calamitiesTemp]);\r\n    \r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (resourcesOrg.current.length < 5 && resourcePosition) {\r\n      addResource();\r\n    }\r\n  }, [resourcePosition]);\r\n\r\n  useEffect(() => {\r\n    if (calamitiesOrg.current.length < 5 && calamityPosition) {\r\n      const newUid = addCalamity();\r\n\r\n      const interval = setInterval(() => {\r\n        removeCalamityById(newUid);\r\n      }, [calamityDuration]);\r\n      if (calamitiesOrg.current.length === 0) {\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n      }\r\n    }\r\n  }, [calamityPosition]);\r\n\r\n  useEffect(() => {\r\n    chartDataOrg.current.push(totalPopulation);\r\n    // timerRef.current  +=  1;\r\n    // setChartData(chartDataOrg.current);\r\n    \r\n  }, [totalPopulation]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <GlobalStateContext.Provider\r\n      value={{\r\n        initialPopulation,\r\n        status,\r\n        speed,\r\n        restarted,\r\n        totalPopulation,\r\n        calamityType,\r\n        calamityAmplitude,\r\n        calamityDuration,\r\n        calamityPosition,\r\n        calamitySize,\r\n        calamities,\r\n        resourcePosition,\r\n        resources,\r\n        resourceType,\r\n        resourceSize,\r\n        chartData,\r\n        foodSpawnRate,\r\n      }}\r\n    >\r\n      <GlobalActionsContext.Provider\r\n        value={{\r\n          setInitialPopulation,\r\n          setStatus,\r\n          setSpeed,\r\n          setRestart,\r\n          setTotalPopulation,\r\n          setCalamityType,\r\n          setCalamityAmplitude,\r\n          setCalamityDuration,\r\n          setCalamityPosition,\r\n          setCalamitySize,\r\n          removeResourceById,\r\n          setResourcePosition,\r\n          setResourceType,\r\n          setResourceSize,\r\n          setFoodSpawnRate,\r\n        }}\r\n      >\r\n        {children}\r\n      </GlobalActionsContext.Provider>\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalState = () => {\r\n  const context = React.useContext(GlobalStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useGlobalState error\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nconst useGlobalActions = () => {\r\n  const context = React.useContext(GlobalActionsContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useGlobalActions error\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}