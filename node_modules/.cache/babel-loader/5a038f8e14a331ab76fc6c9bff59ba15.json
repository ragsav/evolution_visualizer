{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport EarthQuake from \"./earthQuake\";\nimport Volcano from \"./volcana\";\nimport Radiation from \"./radiation\";\nimport WaterBody from \"./waterBody\"; // const demo = Array.from(Array(100).keys());\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isStringEqual = (a, b) => {\n  if (a.localeCompare(b) === 0) return true;\n  return false;\n};\n\nconst isPairEqual = (a1, a2, b1, b2) => {\n  if ((a1.localeCompare(b1) === 0 || a1.localeCompare(b2) === 0) && (a2.localeCompare(b1) === 0 || a2.localeCompare(b2) === 0)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst Earth = () => {\n  _s();\n\n  const {\n    restarted,\n    calamityType,\n    calamities,\n    waterBodies\n  } = useGlobalState();\n  const {\n    setCalamityPosition,\n    setWaterBodyPosition\n  } = useGlobalActions();\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  const birthCache = useRef([]); //initial population of creatures\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature();\n    }\n  } //add new creature to creaturesRef\n\n\n  function addNewCreature(props) {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      birth: Date.now(),\n      x: props ? props.x : null,\n      y: props ? props.y : null\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  } //remove creature by id from creatureRef\n\n\n  function removeCreatureByUid(uid) {\n    const creaturesTemp = creaturesRef.current;\n\n    for (var i = 0; i < creaturesTemp.length; i++) {\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\n        creaturesTemp.splice(i, 1);\n        setCreatures([...creaturesTemp]);\n        creaturesRef.current = creaturesTemp;\n        break;\n      }\n    }\n  } //remove random creature\n\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  } //handle new births wheather the parents have mate recently or not\n\n\n  function newBirth({\n    mother,\n    father\n  }) {\n    const birthCacheTemp = birthCache.current;\n    const l = birthCacheTemp.length;\n    var canGiveBirth = true;\n\n    for (var i = 0; i < l; i++) {\n      if (isPairEqual(birthCacheTemp[i].mother, birthCacheTemp[i].father, mother.id, father.id)) {\n        canGiveBirth = false;\n        break;\n      }\n    }\n\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\n      addNewCreature({\n        x: (mother.position.x + father.position.x) / 2,\n        y: (mother.position.y + father.position.y) / 2,\n        size: (mother.size + father.size) / 2\n      });\n      birthCacheTemp.push({ ...parents\n      });\n    }\n\n    if (birthCacheTemp.length > 100) {\n      birthCacheTemp.shift();\n    }\n\n    birthCache.current = birthCacheTemp;\n  } //handle mouse events of earth\n\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n    console.log(e);\n\n    if (e.button === 0) {\n      if (calamityType.localeCompare(\"none\") !== 0 && calamities.length < 5) {\n        setCalamityPosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        });\n      } else {\n        setWaterBodyPosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        });\n      }\n    } else {\n      removeRandom();\n    }\n  } //set dimensions of earth when reference is available\n\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n\n    console.log(earthDimensions);\n  }, [earthRef]); //restart effect\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]); //add birth and death event handlers when earth reference is available\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      console.log({\n        a: earthRef.current\n      });\n\n      const birthHandler = e => {\n        if (e.detail) {\n          newBirth({\n            mother: e.detail.mother,\n            father: e.detail.father\n          });\n        }\n      };\n\n      const deathHandler = e => {\n        if (e.detail) {\n          removeCreatureByUid(e.detail.uid);\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", birthHandler);\n      earthRef.current.addEventListener(\"death\", deathHandler);\n      return () => {\n        var _earthRef$current, _earthRef$current2;\n\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", birthHandler);\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.removeEventListener(\"death\", deathHandler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: window.innerWidth - 300,\n      overflow: \"hidden\",\n      position: \"relative\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [waterBodies ? waterBodies.map(waterBody => {\n      return /*#__PURE__*/_jsxDEV(WaterBody, {\n        uid: waterBody.id,\n        size: waterBody.size,\n        position: waterBody.position\n      }, `${waterBody.id}+calamity`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }, this);\n    }) : null, calamities ? calamities.map(calamity => {\n      if (calamity.type.localeCompare(\"earthQuake\") === 0) {\n        return /*#__PURE__*/_jsxDEV(EarthQuake, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this);\n      } else if (calamity.type.localeCompare(\"volcano\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Volcano, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this);\n      } else if (calamity.type.localeCompare(\"radiation\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Radiation, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this);\n      }\n    }) : null, earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        birth: creature.birth,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions,\n        x: creature.x,\n        y: creature.y\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"qisZrd9nwIQ+zdFWbfczJVffZhk=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","EarthQuake","Volcano","Radiation","WaterBody","isStringEqual","a","b","localeCompare","isPairEqual","a1","a2","b1","b2","Earth","restarted","calamityType","calamities","waterBodies","setCalamityPosition","setWaterBodyPosition","creatures","setCreatures","earthDimensions","setEarthDimensions","earthRef","creaturesRef","birthCache","InitializeCreatures","current","i","addNewCreature","props","creaturesTemp","push","uid","birth","Date","now","x","y","removeCreatureByUid","length","splice","removeRandom","Math","floor","random","newBirth","mother","father","birthCacheTemp","l","canGiveBirth","id","position","size","parents","shift","handleEarthMouseDown","e","preventDefault","console","log","button","clientX","left","clientY","top","offsetTop","offsetLeft","w","offsetWidth","h","offsetHeight","birthHandler","detail","deathHandler","addEventListener","removeEventListener","backgroundColor","height","width","window","innerWidth","overflow","map","waterBody","calamity","type","amplitude","duration","creature"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport EarthQuake from \"./earthQuake\";\r\nimport Volcano from \"./volcana\";\r\nimport Radiation from \"./radiation\";\r\nimport WaterBody from \"./waterBody\";\r\n\r\n// const demo = Array.from(Array(100).keys());\r\n\r\n\r\nconst isStringEqual = (a,b) => {\r\n  if(a.localeCompare(b)===0)return true;\r\n  return false;\r\n}\r\n\r\n\r\nconst isPairEqual = (a1, a2, b1, b2) => {\r\n  if (\r\n    (a1.localeCompare(b1) === 0 || a1.localeCompare(b2) === 0) &&\r\n    (a2.localeCompare(b1) === 0 || a2.localeCompare(b2) === 0)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst Earth = () => {\r\n  const { restarted, calamityType, calamities, waterBodies } = useGlobalState();\r\n  const { setCalamityPosition, setWaterBodyPosition } = useGlobalActions();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n  const birthCache = useRef([]);\r\n\r\n\r\n  //initial population of creatures\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature();\r\n    }\r\n  }\r\n\r\n  //add new creature to creaturesRef\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      birth: Date.now(),\r\n      x: props ? props.x : null,\r\n      y: props ? props.y : null,\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  //remove creature by id from creatureRef\r\n  function removeCreatureByUid(uid) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    for (var i = 0; i < creaturesTemp.length; i++) {\r\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\r\n        creaturesTemp.splice(i, 1);\r\n        setCreatures([...creaturesTemp]);\r\n        creaturesRef.current = creaturesTemp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //remove random creature\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  //handle new births wheather the parents have mate recently or not\r\n  function newBirth({mother,father}) {\r\n    const birthCacheTemp = birthCache.current;\r\n    const l = birthCacheTemp.length;\r\n\r\n    var canGiveBirth = true;\r\n    for (var i = 0; i < l; i++) {\r\n      if (\r\n        isPairEqual(\r\n          birthCacheTemp[i].mother,\r\n          birthCacheTemp[i].father,\r\n          mother.id,\r\n          father.id\r\n        )\r\n      ) {\r\n        canGiveBirth = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\r\n      addNewCreature({\r\n        x: (mother.position.x + father.position.x) / 2,\r\n        y: (mother.position.y + father.position.y) / 2,\r\n        size:(mother.size+father.size)/2\r\n      });\r\n      birthCacheTemp.push({ ...parents });\r\n    }\r\n    if (birthCacheTemp.length > 100) {\r\n      birthCacheTemp.shift();\r\n    }\r\n    birthCache.current = birthCacheTemp;\r\n  }\r\n\r\n  //handle mouse events of earth\r\n  function handleEarthMouseDown(e) {\r\n    e.preventDefault();\r\n\r\n    console.log(e);\r\n    if (e.button === 0) {\r\n      if (calamityType.localeCompare(\"none\") !== 0 && calamities.length < 5) {\r\n        setCalamityPosition({\r\n          x: e.clientX - earthDimensions.left,\r\n          y: e.clientY - earthDimensions.top,\r\n        });\r\n      } else {\r\n        setWaterBodyPosition({\r\n          x: e.clientX - earthDimensions.left,\r\n          y: e.clientY - earthDimensions.top,\r\n        });\r\n      }\r\n    } else {\r\n      removeRandom();\r\n    }\r\n  }\r\n\r\n\r\n  //set dimensions of earth when reference is available\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n    console.log(earthDimensions);\r\n  }, [earthRef]);\r\n\r\n\r\n  //restart effect\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n\r\n\r\n  //add birth and death event handlers when earth reference is available\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      console.log({ a: earthRef.current });\r\n      const birthHandler = (e) => {\r\n        if (e.detail) {\r\n          newBirth({\r\n            mother: e.detail.mother,\r\n            father: e.detail.father\r\n          });\r\n        }\r\n      };\r\n      const deathHandler = (e) => {\r\n        if (e.detail) {\r\n          removeCreatureByUid(e.detail.uid);\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", birthHandler);\r\n      earthRef.current.addEventListener(\"death\", deathHandler);\r\n      return () => {\r\n        earthRef?.current?.removeEventListener(\"birth\", birthHandler);\r\n        earthRef?.current?.removeEventListener(\"death\", deathHandler);\r\n      };\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{\r\n        backgroundColor: \"#222222\",\r\n        height: \"100%\",\r\n        width: window.innerWidth - 300,\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      {waterBodies\r\n        ? waterBodies.map((waterBody) => {\r\n            return (\r\n              <WaterBody\r\n                key={`${waterBody.id}+calamity`}\r\n                uid={waterBody.id}\r\n                size={waterBody.size}\r\n                position={waterBody.position}\r\n              ></WaterBody>\r\n            );\r\n          })\r\n        : null}\r\n      {calamities\r\n        ? calamities.map((calamity) => {\r\n            if (calamity.type.localeCompare(\"earthQuake\") === 0) {\r\n              return (\r\n                <EarthQuake\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            } else if (calamity.type.localeCompare(\"volcano\") === 0) {\r\n              return (\r\n                <Volcano\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            } else if (calamity.type.localeCompare(\"radiation\") === 0) {\r\n              return (\r\n                <Radiation\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        : null}\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                birth={creature.birth}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n                x={creature.x}\r\n                y={creature.y}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}