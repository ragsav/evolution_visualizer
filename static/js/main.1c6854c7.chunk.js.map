{"version":3,"sources":["logo.svg","context/globalContext.js","components/creature.js","components/statistics.js","components/screen.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStateContext","React","createContext","undefined","GlobalActionsContext","GlobalContextProvider","children","useState","status","setStatus","restarted","setRestart","speed","setSpeed","Provider","value","useGlobalState","context","useContext","Error","Creature","props","creatureRef","useRef","color","setColor","x","Math","floor","dim","w","random","left","size","y","h","top","position","setPosition","useEffect","localeCompare","interval","setInterval","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","changePosition","neighbours","current","parentNode","childNodes","Object","keys","forEach","key","nodeName","abs","offsetLeft","offsetTop","id","uid","push","getNeighbourHood","length","event","CustomEvent","detail","mother","candidates","earthRef","dispatchEvent","clearInterval","ref","style","borderRadius","height","width","backgroundColor","transition","ValueLabelComponent","open","Tooltip","enterTouchDelay","placement","title","Statisitcs","useGlobalActions","Card","padding","margin","zIndex","border","ModalHeader","Row","Col","textAlign","fontSize","fontWeight","display","alignItems","justifyContent","IconButton","variant","boxShadow","onClick","e","preventDefault","setIsStatsVisible","ButtonGroup","Button","disabled","Divider","Grid","container","spacing","item","xs","Slider","v","Earth","Array","from","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","createRef","creaturesRef","addNewCreature","creaturesTemp","uuidv4","handler","addEventListener","removeEventListener","i","InitializeCreatures","offsetWidth","offsetHeight","onMouseDown","button","splice","removeRandom","map","creature","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c6854c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createRef, useEffect, useState ,useRef} from \"react\";\r\n\r\n\r\n\r\nconst GlobalStateContext = React.createContext(undefined);\r\nconst GlobalActionsContext = React.createContext(undefined);\r\n\r\n\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  \r\n\r\n  const [status,setStatus] = useState(\"Paused\")\r\n  const [restarted, setRestart] = useState(true);\r\n  const [speed,setSpeed] = useState(1);\r\n\r\n  return (\r\n    <GlobalStateContext.Provider\r\n      value={{\r\n        status,\r\n        speed,\r\n        restarted\r\n      }}\r\n      \r\n    >\r\n      <GlobalActionsContext.Provider value={{ setStatus ,setSpeed,setRestart}}>\r\n        {children}\r\n      </GlobalActionsContext.Provider>\r\n    </GlobalStateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalState = () => {\r\n  const context = React.useContext(GlobalStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useGlobalState error\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nconst useGlobalActions = () => {\r\n  const context = React.useContext(GlobalActionsContext);\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      \"useGlobalActions error\"\r\n    );\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\r\n","import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nconst Creature = (props) => {\r\n  const { status, speed } = useGlobalState();\r\n  //   console.log(earthDimensions);\r\n  const creatureRef = useRef(null);\r\n  const size = 6;\r\n  const [color, setColor] = useState(props.color ? props.color : \"#0000000\");\r\n  const [position, setPosition] = useState({\r\n    x: Math.floor(props.dim.w * Math.random() + props.dim.left - size / 2),\r\n    y: Math.floor(props.dim.h * Math.random() + props.dim.top - size / 2),\r\n  });\r\n\r\n  function changePosition() {\r\n    const pos = [1, -1];\r\n    const skipX = Math.floor(Math.random() * 20);\r\n    const skipY = Math.floor(Math.random() * 20);\r\n\r\n    const plusMinusX = Math.floor(Math.random() * 2);\r\n    const plusMinusY = Math.floor(Math.random() * 2);\r\n\r\n    const newPosition = {\r\n      x: position.x + pos[plusMinusX] * skipX,\r\n      y: position.y + pos[plusMinusY] * skipY,\r\n    };\r\n\r\n    if (newPosition.x + size > props.dim.w + props.dim.left) {\r\n      newPosition.x = props.dim.w + props.dim.left - size;\r\n    }\r\n    if (newPosition.y + size > props.dim.h + props.dim.top) {\r\n      newPosition.y = props.dim.h + props.dim.top - size;\r\n    }\r\n    if (newPosition.x < props.dim.left) {\r\n      newPosition.x = props.dim.left;\r\n    }\r\n    if (newPosition.y < props.dim.top) {\r\n      newPosition.y = props.dim.top;\r\n    }\r\n\r\n    setPosition(newPosition);\r\n  }\r\n\r\n  function getNeighbourHood() {\r\n    const neighbours = [];\r\n    if (creatureRef?.current) {\r\n      const children = creatureRef.current?.parentNode?.childNodes;\r\n      if (children) {\r\n        Object.keys(children).forEach((key) => {\r\n          if (\r\n            children[key]?.nodeName === \"DIV\" &&\r\n            Math.abs(children[key].offsetLeft - position.x) < 10 &&\r\n            Math.abs(children[key].offsetTop - position.y) < 10 &&\r\n            children[key].id.localeCompare(props.uid) !== 0\r\n          ) {\r\n            neighbours.push(children[key]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return { neighbours };\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(props.uid);\r\n    if (status.localeCompare(\"Playing\") === 0) {\r\n      const interval = setInterval(() => {\r\n        changePosition();\r\n        setColor(\"#000000\");\r\n        const { neighbours } = getNeighbourHood();\r\n        if (neighbours.length > 0) {\r\n          const event = new CustomEvent(\"birth\", {\r\n            detail: { mother: props.uid, candidates: neighbours },\r\n          });\r\n          props.earthRef?.current?.dispatchEvent(event);\r\n        }\r\n      }, Math.floor((Math.random() * 5000) / speed) + 10);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [position, status, speed]);\r\n  return (\r\n    <div\r\n      ref={creatureRef}\r\n      id={props.uid}\r\n      style={{\r\n        borderRadius: size / 2,\r\n        height: size,\r\n        width: size,\r\n        backgroundColor: props.color,\r\n        position: \"absolute\",\r\n        top: position.y,\r\n        left: position.x,\r\n        transition: \"all 0.5s ease-in-out\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Creature;\r\n","import { Row, Card, Col, ButtonGroup } from \"react-bootstrap\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import Cross from \"@material-ui/icons/Dehaze\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst Statisitcs = (props) => {\r\n  const { setStatus, setSpeed, setRestart } = useGlobalActions();\r\n  const { status, speed ,restarted} = useGlobalState();\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        padding: 0,\r\n        margin: 4,\r\n        top: 4,\r\n        left: 4,\r\n        width: 300,\r\n        zIndex: 10,\r\n        border: \"none\",\r\n        borderRadius: 2,\r\n      }}\r\n    >\r\n      <ModalHeader style={{ padding: 0, margin: 0 }}>\r\n        <Row style={{ padding: 4, margin: 0, width: \"100%\" }}>\r\n          <Col\r\n            style={{\r\n              padding: 2,\r\n              margin: 0,\r\n              textAlign: \"start\",\r\n              fontSize: 14,\r\n              fontWeight: \"500\",\r\n            }}\r\n          >\r\n            Statisitcs\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              padding: 2,\r\n              margin: 0,\r\n              display:\"flex\",\r\n              alignItems:\"center\",\r\n              justifyContent:\"flex-end\"\r\n            }}\r\n          >\r\n            <IconButton\r\n              variant=\"outline-dark\"\r\n              style={{\r\n                padding: 2,\r\n                boxShadow: \"none\",\r\n                fontWeight: \"400\",\r\n                \r\n                fontSize: 10,\r\n              }}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                props.setIsStatsVisible(false);\r\n              }}\r\n            >\r\n                <ClearIcon style={{fontSize:14}}></ClearIcon>\r\n            </IconButton>\r\n          </Col>\r\n        </Row>\r\n      </ModalHeader>\r\n      <Row style={{ margin: 0, padding: 4 }}>\r\n        <ButtonGroup>\r\n          <Button\r\n            variant=\"dark\"\r\n            style={{\r\n              padding: \"2px 8px 2px 8px\",\r\n              boxShadow: \"none\",\r\n              fontSize: 12,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setRestart(false);\r\n              status.localeCompare(\"Playing\") === 0\r\n                ? setStatus(\"Paused\")\r\n                : setStatus(\"Playing\");\r\n            }}\r\n          >\r\n            {status.localeCompare(\"Playing\") === 0 ? \"Pause\" : \"Play\"}\r\n          </Button>\r\n          <Button\r\n            //   disabled={status.localeCompare(\"Finished\") === 0}\r\n            disabled={restarted}\r\n            variant=\"dark\"\r\n            style={{\r\n              padding: \"2px 8px 2px 8px\",\r\n              boxShadow: \"none\",\r\n\r\n              fontSize: 12,\r\n            }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setStatus(\"Paused\");\r\n              setRestart(true);\r\n              \r\n              \r\n            }}\r\n          >\r\n            Stop\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Row style={{ margin: 0, padding: 4 }}>\r\n        <Grid container spacing={2} style={{ padding: 0, margin: 0 }}>\r\n          <Grid\r\n            item\r\n            style={{ padding: 4, margin: 0, fontSize: 12, fontWeight: \"500\" }}\r\n          >\r\n            Speed\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs\r\n            style={{ padding: \"4px 16px 4px 16px\", margin: 0, fontSize: 10, fontWeight: \"500\" }}\r\n          >\r\n            <Slider\r\n              style={{ boxShadow: \"none\" }}\r\n              style={{ padding: 0 }}\r\n              ValueLabelComponent={ValueLabelComponent}\r\n              value={speed}\r\n              min={1}\r\n              max={100}\r\n              onChange={(e, v) => {\r\n                e.preventDefault();\r\n                setSpeed(v);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Row>\r\n      <Divider></Divider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Statisitcs;\r\n","import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\n\r\nconst demo = Array.from(Array(20).keys());\r\n\r\nconst Earth = () => {\r\n  const { status, restarted } = useGlobalState();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const handler = (e) => {\r\n        if (e.detail) {\r\n          e.detail.candidates.forEach(() => {\r\n            addNewCreature({ color: \"#FF0000\" });\r\n          });\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", handler);\r\n      return () => earthRef?.current?.removeEventListener(\"birth\", handler);\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      color: props?.color ? props.color : \"#000000\",\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature({ color: \"#111111\" });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n  return (\r\n    <div\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#2C931D\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={(e) => {\r\n        // console.log(onClick);\r\n        e.preventDefault();\r\n        if (e.button === 0) {\r\n          addNewCreature({ color: \"#004CFF\" });\r\n        } else {\r\n          removeRandom();\r\n        }\r\n      }}\r\n    >\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                color={creature.color}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          setIsStatsVisible={setIsStatsVisible}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Screen from './components/screen';\r\nimport { GlobalContextProvider } from './context/globalContext';\r\nimport Earth from \"./components/screen\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalContextProvider>\r\n        <Earth></Earth>\r\n      </GlobalContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}