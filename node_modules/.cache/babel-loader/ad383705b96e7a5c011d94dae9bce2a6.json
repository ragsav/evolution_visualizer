{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Node from \"./node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Screen = () => {\n  _s();\n\n  // const {ground} = useGlobalState();\n  const [trueRef, setTrueRef] = useState(null);\n  const screenRef = useRef(null);\n  useEffect(() => {\n    if (screenRef) {\n      if (screenRef.current) {\n        setTrueRef(screenRef.current);\n      }\n    }\n  }, [screenRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#1E1E1E\"\n    },\n    ref: screenRef,\n    children: trueRef ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Node, {\n        uid: 1,\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: 1\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {}, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Screen, \"8GGVdTneNwk3m6XWm9MR+4tzWYs=\");\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","useGlobalActions","useGlobalState","Node","Screen","trueRef","setTrueRef","screenRef","current","height","width","backgroundColor","l","offsetLeft","t","offsetTop","w","clientWidth","h","clientHeight"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Node from \"./node\";\r\n\r\nconst Screen = ()=>{\r\n\r\n    \r\n    // const {ground} = useGlobalState();\r\n    const [trueRef,setTrueRef] = useState(null);\r\n    const screenRef = useRef(null);\r\n    \r\n  \r\n    \r\n\r\n\r\n\r\n\r\n    \r\n    \r\n\r\n   \r\n    \r\n    useEffect(()=>{\r\n        if(screenRef){\r\n            if(screenRef.current){\r\n                setTrueRef(screenRef.current);\r\n            }\r\n        }\r\n    },[screenRef])\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n      <div\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#1E1E1E\" }}\r\n        ref={screenRef}\r\n      >\r\n        {trueRef ? (\r\n          <div>\r\n            <Node\r\n              uid={1}\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1} id={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n            <Node\r\n              key={\"1\"}\r\n              bounds={{\r\n                l: screenRef.current.offsetLeft,\r\n                t: screenRef.current.offsetTop,\r\n                w: screenRef.current.clientWidth,\r\n                h: screenRef.current.clientHeight,\r\n              }}\r\n            >\r\n              <span key={1}></span>\r\n            </Node>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}