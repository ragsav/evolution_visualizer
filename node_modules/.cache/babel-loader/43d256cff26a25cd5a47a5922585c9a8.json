{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\experiments\\\\earth.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Vector } from \"./vector\";\nimport { Creature } from \"./creature\";\nimport { Wall } from \"./wall\";\nimport { useGlobalState, useGlobalActions } from \"../../context/globalContext\";\nimport { Food } from \"./food\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isPairEqual = (a1, b1, a2, b2) => {\n  // console.log(a1,b1,a2,b2);\n  if ((a1.localeCompare(a2) === 0 || a1.localeCompare(b2) === 0) && (b1.localeCompare(a2) === 0 || b1.localeCompare(b2) === 0)) {\n    return true;\n  }\n\n  return false;\n};\n\nfunction randInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction clearCanvas(ctx, canvasRef) {\n  var _canvasRef$current, _canvasRef$current2;\n\n  ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef === null || canvasRef === void 0 ? void 0 : (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.clientWidth, canvasRef === null || canvasRef === void 0 ? void 0 : (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.clientHeight);\n}\n\nfunction initPopulation(n, creatures) {\n  creatures.current = [];\n\n  for (let i = 0; i < n; i++) {\n    let newBall = new Creature(randInt(10, window.innerWidth - 300 - 10), randInt(10, window.innerHeight - 10), 2, Math.random() > 0.5 ? \"F\" : \"M\", creatures);\n  } //   console.log(creatures);\n\n}\n\nfunction makeInitialFood(foods) {\n  foods.current = [];\n\n  for (let i = 0; i < 50; i++) {\n    const food = new Food(randInt(10, window.innerWidth - 300 - 10), randInt(10, window.innerHeight - 10), foods);\n  }\n}\n\nfunction addRandomNumberOfFood(foods) {\n  if (Math.random() > 0.8) {\n    const food = new Food(randInt(10, window.innerWidth - 300 - 10), randInt(10, window.innerHeight - 10), foods);\n  }\n}\n\nfunction matingPoolWithCacheImplementation(creatures, birthCache) {\n  const vis = Array(creatures.current.length).fill(false);\n  const pairs = [];\n  const l = creatures.current.length; // var pairs = 0;\n\n  for (let i = 0; i < l; i++) {\n    const observer = creatures.current[i];\n\n    if (!vis[i] && observer.gender == \"F\" && observer.isAdult) {\n      vis[i] = true;\n\n      for (let j = i + 1; j < l; j++) {\n        const target = creatures.current[j];\n\n        if (!vis[j] && target.gender == \"M\" && target.isAdult && observer.pos.subtr(target.pos).mag() < 5) {\n          pairs.push({\n            mother: observer,\n            father: target\n          });\n          vis[j] = true;\n          break;\n        }\n      }\n    }\n  }\n\n  pairs.forEach(({\n    mother,\n    father\n  }) => {\n    let canMate = true;\n\n    for (let i = 0; i < birthCache.current.length; i++) {\n      const {\n        cacheMother,\n        cacheFather\n      } = birthCache.current[i];\n\n      if (isPairEqual(mother.id, father.id, cacheMother.id, cacheFather.id)) {\n        canMate = false;\n        break;\n      }\n    }\n\n    if (canMate) {\n      let newBall = new Creature((mother.pos.x + father.pos.x) / 2, (mother.pos.y + father.pos.y) / 2, (mother.r + father.r) / 2, Math.random() > 0.5 ? \"F\" : \"M\", creatures);\n      console.log({\n        mother_y: mother.pos.y,\n        father_y: father.pos.y,\n        newBall: newBall.pos.y\n      });\n\n      if (birthCache.current.length > creatures.current.length / 2) {\n        birthCache.current.shift();\n      }\n\n      birthCache.current.push({\n        cacheMother: mother,\n        cacheFather: father\n      });\n    }\n  });\n}\n\nfunction matingPool(creatures) {\n  const vis = Array(creatures.current.length).fill(false);\n  const pairs = [];\n  const l = creatures.current.length;\n\n  for (let i = 0; i < l; i++) {\n    const observer = creatures.current[i];\n\n    if (!vis[i] && observer.gender == \"F\" && observer.isAdult && observer.isAbleToMate) {\n      vis[i] = true;\n\n      for (let j = i + 1; j < l; j++) {\n        const target = creatures.current[j];\n\n        if (!vis[j] && target.gender == \"M\" && target.isAdult && observer.pos.subtr(target.pos).mag() < 5) {\n          pairs.push({\n            mother: observer,\n            father: target\n          });\n          vis[j] = true;\n          break;\n        }\n      }\n    }\n  }\n\n  pairs.forEach(({\n    mother,\n    father\n  }) => {\n    let newBall = new Creature((mother.pos.x + father.pos.x) / 2, (mother.pos.y + father.pos.y) / 2, (mother.r + father.r) / 2, Math.random() > 0.5 ? \"F\" : \"M\", creatures);\n    mother.updateNotAbleToMate();\n  });\n}\n\nfunction findFood(creatures, foods) {\n  creatures.current.forEach((creature, index) => {\n    if (!creature.isFoodFound && creature.canEatFood) {\n      for (let i = 0; i < foods.current.length; i++) {\n        const food = foods.current[i];\n\n        if (food.pos.subtr(creature.pos).mag() < 20) {\n          creature.updateFoodFound(food.pos, food.id);\n          break;\n        }\n      }\n    } else {\n      if (creature.isFoodFound && creature.canEatFood && creature.pos.subtr(creature.foundFoodPosition).mag() < 5) {\n        let foodIndex = -1;\n\n        for (var i = 0; i < foods.current.length; i++) {\n          if (foods.current[i].id.localeCompare(creature.foodId) === 0) {\n            foodIndex = i;\n            break;\n          }\n        }\n\n        if (foodIndex !== -1) {\n          foods.current.splice(foodIndex, 1);\n          creature.updateFoodEaten();\n          creature.updateLastFoodTime();\n        }\n      }\n    }\n  });\n}\n\nfunction infection(creatures) {\n  let n = creatures.current.length;\n\n  for (let i = 0; i < n; i++) {\n    const observer = creatures.current[i];\n\n    if (observer.isInfected) {\n      for (let j = i + 1; j < n; j++) {\n        const target = creatures.current[j];\n\n        if (observer.pos.subtr(target.pos).mag() < 7) {\n          target.infect();\n        }\n      }\n    }\n  }\n}\n\nfunction die(creatures) {\n  for (let i = 0; i < creatures.current.length; i++) {\n    if (creatures.current[i].canDie()) {\n      creatures.current.splice(i, 1);\n    }\n  }\n}\n\nconst Earth = () => {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [ctx, setCtx] = useState(null);\n  const CREATURES = useRef([]);\n  const FOODS = useRef([]);\n  const localSpeed = useRef(0.5);\n  const birthCache = useRef([]);\n  const {\n    restarted,\n    calamityType,\n    calamities,\n    resources,\n    resourceType,\n    status,\n    speed,\n    initialPopulation\n  } = useGlobalState();\n  const {\n    setTotalPopulation\n  } = useGlobalActions();\n  const localStatus = useRef(status);\n  useEffect(() => {\n    localSpeed.current = speed;\n  }, [speed]);\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const canvas = document.getElementById(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvasRef.current.focus();\n      setCtx(ctx);\n    }\n  }, [canvasRef]);\n  useEffect(() => {\n    if (ctx) {\n      clearCanvas(ctx, canvasRef);\n      initPopulation(initialPopulation, CREATURES);\n      makeInitialFood(FOODS);\n    }\n  }, [ctx, restarted, initialPopulation]);\n  useEffect(() => {\n    let reqID = null;\n    localStatus.current = status;\n\n    if (status.localeCompare(\"Playing\") === 0) {\n      reqID = requestAnimationFrame(mainLoop);\n    }\n\n    return () => {\n      if (reqID) {\n        cancelAnimationFrame(reqID);\n      }\n    };\n  }, [status]);\n\n  function mainLoop(timestamp) {\n    if (localStatus.current.localeCompare(\"Playing\") === 0) {\n      clearCanvas(ctx, canvasRef);\n      findFood(CREATURES, FOODS);\n      die(CREATURES);\n      infection(CREATURES);\n      matingPool(CREATURES);\n      CREATURES.current.forEach((b, index) => {\n        b.reposition(ctx, localSpeed.current);\n        b.updateToAdult();\n        b.updateAbleToMate();\n        b.updateCanEatFood();\n        b.updateColor();\n        b.drawBall(ctx);\n      });\n      FOODS.current.forEach((f, index) => {\n        f.drawFood(ctx);\n      });\n      addRandomNumberOfFood(FOODS);\n      setTotalPopulation(CREATURES.current.length);\n      requestAnimationFrame(mainLoop);\n    }\n\n    return;\n  }\n\n  function handleCanvasClick(e) {\n    const mouse = new Vector(e.clientX, e.clientY);\n    const n = CREATURES.current.length;\n\n    for (let i = 0; i < n; i++) {\n      const observer = CREATURES.current[i];\n\n      if (observer.pos.subtr(mouse).mag() < 10) {\n        observer.infect();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    onClick: handleCanvasClick,\n    tabIndex: 1,\n    id: \"canvas\",\n    ref: canvasRef,\n    width: window.innerWidth - 300,\n    height: window.innerHeight,\n    style: {\n      backgroundColor: \"#222222\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"A9IaiK7BT/yhEgfGAzuJ7TVtH54=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/experiments/earth.js"],"names":["useEffect","useRef","useState","Vector","Creature","Wall","useGlobalState","useGlobalActions","Food","isPairEqual","a1","b1","a2","b2","localeCompare","randInt","min","max","Math","floor","random","clearCanvas","ctx","canvasRef","clearRect","current","clientWidth","clientHeight","initPopulation","n","creatures","i","newBall","window","innerWidth","innerHeight","makeInitialFood","foods","food","addRandomNumberOfFood","matingPoolWithCacheImplementation","birthCache","vis","Array","length","fill","pairs","l","observer","gender","isAdult","j","target","pos","subtr","mag","push","mother","father","forEach","canMate","cacheMother","cacheFather","id","x","y","r","console","log","mother_y","father_y","shift","matingPool","isAbleToMate","updateNotAbleToMate","findFood","creature","index","isFoodFound","canEatFood","updateFoodFound","foundFoodPosition","foodIndex","foodId","splice","updateFoodEaten","updateLastFoodTime","infection","isInfected","infect","die","canDie","Earth","setCtx","CREATURES","FOODS","localSpeed","restarted","calamityType","calamities","resources","resourceType","status","speed","initialPopulation","setTotalPopulation","localStatus","canvas","document","getElementById","getContext","focus","reqID","requestAnimationFrame","mainLoop","cancelAnimationFrame","timestamp","b","reposition","updateToAdult","updateAbleToMate","updateCanEatFood","updateColor","drawBall","f","drawFood","handleCanvasClick","e","mouse","clientX","clientY","backgroundColor"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Vector } from \"./vector\";\r\nimport { Creature } from \"./creature\";\r\nimport { Wall } from \"./wall\";\r\nimport { useGlobalState ,useGlobalActions} from \"../../context/globalContext\";\r\nimport { Food } from \"./food\";\r\n\r\nconst isPairEqual = (a1, b1, a2, b2) => {\r\n  // console.log(a1,b1,a2,b2);\r\n  if (\r\n    (a1.localeCompare(a2) === 0 || a1.localeCompare(b2) === 0) &&\r\n    (b1.localeCompare(a2) === 0 || b1.localeCompare(b2) === 0)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction randInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction clearCanvas(ctx, canvasRef) {\r\n  ctx?.clearRect(\r\n    0,\r\n    0,\r\n    canvasRef?.current?.clientWidth,\r\n    canvasRef?.current?.clientHeight\r\n  );\r\n}\r\n\r\nfunction initPopulation(n,creatures) {\r\n  creatures.current = [];\r\n  for (let i = 0; i < n; i++) {\r\n    let newBall = new Creature(\r\n      randInt(10, window.innerWidth - 300 - 10),\r\n      randInt(10, window.innerHeight - 10),\r\n      2,\r\n      Math.random() > 0.5 ? \"F\" : \"M\",\r\n      creatures\r\n    );\r\n  }\r\n  //   console.log(creatures);\r\n}\r\n\r\nfunction makeInitialFood(foods) {\r\n  foods.current = [];\r\n  for (let i = 0; i < 50; i++) {\r\n    const food = new Food(\r\n      randInt(10, window.innerWidth - 300 - 10),\r\n      randInt(10, window.innerHeight - 10),\r\n      foods\r\n    );\r\n  }\r\n}\r\n\r\nfunction addRandomNumberOfFood(foods){\r\n  if(Math.random()>0.8){\r\n    const food = new Food(\r\n      randInt(10, window.innerWidth - 300 - 10),\r\n      randInt(10, window.innerHeight - 10),\r\n      foods\r\n    );\r\n  }\r\n}\r\n\r\nfunction matingPoolWithCacheImplementation(creatures, birthCache) {\r\n  const vis = Array(creatures.current.length).fill(false);\r\n  const pairs = [];\r\n  const l = creatures.current.length;\r\n  // var pairs = 0;\r\n  for (let i = 0; i < l; i++) {\r\n    const observer = creatures.current[i];\r\n    if (!vis[i] && observer.gender == \"F\" && observer.isAdult) {\r\n      vis[i] = true;\r\n      for (let j = i + 1; j < l; j++) {\r\n        const target = creatures.current[j];\r\n        if (\r\n          !vis[j] &&\r\n          target.gender == \"M\" &&\r\n          target.isAdult &&\r\n          observer.pos.subtr(target.pos).mag() < 5\r\n        ) {\r\n          pairs.push({ mother: observer, father: target });\r\n          vis[j] = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pairs.forEach(({ mother, father }) => {\r\n    let canMate = true;\r\n    for (let i = 0; i < birthCache.current.length; i++) {\r\n      const { cacheMother, cacheFather } = birthCache.current[i];\r\n      if (isPairEqual(mother.id, father.id, cacheMother.id, cacheFather.id)) {\r\n        canMate = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (canMate) {\r\n      let newBall = new Creature(\r\n        (mother.pos.x + father.pos.x) / 2,\r\n        (mother.pos.y + father.pos.y) / 2,\r\n        (mother.r + father.r) / 2,\r\n        Math.random() > 0.5 ? \"F\" : \"M\",\r\n        creatures\r\n      );\r\n      console.log({\r\n        mother_y: mother.pos.y,\r\n        father_y: father.pos.y,\r\n        newBall: newBall.pos.y,\r\n      });\r\n      if (birthCache.current.length > creatures.current.length / 2) {\r\n        birthCache.current.shift();\r\n      }\r\n      birthCache.current.push({ cacheMother: mother, cacheFather: father });\r\n    }\r\n  });\r\n}\r\n\r\nfunction matingPool(creatures) {\r\n  const vis = Array(creatures.current.length).fill(false);\r\n  const pairs = [];\r\n  const l = creatures.current.length;\r\n\r\n  for (let i = 0; i < l; i++) {\r\n    const observer = creatures.current[i];\r\n    if (\r\n      !vis[i] &&\r\n      observer.gender == \"F\" &&\r\n      observer.isAdult &&\r\n      observer.isAbleToMate\r\n    ) {\r\n      vis[i] = true;\r\n      for (let j = i + 1; j < l; j++) {\r\n        const target = creatures.current[j];\r\n        if (\r\n          !vis[j] &&\r\n          target.gender == \"M\" &&\r\n          target.isAdult &&\r\n          observer.pos.subtr(target.pos).mag() < 5\r\n        ) {\r\n          pairs.push({ mother: observer, father: target });\r\n          vis[j] = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pairs.forEach(({ mother, father }) => {\r\n    let newBall = new Creature(\r\n      (mother.pos.x + father.pos.x) / 2,\r\n      (mother.pos.y + father.pos.y) / 2,\r\n      (mother.r + father.r) / 2,\r\n      Math.random() > 0.5 ? \"F\" : \"M\",\r\n      creatures\r\n    );\r\n    mother.updateNotAbleToMate();\r\n  });\r\n}\r\n\r\nfunction findFood(creatures,foods) {\r\n  creatures.current.forEach((creature,index)=>{\r\n    if(!creature.isFoodFound&&creature.canEatFood){\r\n      for (let i = 0; i < foods.current.length; i++) {\r\n        const food = foods.current[i];\r\n        if (food.pos.subtr(creature.pos).mag() < 20) {\r\n          creature.updateFoodFound(food.pos,food.id);\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      if (\r\n        creature.isFoodFound &&\r\n        creature.canEatFood &&\r\n        creature.pos.subtr(creature.foundFoodPosition).mag() < 5\r\n      ) {\r\n        let foodIndex = -1;\r\n        for(var i=0;i<foods.current.length;i++){\r\n          if(foods.current[i].id.localeCompare(creature.foodId)===0){\r\n            foodIndex = i;\r\n            break;\r\n          }\r\n        }\r\n        if(foodIndex!==-1){\r\n          foods.current.splice(foodIndex, 1);\r\n        creature.updateFoodEaten();\r\n        creature.updateLastFoodTime();}\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction infection(creatures) {\r\n  let n = creatures.current.length;\r\n  for (let i = 0; i < n; i++) {\r\n    const observer = creatures.current[i];\r\n    if (observer.isInfected) {\r\n      for (let j = i + 1; j < n; j++) {\r\n        const target = creatures.current[j];\r\n        if (observer.pos.subtr(target.pos).mag() < 7) {\r\n          target.infect();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction die(creatures){\r\n  for(let i=0;i<creatures.current.length;i++){\r\n    if(creatures.current[i].canDie()){\r\n      creatures.current.splice(i,1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst Earth = () => {\r\n  const canvasRef = useRef(null);\r\n  const [ctx, setCtx] = useState(null);\r\n  const CREATURES = useRef([]);\r\n  const FOODS = useRef([]);\r\n  const localSpeed = useRef(0.5);\r\n  const birthCache = useRef([]);\r\n  const {\r\n    restarted,\r\n    calamityType,\r\n    calamities,\r\n    resources,\r\n    resourceType,\r\n    status,\r\n    speed,\r\n    initialPopulation,\r\n  } = useGlobalState();\r\n\r\n  const {\r\n    setTotalPopulation\r\n  } = useGlobalActions();\r\n  const localStatus = useRef(status);\r\n\r\n  useEffect(()=>{\r\n    localSpeed.current = speed;\r\n  },[speed])\r\n  useEffect(() => {\r\n    if (canvasRef && canvasRef.current) {\r\n      const canvas = document.getElementById(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      canvasRef.current.focus();\r\n      setCtx(ctx);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  useEffect(() => {\r\n    if (ctx) {\r\n      clearCanvas(ctx, canvasRef);\r\n      initPopulation(initialPopulation,CREATURES);\r\n      makeInitialFood(FOODS);\r\n    }\r\n  }, [ctx,restarted,initialPopulation]);\r\n\r\n  useEffect(()  =>  {\r\n    let reqID =  null;\r\n    localStatus.current = status;\r\n    if  (status.localeCompare(\"Playing\")  ===  0)  {\r\n      reqID  = requestAnimationFrame(mainLoop);\r\n    }\r\n    return () => {\r\n      if(reqID){\r\n        cancelAnimationFrame(reqID);\r\n      }\r\n    };\r\n  },  [status]);\r\n\r\n  function mainLoop(timestamp) {\r\n    if (localStatus.current.localeCompare(\"Playing\") === 0) {\r\n      clearCanvas(ctx, canvasRef);\r\n      findFood(CREATURES, FOODS);\r\n      die(CREATURES);\r\n      infection(CREATURES);\r\n      matingPool(CREATURES);\r\n\r\n      CREATURES.current.forEach((b, index) => {\r\n        b.reposition(ctx, localSpeed.current);\r\n        b.updateToAdult();\r\n        b.updateAbleToMate();\r\n        b.updateCanEatFood();\r\n        b.updateColor();\r\n        b.drawBall(ctx);\r\n      });\r\n\r\n      FOODS.current.forEach((f, index) => {\r\n        f.drawFood(ctx);\r\n      });\r\n      addRandomNumberOfFood(FOODS);\r\n      setTotalPopulation(CREATURES.current.length);\r\n      requestAnimationFrame(mainLoop);\r\n    }\r\n    return ;\r\n  }\r\n\r\n  function handleCanvasClick(e) {\r\n    const mouse = new Vector(e.clientX, e.clientY);\r\n    const n = CREATURES.current.length;\r\n    for (let i = 0; i < n; i++) {\r\n      const observer = CREATURES.current[i];\r\n      if (observer.pos.subtr(mouse).mag() < 10) {\r\n        observer.infect();\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <canvas\r\n      onClick={handleCanvasClick}\r\n      tabIndex={1}\r\n      id=\"canvas\"\r\n      ref={canvasRef}\r\n      width={window.innerWidth - 300}\r\n      height={window.innerHeight}\r\n      style={{ backgroundColor: \"#222222\" }}\r\n    ></canvas>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}