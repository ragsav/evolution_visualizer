{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport EarthQuake from \"./earthQuake\"; // const demo = Array.from(Array(100).keys());\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Earth = () => {\n  _s();\n\n  const {\n    status,\n    restarted,\n    earthQuakePosition,\n    earthQuakeDuration\n  } = useGlobalState();\n  const {\n    setEarthQuakePosition\n  } = useGlobalActions();\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      const birthHandler = e => {\n        if (e.detail) {\n          e.detail.candidates.forEach(() => {\n            addNewCreature({\n              color: \"#FF0000\"\n            });\n          });\n        }\n      };\n\n      const deathHandler = e => {\n        if (e.detail) {\n          removeCreatureByUid(e.detail.uid);\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", birthHandler);\n      earthRef.current.addEventListener(\"death\", deathHandler);\n      return () => {\n        var _earthRef$current, _earthRef$current2;\n\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", birthHandler);\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.removeEventListener(\"death\", deathHandler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      birth: Date.now()\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature();\n    }\n  }\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n\n  function makeEarthQuake(x, y) {\n    var _earthRef$current3;\n\n    const event = new CustomEvent(\"earthQuake\", {\n      detail: {\n        x,\n        y\n      }\n    });\n    earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current3 = earthRef.current) === null || _earthRef$current3 === void 0 ? void 0 : _earthRef$current3.dispatchEvent(event);\n  }\n\n  useEffect(() => {\n    if (earthQuakePosition) {\n      const interval = setInterval(() => {\n        setEarthQuakePosition(null);\n      }, [earthQuakeDuration]);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [earthQuakePosition, earthQuakeDuration]);\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n\n    if (e.button === 0) {\n      makeEarthQuake(e.clientX - earthDimensions.left, e.clientY - earthDimensions.top);\n      setEarthQuakePosition({\n        x: e.clientX - earthDimensions.left,\n        y: e.clientY - earthDimensions.top\n      }); // addNewCreature({ color: \"#004CFF\" });\n    } else {\n      removeRandom();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: \"100%\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [/*#__PURE__*/_jsxDEV(EarthQuake, {\n      duration: 3000,\n      earthRef: earthRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        birth: creature.birth,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this);\n    }) : null, isStatsVisible === false ? /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Statisitcs, {\n      setIsStatsVisible: setIsStatsVisible,\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"8AhlESMLtCnTQnlmkJqkRs5+B+8=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","EarthQuake","Earth","status","restarted","earthQuakePosition","earthQuakeDuration","setEarthQuakePosition","creatures","setCreatures","earthDimensions","setEarthDimensions","isStatsVisible","setIsStatsVisible","earthRef","creaturesRef","current","birthHandler","e","detail","candidates","forEach","addNewCreature","color","deathHandler","removeCreatureByUid","uid","addEventListener","removeEventListener","creaturesTemp","push","birth","Date","now","removeRandom","splice","Math","floor","random","length","InitializeCreatures","i","top","offsetTop","left","offsetLeft","w","offsetWidth","h","offsetHeight","makeEarthQuake","x","y","event","CustomEvent","dispatchEvent","interval","setInterval","clearInterval","handleEarthMouseDown","preventDefault","button","clientX","clientY","backgroundColor","height","width","map","creature","position"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport EarthQuake from \"./earthQuake\";\r\n\r\n// const demo = Array.from(Array(100).keys());\r\n\r\nconst Earth = () => {\r\n  const { status, restarted ,earthQuakePosition,earthQuakeDuration} = useGlobalState();\r\n  const {setEarthQuakePosition} = useGlobalActions();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      const birthHandler = (e) => {\r\n        if (e.detail) {\r\n          e.detail.candidates.forEach(() => {\r\n            addNewCreature({ color: \"#FF0000\" });\r\n          });\r\n        }\r\n      };\r\n      const deathHandler = (e) => {\r\n        if (e.detail) {\r\n          removeCreatureByUid(e.detail.uid);\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", birthHandler);\r\n      earthRef.current.addEventListener(\"death\", deathHandler);\r\n      return () => {earthRef?.current?.removeEventListener(\"birth\", birthHandler);earthRef?.current?.removeEventListener(\"death\", deathHandler);}\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      birth:Date.now()\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n\r\n\r\n  function makeEarthQuake(x,y){\r\n\r\n    const event = new CustomEvent(\"earthQuake\", {\r\n      detail: { x,y },\r\n    });\r\n    earthRef?.current?.dispatchEvent(event);\r\n  }\r\n  useEffect(() => {\r\n    if (earthQuakePosition) {\r\n      const interval = setInterval(() => {\r\n        setEarthQuakePosition(null);\r\n        \r\n      }, [earthQuakeDuration]);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [earthQuakePosition,earthQuakeDuration]);\r\n\r\n\r\n  function handleEarthMouseDown(e)  {\r\n    e.preventDefault();\r\n    if (e.button === 0) {\r\n      makeEarthQuake(e.clientX-earthDimensions.left,e.clientY-earthDimensions.top)\r\n      setEarthQuakePosition({\r\n        x: e.clientX - earthDimensions.left,\r\n        y: e.clientY - earthDimensions.top,\r\n      });\r\n      // addNewCreature({ color: \"#004CFF\" });\r\n    } else {\r\n      removeRandom();\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{ backgroundColor: \"#222222\", height: \"100%\", width: \"100%\" }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      <EarthQuake duration={3000} earthRef = {earthRef}></EarthQuake>\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                birth={creature.birth}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          setIsStatsVisible={setIsStatsVisible}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}