{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Node from \"./node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Screen = () => {\n  _s();\n\n  const [population, setPopulation] = useState(1);\n  const screenRef = useRef(null);\n  useEffect(() => {\n    if (screenRef) {\n      console.log(screenRef);\n    }\n  }, [screenRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      backgroundColor: \"#1E1E1E\"\n    },\n    ref: screenRef,\n    children: (screenRef === null || screenRef === void 0 ? void 0 : screenRef.current) ? /*#__PURE__*/_jsxDEV(Node, {\n      bounds: {\n        w: screenRef.current.clientWidth,\n        h: screenRef.current.clientHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 113\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Screen, \"uQ+gZI3jPbeF3fn4GW9vbjgkWD8=\");\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["useEffect","useRef","useState","Card","Node","Screen","population","setPopulation","screenRef","console","log","height","width","backgroundColor","current","w","clientWidth","h","clientHeight"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEf,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BL,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAMM,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,SAAH,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEH;AACJ,GALQ,EAKP,CAACA,SAAD,CALO,CAAT;AAOA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAC,OAAR;AAAgBC,MAAAA,KAAK,EAAC,OAAtB;AAA8BC,MAAAA,eAAe,EAAC;AAA9C,KAAZ;AAAsE,IAAA,GAAG,EAAEL,SAA3E;AAAA,cACF,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEM,OAAX,iBAAmB,QAAC,IAAD;AAAM,MAAA,MAAM,EAAI;AAACC,QAAAA,CAAC,EAACP,SAAS,CAACM,OAAV,CAAkBE,WAArB;AAAiCC,QAAAA,CAAC,EAACT,SAAS,CAACM,OAAV,CAAkBI;AAArD,OAAhB;AAAA,6BAAoF;AAAA;AAAA;AAAA;AAAA;AAApF;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA4H;AAD1H;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAdD;;GAAMb,M;;KAAAA,M;AAgBN,eAAeA,MAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Node from \"./node\";\r\n\r\nconst Screen = ()=>{\r\n\r\n    const [population,setPopulation] = useState(1);\r\n    const screenRef = useRef(null);\r\n    useEffect(()=>{\r\n        if(screenRef){\r\n            console.log(screenRef);\r\n\r\n        }\r\n    },[screenRef])\r\n\r\n    return <div style={{height:\"100vh\",width:\"100vw\",backgroundColor:\"#1E1E1E\"}} ref={screenRef}>\r\n        {screenRef?.current?<Node bounds = {{w:screenRef.current.clientWidth,h:screenRef.current.clientHeight}}><span></span></Node>:null}\r\n    </div>\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}