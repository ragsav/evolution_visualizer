{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Creature from \"./creature\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Statisitcs from \"./statistics\";\nimport EarthQuake from \"./earthQuake\";\nimport Volcano from \"./volcana\";\nimport Radiation from \"./radiation\";\nimport WaterBody from \"./waterBody\"; // const demo = Array.from(Array(100).keys());\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Earth = () => {\n  _s();\n\n  const {\n    restarted,\n    calamityType,\n    calamities,\n    waterBodies\n  } = useGlobalState();\n  const {\n    setCalamityPosition,\n    setWaterBodyPosition\n  } = useGlobalActions();\n  const [creatures, setCreatures] = useState([]);\n  const [earthDimensions, setEarthDimensions] = useState(null);\n  const earthRef = /*#__PURE__*/createRef();\n  const creaturesRef = useRef([]);\n  const birthCache = useRef([]);\n\n  function newBirth(parents) {\n    const birthCacheTemp = birthCache.current;\n    const l = birthCacheTemp.length;\n    var canGiveBirth = true;\n\n    for (var i = 0; i < l; i++) {\n      if ((birthCacheTemp[i].mother.localeCompare(parents.mother) === 0 || birthCacheTemp[i].mother.localeCompare(parents.father) === 0) && (birthCacheTemp[i].father.localeCompare(parents.mother) === 0 || birthCacheTemp[i].father.localeCompare(parents.father) === 0)) {\n        // console.log(\"BirthCache hit!\", parents, birthCacheTemp);\n        canGiveBirth = false;\n        break;\n      }\n    }\n\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\n      addNewCreature({\n        x: parents.x,\n        y: parents.y\n      });\n      birthCacheTemp.push({ ...parents\n      });\n    }\n\n    if (birthCacheTemp.length > 100) {\n      birthCacheTemp.shift();\n    }\n\n    birthCache.current = birthCacheTemp;\n  }\n\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      console.log({\n        earthRef\n      });\n\n      const birthHandler = e => {\n        if (e.detail) {\n          newBirth({\n            mother: e.detail.mother,\n            father: e.detail.candidates[0].id,\n            x: Math.floor(e.detail.position.x + e.detail.candidates[0].offsetLeft) / 2,\n            y: Math.floor(e.detail.position.y + e.detail.candidates[0].offsetTop) / 2,\n            positionM: e.detail.position,\n            positionF: {\n              x: e.detail.candidates[0].offsetLeft,\n              y: e.detail.candidates[0].offsetTop\n            }\n          });\n        }\n      };\n\n      const deathHandler = e => {\n        if (e.detail) {\n          removeCreatureByUid(e.detail.uid);\n        }\n      };\n\n      earthRef.current.addEventListener(\"birth\", birthHandler);\n      earthRef.current.addEventListener(\"death\", deathHandler);\n      return () => {\n        var _earthRef$current, _earthRef$current2;\n\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current = earthRef.current) === null || _earthRef$current === void 0 ? void 0 : _earthRef$current.removeEventListener(\"birth\", birthHandler);\n        earthRef === null || earthRef === void 0 ? void 0 : (_earthRef$current2 = earthRef.current) === null || _earthRef$current2 === void 0 ? void 0 : _earthRef$current2.removeEventListener(\"death\", deathHandler);\n      };\n    }\n  }, [earthRef, earthRef.current]);\n\n  function addNewCreature(props) {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.push({\n      uid: uuidv4(),\n      birth: Date.now(),\n      x: props ? props.x : null,\n      y: props ? props.y : null\n    });\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function removeCreatureByUid(uid) {\n    const creaturesTemp = creaturesRef.current;\n\n    for (var i = 0; i < creaturesTemp.length; i++) {\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\n        creaturesTemp.splice(i, 1);\n        setCreatures([...creaturesTemp]);\n        creaturesRef.current = creaturesTemp;\n        break;\n      }\n    }\n  }\n\n  function removeRandom() {\n    const creaturesTemp = creaturesRef.current;\n    creaturesTemp.splice(Math.floor(Math.random() * creaturesRef.current.length), 1);\n    setCreatures([...creaturesTemp]);\n    creaturesRef.current = creaturesTemp;\n  }\n\n  function InitializeCreatures() {\n    creaturesRef.current = [];\n\n    for (var i = 0; i < 20; i++) {\n      addNewCreature();\n    }\n  }\n\n  useEffect(() => {\n    if (restarted) {\n      InitializeCreatures();\n    }\n  }, [restarted]);\n  useEffect(() => {\n    if (earthRef && earthRef.current && !earthDimensions) {\n      setEarthDimensions({\n        top: earthRef.current.offsetTop,\n        left: earthRef.current.offsetLeft,\n        w: earthRef.current.offsetWidth,\n        h: earthRef.current.offsetHeight\n      });\n    }\n  }, [earthRef]);\n\n  function handleEarthMouseDown(e) {\n    e.preventDefault();\n\n    if (e.button === 0) {\n      if (calamityType.localeCompare(\"none\") !== 0 && calamities.length < 5) {\n        setCalamityPosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        });\n      } else {\n        setWaterBodyPosition({\n          x: e.clientX - earthDimensions.left,\n          y: e.clientY - earthDimensions.top\n        });\n      }\n    } else {\n      removeRandom();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"earth\",\n    ref: earthRef,\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    onMouseDown: handleEarthMouseDown,\n    children: [waterBodies ? waterBodies.map(waterBody => {\n      return /*#__PURE__*/_jsxDEV(WaterBody, {\n        uid: waterBody.id,\n        size: waterBody.size,\n        position: waterBody.position\n      }, `${waterBody.id}+calamity`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }, this);\n    }) : null, calamities ? calamities.map(calamity => {\n      if (calamity.type.localeCompare(\"earthQuake\") === 0) {\n        return /*#__PURE__*/_jsxDEV(EarthQuake, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this);\n      } else if (calamity.type.localeCompare(\"volcano\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Volcano, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this);\n      } else if (calamity.type.localeCompare(\"radiation\") === 0) {\n        return /*#__PURE__*/_jsxDEV(Radiation, {\n          size: calamity.size,\n          amplitude: calamity.amplitude,\n          duration: calamity.duration,\n          position: calamity.position\n        }, `${calamity.id}+calamity`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this);\n      }\n    }) : null, earthRef && earthDimensions ? creatures.map(creature => {\n      return /*#__PURE__*/_jsxDEV(Creature, {\n        birth: creature.birth,\n        uid: creature.uid,\n        earthRef: earthRef,\n        dim: earthDimensions,\n        x: creature.x,\n        y: creature.y\n      }, creature.uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Earth, \"qisZrd9nwIQ+zdFWbfczJVffZhk=\", false, function () {\n  return [useGlobalState, useGlobalActions];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Card","v4","uuidv4","Creature","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Statisitcs","EarthQuake","Volcano","Radiation","WaterBody","Earth","restarted","calamityType","calamities","waterBodies","setCalamityPosition","setWaterBodyPosition","creatures","setCreatures","earthDimensions","setEarthDimensions","earthRef","creaturesRef","birthCache","newBirth","parents","birthCacheTemp","current","l","length","canGiveBirth","i","mother","localeCompare","father","addNewCreature","x","y","push","shift","console","log","birthHandler","e","detail","candidates","id","Math","floor","position","offsetLeft","offsetTop","positionM","positionF","deathHandler","removeCreatureByUid","uid","addEventListener","removeEventListener","props","creaturesTemp","birth","Date","now","splice","removeRandom","random","InitializeCreatures","top","left","w","offsetWidth","h","offsetHeight","handleEarthMouseDown","preventDefault","button","clientX","clientY","backgroundColor","height","width","overflow","map","waterBody","size","calamity","type","amplitude","duration","creature"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Creature from \"./creature\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Statisitcs from \"./statistics\";\r\nimport EarthQuake from \"./earthQuake\";\r\nimport Volcano from \"./volcana\";\r\nimport Radiation from \"./radiation\";\r\nimport WaterBody from \"./waterBody\";\r\n\r\n// const demo = Array.from(Array(100).keys());\r\n\r\nconst Earth = () => {\r\n  const { restarted, calamityType, calamities, waterBodies } = useGlobalState();\r\n  const { setCalamityPosition, setWaterBodyPosition } = useGlobalActions();\r\n  const [creatures, setCreatures] = useState([]);\r\n  const [earthDimensions, setEarthDimensions] = useState(null);\r\n  const earthRef = createRef();\r\n  const creaturesRef = useRef([]);\r\n  const birthCache = useRef([]);\r\n\r\n  \r\n\r\n  \r\n  function newBirth(parents) {\r\n    const birthCacheTemp = birthCache.current;\r\n    const l = birthCacheTemp.length;\r\n\r\n    var canGiveBirth = true;\r\n    for (var i = 0; i < l; i++) {\r\n      if (\r\n        (birthCacheTemp[i].mother.localeCompare(parents.mother) === 0 ||\r\n          birthCacheTemp[i].mother.localeCompare(parents.father) === 0) &&\r\n        (birthCacheTemp[i].father.localeCompare(parents.mother) === 0 ||\r\n          birthCacheTemp[i].father.localeCompare(parents.father) === 0)\r\n      ) {\r\n        // console.log(\"BirthCache hit!\", parents, birthCacheTemp);\r\n        canGiveBirth = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (birthCacheTemp.length === 0 || canGiveBirth) {\r\n      addNewCreature({ x: parents.x, y: parents.y });\r\n      birthCacheTemp.push({ ...parents });\r\n    }\r\n    if (birthCacheTemp.length > 100) {\r\n      birthCacheTemp.shift();\r\n    }\r\n    birthCache.current = birthCacheTemp;\r\n  }\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      console.log({earthRef});\r\n      const birthHandler = (e) => {\r\n        if (e.detail) {\r\n          newBirth({\r\n            mother: e.detail.mother,\r\n            father: e.detail.candidates[0].id,\r\n            x:\r\n              Math.floor(\r\n                e.detail.position.x + e.detail.candidates[0].offsetLeft\r\n              ) / 2,\r\n            y:\r\n              Math.floor(\r\n                e.detail.position.y + e.detail.candidates[0].offsetTop\r\n              ) / 2,\r\n            positionM: e.detail.position,\r\n            positionF: {\r\n              x: e.detail.candidates[0].offsetLeft,\r\n              y: e.detail.candidates[0].offsetTop,\r\n            },\r\n          });\r\n        }\r\n      };\r\n      const deathHandler = (e) => {\r\n        if (e.detail) {\r\n          removeCreatureByUid(e.detail.uid);\r\n        }\r\n      };\r\n      earthRef.current.addEventListener(\"birth\", birthHandler);\r\n      earthRef.current.addEventListener(\"death\", deathHandler);\r\n      return () => {\r\n        earthRef?.current?.removeEventListener(\"birth\", birthHandler);\r\n        earthRef?.current?.removeEventListener(\"death\", deathHandler);\r\n      };\r\n    }\r\n  }, [earthRef, earthRef.current]);\r\n\r\n  function addNewCreature(props) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.push({\r\n      uid: uuidv4(),\r\n      birth: Date.now(),\r\n      x: props ? props.x : null,\r\n      y: props ? props.y : null,\r\n    });\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function removeCreatureByUid(uid) {\r\n    const creaturesTemp = creaturesRef.current;\r\n    for (var i = 0; i < creaturesTemp.length; i++) {\r\n      if (creaturesTemp[i].uid.localeCompare(uid) === 0) {\r\n        creaturesTemp.splice(i, 1);\r\n        setCreatures([...creaturesTemp]);\r\n        creaturesRef.current = creaturesTemp;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function removeRandom() {\r\n    const creaturesTemp = creaturesRef.current;\r\n    creaturesTemp.splice(\r\n      Math.floor(Math.random() * creaturesRef.current.length),\r\n      1\r\n    );\r\n    setCreatures([...creaturesTemp]);\r\n    creaturesRef.current = creaturesTemp;\r\n  }\r\n\r\n  function InitializeCreatures() {\r\n    creaturesRef.current = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      addNewCreature();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (restarted) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [restarted]);\r\n\r\n  useEffect(() => {\r\n    if (earthRef && earthRef.current && !earthDimensions) {\r\n      setEarthDimensions({\r\n        top: earthRef.current.offsetTop,\r\n        left: earthRef.current.offsetLeft,\r\n        w: earthRef.current.offsetWidth,\r\n        h: earthRef.current.offsetHeight,\r\n      });\r\n    }\r\n  }, [earthRef]);\r\n\r\n  \r\n  \r\n\r\n  \r\n  function handleEarthMouseDown(e) {\r\n    e.preventDefault();\r\n    \r\n      if (e.button === 0) {\r\n        if(calamityType.localeCompare(\"none\")!==0&&calamities.length<5){\r\n          \r\n          setCalamityPosition({\r\n            x: e.clientX - earthDimensions.left,\r\n            y: e.clientY - earthDimensions.top,\r\n          });\r\n        }else{\r\n          setWaterBodyPosition({\r\n            x: e.clientX - earthDimensions.left,\r\n            y: e.clientY - earthDimensions.top,\r\n          });\r\n        }\r\n      } else {\r\n        removeRandom();\r\n      }\r\n    \r\n  }\r\n  return (\r\n    <div\r\n      id=\"earth\"\r\n      ref={earthRef}\r\n      style={{\r\n        backgroundColor: \"#222222\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n      }}\r\n      onMouseDown={handleEarthMouseDown}\r\n    >\r\n      {waterBodies\r\n        ? waterBodies.map((waterBody) => {\r\n            return (\r\n              <WaterBody\r\n                key={`${waterBody.id}+calamity`}\r\n                uid={waterBody.id}\r\n                size={waterBody.size}\r\n                position={waterBody.position}\r\n              ></WaterBody>\r\n            );\r\n          })\r\n        : null}\r\n      {calamities\r\n        ? calamities.map((calamity) => {\r\n            if (calamity.type.localeCompare(\"earthQuake\") === 0) {\r\n              return (\r\n                <EarthQuake\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            } else if (calamity.type.localeCompare(\"volcano\") === 0) {\r\n              return (\r\n                <Volcano\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            } else if (calamity.type.localeCompare(\"radiation\") === 0) {\r\n              return (\r\n                <Radiation\r\n                  key={`${calamity.id}+calamity`}\r\n                  size={calamity.size}\r\n                  amplitude={calamity.amplitude}\r\n                  duration={calamity.duration}\r\n                  position={calamity.position}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        : null}\r\n      {earthRef && earthDimensions\r\n        ? creatures.map((creature) => {\r\n            return (\r\n              <Creature\r\n                birth={creature.birth}\r\n                key={creature.uid}\r\n                uid={creature.uid}\r\n                earthRef={earthRef}\r\n                dim={earthDimensions}\r\n                x={creature.x}\r\n                y={creature.y}\r\n              ></Creature>\r\n            );\r\n          })\r\n        : null}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Earth;\r\n"]},"metadata":{},"sourceType":"module"}