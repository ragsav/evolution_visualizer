{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\themeContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = {\n  adultCreatureColor: \"#FF4489\",\n  babyCreatureColor: \"#E8FF95\",\n  earthColor: \"#2A2A2A\",\n  optionsColor: \"#ffffff\",\n  optionsFontColor: \"#252525\",\n  optionsBorderColor: \"#585858\",\n  buttonTheme: \"dark\"\n};\nconst ThemeStateContext = /*#__PURE__*/React.createContext(undefined);\nconst ThemeActionsContext = /*#__PURE__*/React.createContext(undefined);\n\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n\n  const [theme, setTheme] = useState(darkTheme);\n  return /*#__PURE__*/_jsxDEV(ThemeStateContext.Provider, {\n    value: {\n      theme\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeActionsContext.Provider, {\n      value: {\n        setTheme\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"PERTOzHjw2Beuv8Sm6p0fxSRqYQ=\");\n\n_c = ThemeProvider;\n\nconst useThemeState = () => {\n  _s2();\n\n  const context = React.useContext(ThemeStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useThemeState must be used within a ThemeProvider\");\n  }\n\n  return context;\n};\n\n_s2(useThemeState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useThemeActions = () => {\n  _s3();\n\n  const context = React.useContext(ThemeActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useThemeActions must be used within a ThemeProvider\");\n  }\n\n  return context;\n};\n\n_s3(useThemeActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useThemeState, useThemeActions, ThemeProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/themeContext.js"],"names":["React","useEffect","useState","darkTheme","adultCreatureColor","babyCreatureColor","earthColor","optionsColor","optionsFontColor","optionsBorderColor","buttonTheme","ThemeStateContext","createContext","undefined","ThemeActionsContext","ThemeProvider","children","theme","setTheme","useThemeState","context","useContext","Error","useThemeActions"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,kBAAkB,EAAE,SADJ;AAEhBC,EAAAA,iBAAiB,EAAE,SAFH;AAGhBC,EAAAA,UAAU,EAAE,SAHI;AAIhBC,EAAAA,YAAY,EAAE,SAJE;AAKhBC,EAAAA,gBAAgB,EAAE,SALF;AAMhBC,EAAAA,kBAAkB,EAAE,SANJ;AAOhBC,EAAAA,WAAW,EAAE;AAPG,CAAlB;AASA,MAAMC,iBAAiB,gBAAGX,KAAK,CAACY,aAAN,CAAoBC,SAApB,CAA1B;AACA,MAAMC,mBAAmB,gBAAGd,KAAK,CAACY,aAAN,CAAoBC,SAApB,CAA5B;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACC,SAAD,CAAlC;AAEA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA;AADK,KADT;AAAA,2BAKE,QAAC,mBAAD,CAAqB,QAArB;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA;AADK,OADT;AAAA,gBAKGF;AALH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBD;;GAAMD,a;;KAAAA,a;;AAoBN,MAAMI,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGpB,KAAK,CAACqB,UAAN,CAAiBV,iBAAjB,CAAhB;;AACA,MAAIS,OAAO,KAAKP,SAAhB,EAA2B;AACzB,UAAM,IAAIS,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACD,CAPD;;IAAMD,a;;AASN,MAAMI,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMH,OAAO,GAAGpB,KAAK,CAACqB,UAAN,CAAiBP,mBAAjB,CAAhB;;AACA,MAAIM,OAAO,KAAKP,SAAhB,EAA2B;AACzB,UAAM,IAAIS,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACD,CAPD;;IAAMG,e;;AASN,SAASJ,aAAT,EAAwBI,eAAxB,EAAyCR,aAAzC","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst darkTheme = {\r\n  adultCreatureColor: \"#FF4489\",\r\n  babyCreatureColor: \"#E8FF95\",\r\n  earthColor: \"#2A2A2A\",\r\n  optionsColor: \"#ffffff\",\r\n  optionsFontColor: \"#252525\",\r\n  optionsBorderColor: \"#585858\",\r\n  buttonTheme: \"dark\",\r\n};\r\nconst ThemeStateContext = React.createContext(undefined);\r\nconst ThemeActionsContext = React.createContext(undefined);\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(darkTheme);\r\n\r\n  return (\r\n    <ThemeStateContext.Provider\r\n      value={{\r\n        theme,\r\n      }}\r\n    >\r\n      <ThemeActionsContext.Provider\r\n        value={{\r\n          setTheme,\r\n        }}\r\n      >\r\n        {children}\r\n      </ThemeActionsContext.Provider>\r\n    </ThemeStateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useThemeState = () => {\r\n  const context = React.useContext(ThemeStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useThemeState must be used within a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nconst useThemeActions = () => {\r\n  const context = React.useContext(ThemeActionsContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useThemeActions must be used within a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\nexport { useThemeState, useThemeActions, ThemeProvider };\r\n"]},"metadata":{},"sourceType":"module"}