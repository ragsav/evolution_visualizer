{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\components\\\\screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createRef, useEffect, useRef, useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\nimport Creature from \"./creature\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Statisitcs from \"./statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usePrevious(value) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\nconst demo = Array.from(Array(20).keys());\n\nconst Screen = () => {\n  _s2();\n\n  // const {ground} = useGlobalState();\n  const {\n    setStatus\n  } = useGlobalActions();\n  const {\n    status\n  } = useGlobalState();\n  const [trueRef, setTrueRef] = useState(null);\n  const screenRef = useRef(null);\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\n  const [creatures, setCreatures] = useState([]);\n  const prevCreatures = usePrevious(creatures);\n\n  function InitializeCreatures() {\n    const creaturesInit = [];\n    demo.forEach((t, i) => {\n      const k = uuidv4();\n      creaturesInit.push( /*#__PURE__*/_jsxDEV(Creature, {\n        screenRef: screenRef,\n        uid: k,\n        setCreatures: setCreatures,\n        creatures: creatures,\n        bounds: {\n          l: screenRef.current.offsetLeft,\n          t: screenRef.current.offsetTop,\n          w: screenRef.current.clientWidth,\n          h: screenRef.current.clientHeight\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `${k}+spanOfCreature`\n        }, `${k}+spanOfCreature`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this));\n    });\n    console.log(creaturesInit);\n    setCreatures(creaturesInit);\n  }\n\n  useEffect(() => {\n    // console.log(creatures.length);\n    if (status.localeCompare(\"Playing\") === 0 && Math.random() > 0.7) {\n      console.log(prevCreatures.length, creatures.length);\n      const l = creatures.length;\n      const index = Math.random() * l;\n      const creaturesTemp = [...creatures];\n      creaturesTemp.splice(index, 1);\n      setCreatures([...creaturesTemp]);\n    }\n  }, [creatures]);\n  useEffect(() => {\n    if (status.localeCompare(\"Finished\") === 0) {\n      InitializeCreatures();\n    }\n  }, [status]);\n  useEffect(() => {\n    if (screenRef) {\n      if (screenRef.current) {\n        setTrueRef(screenRef.current);\n        InitializeCreatures();\n      }\n    }\n  }, [screenRef]);\n\n  function handleScreenClick(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"screen\",\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#1E1E1E\"\n    },\n    ref: screenRef,\n    onClick: e => handleScreenClick(e),\n    children: [isStatsVisible === false ? /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      },\n      onClick: e => {\n        e.preventDefault();\n        setIsStatsVisible(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(DehazeIcon, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Statisitcs, {\n      setIsStatsVisible: setIsStatsVisible,\n      style: {\n        position: \"absolute\",\n        top: 5,\n        left: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), trueRef && creatures.length > 0 ? creatures : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Screen, \"n/bND5ITDdbLShRFqaDtnitmBVk=\", false, function () {\n  return [useGlobalActions, useGlobalState, usePrevious];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/components/screen.js"],"names":["createRef","useEffect","useRef","useState","Button","Card","IconButton","DehazeIcon","useGlobalActions","useGlobalState","Creature","v4","uuidv4","Statisitcs","usePrevious","value","ref","current","demo","Array","from","keys","Screen","setStatus","status","trueRef","setTrueRef","screenRef","isStatsVisible","setIsStatsVisible","creatures","setCreatures","prevCreatures","InitializeCreatures","creaturesInit","forEach","t","i","k","push","l","offsetLeft","offsetTop","w","clientWidth","h","clientHeight","console","log","localeCompare","Math","random","length","index","creaturesTemp","splice","handleScreenClick","e","preventDefault","height","width","backgroundColor","position","top","left","color"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { useGlobalActions, useGlobalState } from \"../context/globalContext\";\r\nimport Creature from \"./creature\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Statisitcs from \"./statistics\";\r\n\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\n\r\n\r\nconst demo = Array.from(Array(20).keys());\r\nconst Screen = () => {\r\n  // const {ground} = useGlobalState();\r\n  const { setStatus } = useGlobalActions();\r\n  const { status } = useGlobalState();\r\n  const [trueRef, setTrueRef] = useState(null);\r\n  const screenRef = useRef(null);\r\n\r\n  const [isStatsVisible, setIsStatsVisible] = useState(false);\r\n  const [creatures, setCreatures] = useState([]);\r\n  const prevCreatures = usePrevious(creatures);\r\n\r\n  function InitializeCreatures() {\r\n    const creaturesInit = [];\r\n    demo.forEach((t, i) => {\r\n      const k = uuidv4();\r\n\r\n      creaturesInit.push(\r\n        <Creature\r\n          screenRef={screenRef}\r\n          uid={k}\r\n          key={k}\r\n          setCreatures={setCreatures}\r\n          creatures={creatures}\r\n          bounds={{\r\n            l: screenRef.current.offsetLeft,\r\n            t: screenRef.current.offsetTop,\r\n            w: screenRef.current.clientWidth,\r\n            h: screenRef.current.clientHeight,\r\n          }}\r\n        >\r\n          <span key={`${k}+spanOfCreature`} id={`${k}+spanOfCreature`}></span>\r\n        </Creature>\r\n      );\r\n    });\r\n    console.log(creaturesInit);\r\n    setCreatures(creaturesInit);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(creatures.length);\r\n\r\n    if (\r\n      status.localeCompare(\"Playing\") === 0 &&\r\n      Math.random() > 0.7\r\n      \r\n    ) {\r\n      console.log(prevCreatures.length,    creatures.length);\r\n      const l = creatures.length;\r\n      const index = Math.random() * l;\r\n      const creaturesTemp = [...creatures];\r\n      creaturesTemp.splice(index, 1);\r\n      setCreatures([...creaturesTemp]);\r\n    }\r\n  }, [creatures]);\r\n\r\n  useEffect(() => {\r\n    if (status.localeCompare(\"Finished\") === 0) {\r\n      InitializeCreatures();\r\n    }\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    if (screenRef) {\r\n      if (screenRef.current) {\r\n        setTrueRef(screenRef.current);\r\n        InitializeCreatures();\r\n      }\r\n    }\r\n  }, [screenRef]);\r\n\r\n  function handleScreenClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id=\"screen\"\r\n      style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#1E1E1E\" }}\r\n      ref={screenRef}\r\n      onClick={(e) => handleScreenClick(e)}\r\n    >\r\n      {isStatsVisible === false ? (\r\n        <IconButton\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setIsStatsVisible(true);\r\n          }}\r\n        >\r\n          <DehazeIcon style={{ color: \"white\" }}></DehazeIcon>\r\n        </IconButton>\r\n      ) : (\r\n        <Statisitcs\r\n          setIsStatsVisible={setIsStatsVisible}\r\n          style={{ position: \"absolute\", top: 5, left: 5 }}\r\n        ></Statisitcs>\r\n      )}\r\n\r\n      {(trueRef&&creatures.length>0) ? creatures : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}