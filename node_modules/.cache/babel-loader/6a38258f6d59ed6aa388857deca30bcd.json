{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Fun\\\\genetic algorithm\\\\src\\\\context\\\\globalContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createRef, useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStateContext = /*#__PURE__*/React.createContext(undefined);\nconst GlobalActionsContext = /*#__PURE__*/React.createContext(undefined);\nconst bounds = {\n  w: 1000,\n  h: 700,\n  l: 10,\n  t: 10\n};\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      if (typeof (savedCallback === null || savedCallback === void 0 ? void 0 : savedCallback.current) !== \"undefined\") {\n        savedCallback === null || savedCallback === void 0 ? void 0 : savedCallback.current();\n      }\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nconst ga = function* () {\n  const creatures = Array(100).fill({});\n  console.log(bounds);\n  creatures.forEach((val, index) => {\n    creatures[index] = {\n      x: Math.floor(Math.random() * bounds.w),\n      y: Math.floor(Math.random() * bounds.h)\n    };\n  });\n  console.log(creatures);\n\n  for (var i = 0; i < 100; i++) {\n    for (var j = 0; j < 100; j++) {\n      const pos = [1, -1];\n      const skipX = Math.floor(Math.random() * 50);\n      const skipY = Math.floor(Math.random() * 50);\n      const plusMinusX = Math.floor(Math.random() * 2);\n      const plusMinusY = Math.floor(Math.random() * 2);\n      const newPosition = {\n        x: creatures[j].x + pos[plusMinusX] * skipX,\n        y: creatures[j].y + pos[plusMinusY] * skipY\n      };\n\n      if (newPosition.x > bounds.w + bounds.l) {\n        newPosition.x = bounds.w;\n      }\n\n      if (newPosition.y > bounds.h + bounds.t) {\n        newPosition.y = bounds.h;\n      }\n\n      if (newPosition.x < bounds.l) {\n        newPosition.x = bounds.l;\n      }\n\n      if (newPosition.y < bounds.t) {\n        newPosition.y = bounds.t;\n      }\n\n      creatures[j] = newPosition;\n    }\n\n    yield {\n      creatures\n    };\n  }\n};\n\nconst GlobalContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n  const gaProcessSteps = ga();\n  useInterval(() => {\n    // console.log(gaProcessSteps)\n    if (!gaProcessSteps) return;\n    const next = gaProcessSteps.next();\n    console.log(next);\n    if (next.done) return;\n    const creatureState = next.value;\n    setCreatures(creatureState.creatures);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      creatures\n    },\n    children: /*#__PURE__*/_jsxDEV(GlobalActionsContext.Provider, {\n      value: {\n        setCreatures\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(GlobalContextProvider, \"o8bHaBlAS7zZsqSVGw1QWYoUDkc=\", false, function () {\n  return [useInterval];\n});\n\n_c = GlobalContextProvider;\n\nconst useGlobalState = () => {\n  _s3();\n\n  const context = React.useContext(GlobalStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalState error\");\n  }\n\n  return context;\n};\n\n_s3(useGlobalState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst useGlobalActions = () => {\n  _s4();\n\n  const context = React.useContext(GlobalActionsContext);\n\n  if (context === undefined) {\n    throw new Error(\"useGlobalActions error\");\n  }\n\n  return context;\n};\n\n_s4(useGlobalActions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["E:/projects/Fun/genetic algorithm/src/context/globalContext.js"],"names":["React","createRef","useEffect","useState","useRef","GlobalStateContext","createContext","undefined","GlobalActionsContext","bounds","w","h","l","t","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","ga","creatures","Array","fill","console","log","forEach","val","index","x","Math","floor","random","y","i","j","pos","skipX","skipY","plusMinusX","plusMinusY","newPosition","GlobalContextProvider","children","setCreatures","from","keys","gaProcessSteps","next","done","creatureState","value","useGlobalState","context","useContext","Error","useGlobalActions"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useState ,useRef} from \"react\";\n\n\n\nconst GlobalStateContext = React.createContext(undefined);\nconst GlobalActionsContext = React.createContext(undefined);\n\n\nconst bounds = {w:1000,h:700,l:10,t:10}\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (typeof savedCallback?.current !== \"undefined\") {\n        savedCallback?.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n\n\n\nconst ga = function*(){\n\n  const creatures = Array(100).fill({});\n  console.log(bounds)\n  creatures.forEach((val,index)=>{\n    creatures[index] = {\n      x: Math.floor(Math.random() * bounds.w),\n      y: Math.floor(Math.random() * bounds.h),\n    };\n  })\n  console.log(creatures)\n  \n  for (var i = 0; i < 100; i++) {\n    for(var j=0;j<100;j++){\n      const pos = [1, -1];\n      const skipX = Math.floor(Math.random() * 50);\n      const skipY = Math.floor(Math.random() * 50);\n\n      const plusMinusX = Math.floor(Math.random() * 2);\n      const plusMinusY = Math.floor(Math.random() * 2);\n\n      const newPosition = {\n        x: creatures[j].x + pos[plusMinusX] * skipX,\n        y: creatures[j].y + pos[plusMinusY] * skipY,\n      };\n      if (newPosition.x > bounds.w + bounds.l) {\n        newPosition.x = bounds.w;\n      }\n      if (newPosition.y > bounds.h + bounds.t) {\n        newPosition.y = bounds.h;\n      }\n      if (newPosition.x < bounds.l) {\n        newPosition.x = bounds.l;\n      }\n      if (newPosition.y < bounds.t) {\n        newPosition.y = bounds.t;\n      }\n\n      creatures[j] = newPosition;\n    }\n    yield{creatures}\n  }\n}\n\nconst GlobalContextProvider = ({ children }) => {\n  \n\n  \n  const [creatures, setCreatures] = useState(Array.from(Array(100).keys()));\n \n  const gaProcessSteps = ga();\n\n  \n    \n\n\n  \n\n\n  useInterval(() => {\n    // console.log(gaProcessSteps)\n    \n    if (!gaProcessSteps) return;\n    const next = gaProcessSteps.next();\n    console.log(next);\n    if (next.done) return ;\n    const creatureState = next.value;\n    setCreatures(creatureState.creatures);\n  }, 1000);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        creatures,\n      }}\n    >\n      <GlobalActionsContext.Provider value={{ setCreatures }}>\n        {children}\n      </GlobalActionsContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useGlobalState = () => {\n  const context = React.useContext(GlobalStateContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalState error\"\n    );\n  }\n\n  return context;\n};\n\nconst useGlobalActions = () => {\n  const context = React.useContext(GlobalActionsContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useGlobalActions error\"\n    );\n  }\n\n  return context;\n};\n\nexport { useGlobalState, useGlobalActions, GlobalContextProvider };\n"]},"metadata":{},"sourceType":"module"}